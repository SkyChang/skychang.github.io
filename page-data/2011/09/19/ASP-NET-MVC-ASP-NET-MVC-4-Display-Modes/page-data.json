{"componentChunkName":"component---src-templates-page-js","path":"/2011/09/19/ASP-NET-MVC-ASP-NET-MVC-4-Display-Modes/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ASP.NET MVC - ASP.NET MVC 4 Display Modes","date":"19 September 2011","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC"],"coverImage":null},"id":"61ee2a96-51f9-5a65-a12f-fd1591e0fcf7","html":"<p><font color=\"#ff0000\">2012/02/25 配合Beta大幅度更新!! 幾乎全更新了= =</font></p>\n<p>經過上一篇<strike><font color=\"#cccccc\">騙完稿費</font></strike>認真介紹完後，為了不要讓大家太失望，所以我們介紹一下，Display Modes!，這就是ASP.NET MVC 4的新技術了，雖然說，我們可以開發Mobile專案，但如果我們今天同一個網址，要讓行動裝置和PC呈現的感覺不一樣呢?而且又不想利用HTML配合CSS動態調整樣板的方式，想針對行動裝置做不同的頁面，但是同網址，該怎麼辦呢?沒錯，這就是Display Modes的目的。</p>\n<p>在說Display Modes之前，有一點要先聲明，前面為什麼我會稱為\"範例樣本\"，是因為我覺得這些算是範例的展示，通常我還是習慣開一個空白的慢慢加，並不一定說我要開發手機，就必須要使用手機樣板，我只要把開發手機上所需要的東西於空白專案內準備好就好了( 例如:jQuery Mobile )，我也可以在空白樣板上面實作桌上型的網頁和手機上的網頁，我只要使用Display Modes就可以了，簡單的說，我覺得這\"範例樣板\"只是方便於展示、快速使用而已，所以我會稱之為\"範例樣板\"。</p>\n<p>ok，回到主題，我們現在要探討的是Display Modes，其實他的概念很簡單，只是去判斷你是否用行動裝置上網，如果是，就顯示行動專用的View，如果不是，就顯示一般的View，所以我現在要將原本的Application範例樣板，加上Mobile的範例樣板。</p>\n<p><font color=\"#ff0000\">其實這個Demo還滿無聊的，所以不想看Demo，只想看怎麼實作Display Modes的人，可以直接跳到最後。</font></p>\n<p>首先，我們在桌上型電腦上看到的畫面會是。</p>\n<p><a href=\"http://lh4.ggpht.com/-rFV708pUsxI/Tnde8U_H3VI/AAAAAAAAAkE/PxhXTYmNJ8Y/s1600-h/image%25255B4%25255D.png\"><img src=\"http://lh3.ggpht.com/-Bupzl-_M05A/Tnde9HPf-TI/AAAAAAAAAkI/SZldBQhLdEQ/image_thumb%25255B2%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>ok，現在我們開始打造( 複製 )，首先，我們先在目標的專案上，建立一個MobileContent的目錄，準備來存放專門給Mobile用的CSS。</p>\n<p><a href=\"http://lh4.ggpht.com/-Ys2EIe_YY8w/T0jIfgzFa4I/AAAAAAAABgE/TcDgdN4RhmY/s1600-h/image%25255B16%25255D.png\"><img src=\"http://lh3.ggpht.com/-CgukzJGDju8/T0jIg8EflyI/AAAAAAAABgM/HAuXxICPJUM/image_thumb%25255B8%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>然後我們把行動範例樣板上的Content底下的Images整個目錄還有jQuery.mobile開頭的css和Site.css拷貝到這個專案的MobileContent目錄下，然後Scripts目錄下的jQuery.mobile開頭的js也拷貝過來；因為ASP.NET MVC 4的Mobile專案，實際上是使用jQuery Mobile來達成Mobile頁面的效果，而這些檔案也正是jQuery Mobile要用到的檔案，要拷貝的檔案如下圖。</p>\n<p><a href=\"http://lh4.ggpht.com/-p2Yux4D2rJA/T0jIhmfZGHI/AAAAAAAABgU/nR96ATriHmI/s1600-h/image%25255B20%25255D.png\"><img src=\"http://lh3.ggpht.com/-hful03ziG5c/T0jIi0iXyMI/AAAAAAAABgc/_4Z64SZK8Dw/image_thumb%25255B10%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，我們把行動板的view拷貝過來，並且重新命名，例如:行動版的首頁名稱叫做index.cshtml，那我們先改名成index.mobile.cshtml並且複製到此專案，其餘的Layout.cshtml也是一樣，改名為Layout.mobile.cshtml後，複製到此專案，然後也把jQuery.mobile和image複製過來，完成後如下圖。( 這裡只針對首頁，其他的頁面因為太懶了，就不動了 )</p>\n<p><a href=\"http://lh4.ggpht.com/-U5oIa-br5ik/T0jIkDOT6SI/AAAAAAAABgk/Y-TV7OU1UM8/s1600-h/image%25255B8%25255D.png\"><img src=\"http://lh5.ggpht.com/-Kr1fbrrH5S8/T0jIlPKo54I/AAAAAAAABgs/Rr3osqgS6Xs/image_thumb%25255B4%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>做到這邊，大家應該就有感覺了，沒錯，ASP.NET MVC 4的Display Modes，其實就是利用檔名來辨別要顯示的網頁，所以當手機瀏覽時就會自動執行有mobile的檔案，例如手機執行首頁時，他就不會呼叫index.cshtml而是會呼叫index.mobile.cshtml，同樣道理也適用於Layout，所以Layout.mobile的檔案，就是給行動裝置使用；接下來，我們要修改一下Global.asax這個檔案；我們要把BundleTable.Bundles.RegisterTemplateBundles();這個註解起來，並起換上BundleTable.Bundles.EnableDefaultBundles();。</p>\n<pre class=\"brush: csharp;\">protected void Application_Start()\n{\n    AreaRegistration.RegisterAllAreas();\n\n    RegisterGlobalFilters(GlobalFilters.Filters);\n    RegisterRoutes(RouteTable.Routes);\n    BundleTable.Bundles.EnableDefaultBundles();\n\n    //BundleTable.Bundles.RegisterTemplateBundles();\n}\n</pre>\n<p>BundleTable.Bundles.RegisterTemplateBundles();也是ASP.NET MVC 4的新功能，它可以將整個CSS或是JS目錄包裝起來，讓傳輸更有效率，而BundleTable.Bundles.RegisterTemplateBundles();代表著使用預設的樣板目錄，但因為我們的Mobile用CSS是放在MobileContent，和原本預設的樣板目錄( Content )不一樣，所以我們要改用BundleTable.Bundles.EnableDefaultBundles();這個方法，這個發法就可以自訂自己想要包裝的目錄，未來會有一篇專門的主題來講這個，這裡暫時先講到這邊。</p>\n<p>然後我們改一下_Layout.mobile.cshtml程式碼，讓他能把整個MobileContent這個目錄下的css包起來。( 下面的路徑是寫著MobileContent/css，但不代表是把css目錄下的東西包起來，而是代表著MobileContent底下所有的css檔案。 )</p>\n<p><a href=\"http://lh6.ggpht.com/-obue4uLJbFE/T0jImRd82WI/AAAAAAAABg0/lDoEQjGFBws/s1600-h/image%25255B24%25255D.png\"><img src=\"http://lh6.ggpht.com/-rntWhmGnGXs/T0jInWxoqNI/AAAAAAAABg4/tmiIJxZvJZI/image_thumb%25255B12%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>完成後編譯執行，並利用手機上網，就可以看到下面這個頁面了!!( 我很想拿Windows Phone Demo，但我只有iPhone… )</p>\n<p><a href=\"http://lh6.ggpht.com/-kgjD_M7bOVI/T0jIoYdoISI/AAAAAAAABhE/4eMK3XAYEDA/s1600-h/IMG_0375%25255B3%25255D.png\"><img src=\"http://lh3.ggpht.com/-KkRGtfGe38k/T0jIpRrFFiI/AAAAAAAABhM/ITl43ohwiIM/IMG_0375_thumb%25255B1%25255D.png?imgmax=800\" alt=\"IMG_0375\" title=\"IMG_0375\"></a></p>\n<p>所以，就如前面所說，Display Modes提供了一個讓不同裝置可以瀏覽不同頁面的方式，而且不需要更改到程式碼，ASP.NET MVC會自動辨識，只需要另外增加一個含有mobile的檔名 ( 例如 :  index.mobile.cshtml就是給行動裝置用的 )，而且不只普通的view，連Layout也一樣適用!</p>\n<p>最後一個程式碼，如果今天要針對不同的行動裝置產生不同的頁面，該怎麼辦呢?這時候，就必須去修改Global.asax。</p>\n<pre class=\"brush: csharp;\">protected void Application_Start()\n{\n    AreaRegistration.RegisterAllAreas();\n\n    RegisterGlobalFilters(GlobalFilters.Filters);\n    RegisterRoutes(RouteTable.Routes);\n    BundleTable.Bundles.EnableDefaultBundles();\n\n    //BundleTable.Bundles.RegisterTemplateBundles();\n    DisplayModeProvider.Instance.Modes.Insert(0, new DefaultDisplayMode(\"iPhone\")\n    {\n        ContextCondition = (context =&gt; context.GetOverriddenUserAgent().IndexOf\n            (\"iPhone\", StringComparison.OrdinalIgnoreCase) &gt;= 0)\n    });\n}\n</pre>\n<p>如上程式碼，就定義了給iPhone裝置用的，所以我們就可以將檔案命名為index.iPhone.cshtml，這樣ASP.NET MVC遇到iPhone就會執行這個view。</p>\n<p>最後，這次的ASP.NET MVC 4為了配合未來行動裝置，所以提供了這一解決方案，也善加的利用了ASP.NET MVC的特性，簡單且易懂的方式來拆離原本要處理各種行動裝置的複雜問題，但每次要增加那麼多東西，其實還滿麻煩的，所以如果使用NuGet取得jQuery Mobile，其實剛剛我們做過的動作，NuGet都會自動幫我們執行完畢 ( 說到這，會不會打我啊QQ )，但無論如何，我相信，看過一遍，會更加的明瞭整個增加的東西與架構，所以，請大家不要罵我喔~~</p>\n<h4>參考資料</h4>\n<ul>\n<li><a href=\"http://www.asp.net/whitepapers/mvc4-release-notes\" title=\"http://www.asp.net/whitepapers/mvc4-release-notes\">http://www.asp.net/whitepapers/mvc4-release-notes</a></li>\n</ul>","excerpt":"2012/02/25 配合Beta大幅度更新!! 幾乎全更新了= = 經過上一篇騙完稿費認真介紹完後，為了不要讓大家太失望，所以我們介紹一下，Display Modes!，這就是ASP.NET MVC 4的新技術了，雖然說，我們可以開發Mobile…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"ASP.NET MVC - ASP.NET MVC 4 Mobile範例樣板","tags":["ASP.NET MVC"]},"fields":{"slug":"/2011/09/19/ASP-NET-MVC-ASP-NET-MVC-4-Mobile範例樣板/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-ASP-NET-MVC-4-Mobile範例樣板.md"},"previous":{"frontmatter":{"path":null,"title":"開發人應該學的，用Visual Studio開發SQL( SQL Server Data Tools ) -  DataBase Project模式","tags":["SQL Server","Tools","Visual Studio"]},"fields":{"slug":"/2011/09/20/開發人應該學的，用Visual-Studio開發SQL-SQL-Server-Data-Tools-DataBase-Project模式/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/開發人應該學的，用Visual-Studio開發SQL-SQL-Server-Data-Tools-DataBase-Project模式.md"}}}}