{"componentChunkName":"component---src-templates-page-js","path":"/2011/09/26/ASP-NET-MVC-Controller-和-Action/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ASP.NET MVC Controller 和 Action","date":"26 September 2011","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC"],"coverImage":null},"id":"d7d0b4eb-1347-5fc6-b719-2c86f0338661","html":"<p>當使用者Keyin網址後，瀏覽器送出請求，而透過Routing機制後，緊接著的就是Controller，就如前面MVC架構所敘說的，Controller控制著所有的流程 ( 不然他怎麼會叫做Controller!? )，取得Model、決定View，這些工作都是在Controller裡面進行，我們先看一下簡單的Controller吧。</p>\n<p>假設網址是 <a href=\"http://blog.sanc.idv.tw/home/index\">blog.sanc.idv.tw/home/index</a></p>\n<p>( 這個網址沒有打錯喔，還記得前面講的嗎，MVC的網址和以前我們熟悉的index.html這種檔案式的架構不同，所有的網址要求，會透過Routing重新轉送。 )</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\n\nnamespace MvcWebRole1.Controllers\n{\n    //HomeController代表著blog.sanc.idv.tw/Home &lt;--這個路徑\n    public class HomeController : Controller \n    {\n        //這個Function代表著blog.sanc.idv.tw/Home/Index &lt;--這個路徑\n        public ActionResult Index()\n        {\n            return View();\n        }\n\n        public ActionResult About()\n        {\n            return View();\n        }\n\n        public ActionResult Contact()\n        {\n            return View();\n        }\n    }\n}\n</pre>\n<p>所以，blog.sanc.idv.tw/Home對應到的是一個類別，也就是HomeController這個類別，而blog.sanc.idv.tw/Home/Index對應到的是HomeController這個類別的Index這個方法，裡面我們還可以看到About、Contact，其實也分別會對應到blog.sanc.idv.tw/Home/About和blog.sanc.idv.tw/Contact這兩個路徑。</p>\n<p>所以我們可以知道，當瀏覽器請求進來的時候，就會到對應的Controller裡面，對應的Function來做指定的事情，而這個Function在MVC裡面，我們又稱為Action，( 所以未來我會用Action來稱呼 )。</p>\n<p>到這邊，我們算是複習複習之前講的，接下來我們在繼續往下看看Controller和Action。</p>\n<h4>ActionResult</h4>\n<p>我們將Controller的其中一個Action拉出來看一下。</p>\n<pre class=\"brush: csharp;\">public ActionResult Index()\n{\n    return View();\n}\n</pre>\n<p>我們可以看到，這個Action的回傳值是一個ActionResult型別，其實這是一個抽象型別，最後一行的return View();，其實會回傳一個ViewResult型別，而這個型別就是繼承於ActionResult型別，最後，Controller就會利用取得的這個ActionResult裡面的ExecuteResult方法，將畫面 ( 或是其他結果 )傳回使用者端。</p>\n<p>既然ActionResult是抽象型別，也就表示會有很多的類別繼承於他，接下來，我們會開始介紹型別。</p>\n<h4>ASP.NET MVC 3 可用的ActionResult的型別</h4>\n<p>下面是可用的型別列表，後續會一個一個寫上範例，Controller Helper Methods代表的是可以讓我們快速地去使用，例如return View();的View()，他就會產生一個ViewResult型別出來。</p>\n<table width=\"624\">\n<thead>\n<tr>\n<th width=\"155\">型別</th>\n<th width=\"272\">簡介</th>\n<th width=\"195\">Controller Helper Methods</th></tr></thead>\n<tbody>\n<tr>\n<td width=\"155\">EmptyResult</td>\n<td width=\"272\">甚麼事都不做…</td>\n<td width=\"195\">無</td></tr>\n<tr>\n<td width=\"155\">ContentResult</td>\n<td width=\"272\">回傳文字至瀏覽器，可以自行設定content-type。</td>\n<td width=\"195\">Content</td></tr>\n<tr>\n<td width=\"155\">FileResult</td>\n<td width=\"272\">回傳二位元資料，例如Server上的mp3等檔案。</td>\n<td width=\"195\">File</td></tr>\n<tr>\n<td width=\"155\">ViewResult</td>\n<td width=\"272\">呈現指定或是預設的View。</td>\n<td width=\"195\">View</td></tr>\n<tr>\n<td width=\"155\">PartialViewResult</td>\n<td width=\"272\">呈現指定或是預設的View樣板</td>\n<td width=\"195\">PartialView</td></tr>\n<tr>\n<td width=\"155\">RedirectToRouteResult</td>\n<td width=\"272\">如果產生HTTP 301、302則會重新導向到另外一個Action或是其他指定的URL、或是設定好的Router。</td>\n<td width=\"195\">\n<p>RedirectToAction\nRedirectToActionPermanent\nRedirectToRoute\nRedirectToRoutePermanent</p>\n</td></tr>\n<tr>\n<td width=\"155\">RedirectResult</td>\n<td width=\"272\">如果產生HTTP 301、302則會導向至另外一個URL。</td>\n<td width=\"195\">Redirect\nRedirectPermanent</td></tr>\n<tr>\n<td width=\"155\">JsonResult</td>\n<td width=\"272\">將.net 物件序列化成Json格式並回傳。</td>\n<td width=\"195\">Json</td></tr>\n<tr>\n<td width=\"155\">JavaScriptResult</td>\n<td width=\"272\">回傳一個JavaScript的程式碼片段，通常用於Ajax裡面。</td>\n<td width=\"195\">JavaScript</td></tr>\n<tr>\n<td width=\"155\">HttpUnauthorizedResult</td>\n<td width=\"272\">回傳HTTP 401 ( 未授權 )。</td>\n<td width=\"195\">None</td></tr>\n<tr>\n<td width=\"155\">HttpNotFoundResult</td>\n<td width=\"272\">回傳HTTP 404。</td>\n<td width=\"195\">HttpNotFound</td></tr>\n<tr>\n<td width=\"155\">HttpStatusCodeResult</td>\n<td width=\"272\">返回指定的HTTP代碼。</td>\n<td width=\"195\">無</td></tr></tbody></table>","excerpt":"當使用者Keyin網址後，瀏覽器送出請求，而透過Routing機制後，緊接著的就是Controller，就如前面MVC架構所敘說的，Controller控制著所有的流程 ( 不然他怎麼會叫做Controller!? )，取得Model、決定View…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"jQuery Mobile 介紹","tags":["HTML","JavaScript","jQuery"]},"fields":{"slug":"/2011/09/26/jQuery-Mobile-介紹/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/jQuery-Mobile-介紹.md"},"previous":{"frontmatter":{"path":null,"title":"Windows Azure 安裝流程","tags":["Azure"]},"fields":{"slug":"/2011/09/27/Windows-Azure-安裝流程/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Windows-Azure-安裝流程.md"}}}}