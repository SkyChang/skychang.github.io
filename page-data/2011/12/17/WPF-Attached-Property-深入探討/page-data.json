{"componentChunkName":"component---src-templates-page-js","path":"/2011/12/17/WPF-Attached-Property-深入探討/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"WPF - Attached Property 深入探討","date":"17 December 2011","author":"Sky Chang","excerpt":null,"tags":["Silveright","WPF"],"coverImage":null},"id":"b42cd0b4-1103-508d-a119-05c7f65d605a","html":"<p>此篇延續<a href=\"http://blog.sanc.idv.tw/2011/12/wpf-dependency-property.html\">上一篇Dependency Property</a>內容，上一篇談到最後，提到了一個初次進入WPF或是Silverlight時，會覺得很奇怪的地方，例如說設定DockPanel的上下左右對齊，通常我會覺得說，至少會這樣寫 ( 小弟膚淺的認知. )。</p>\n<pre class=\"brush: xml;\">&lt;DockPanel xxx=left&gt;\n    &lt;Button/&gt;\n&lt;/DockPanel&gt;\n</pre>\n<p>但在WPF裡面，卻是這樣寫。</p>\n<pre class=\"brush: xml;\">&lt;Button DockPanel.Dock=\"Top\"&gt;\n</pre>\n<p>程式碼的話，會這樣寫。</p>\n<pre class=\"brush: xml;\">DockPanel.setDock(btn,Dock.Top);</pre>\n<p>沒錯，並沒有看錯，呼叫一個靜態類別DockPanel，然後使用靜態方法setDock()，裡面第一個參數是要設定位置的控制項，第二個參數則是利用Dock的列舉型別來設定上下左右。</p>\n<p>老實說，我第一次看到，會覺得很詭異，為什麼會用這麼詭異的方式進行設定呢?也完全顛覆了我之前的認知( 所以說，我很膚淺嘛~~ )。</p>\n<h4>Attached Property</h4>\n<p>中文翻譯叫做附加屬性；既然Attached Property會放在Dependency Property後面講，大家應該就可以猜的到了，會用那麼奇怪的寫法，其實這個的原始技術還是在Dependency Property。</p>\n<p>首先我們先來看，實際的DockPanel原始碼，其實內容和之前講的Dependency Property類似，比較不同的是，這裡的DockProperty是使用DependencyProperty.RegisterAttached來進行註冊的，此外，get和set裡面，都有傳入UIElement進來，簡單的說，就是使用傳進來的UIElement來呼叫SetValue和GetValue，而非是呼叫DockPanel的SetValue和GetValue。</p>\n<pre class=\"brush: csharp;\">public class DockPanel : Panel\n{\n    public static readonly DependencyProperty DockProperty;\n    public static void SetDock(UIElement el,Dock dck)\n    {\n        el.SetValue(DockProperty,dck);\n    }\n    public static Dock GetDock(UIElement el)\n    {\n        return (Dock) el.GetValue(DockProperty);\n    }\n}\n</pre>\n<p>那這樣代表甚麼，記不記得前面Dependency Property有提到，利用SetValue會將資料存到某個Collection裡面，所以簡單的說，我們在DockPanel設定了靜態方法SetDock和GetDock，但實際上，上下左右的設定，會存放到，由SetValue第一個參數傳入進去的UIElement元件裡面去。而這種感覺，就像是我們在DockPanel設定了DockProperty這個屬性，但實際上，此屬性附加到了真實會用到的控制項上面，所以才會有Attached Property之稱。</p>\n<h4>Attached Property的一些特點</h4>\n<p>前面有提到，既然不是呼叫DockPanel裡面的SetValue和GetValue，所以我們可以發現到，其實時要實踐attached property的類別是不需要延生自DependencyObject的!，當然要實際SetValue和GetValue的類別還是要延生自DependencyObject。</p>\n<p>其次，其實前面寫到這樣的設定上下左右。</p>\n<pre class=\"brush: csharp;\">DockPanel.SetDock(btn,Dock.Top)\n</pre>\n<p>懂得原理後，其實我們也可以這樣寫，道理是相通的。</p>\n<pre class=\"brush: csharp;\">btn.SetValue(DockPanel.DocProperty,Dock.Top)\n</pre>\n<p>所以這兩種基本上是一樣的，也因此，Attached Property算是Dependency Property的一種延伸型態，</p>\n<h4>為什麼使用Attached Property</h4>\n<p>要提到這個，又要講古了，以前的Win Forms程式可能會這樣寫。</p>\n<pre class=\"brush: csharp;\">btn.Dock = Dock.Top\n</pre>\n<p>而使用這種方法，最大的問題就是，如果btn沒有在Dock下面，那這個屬性就等同於沒有用，所以後來WPF才實作出這種有彈性的天才作法 ( 老實說，真的很厲害… )，所以以後要寫WPF，要設定上下左右，就不會覺得奇怪啦..</p>\n<p>參考資料</p>\n<ul>\n<li><a href=\"http://www.wpftutorial.net/DependencyProperties.html\" title=\"http://www.wpftutorial.net/DependencyProperties.html\">http://www.wpftutorial.net/DependencyProperties.html</a></li>\n<li><a href=\"http://msdn.microsoft.com/zh-tw/library/ms609853.aspx\" title=\"http://msdn.microsoft.com/zh-tw/library/ms609853.aspx\">http://msdn.microsoft.com/zh-tw/library/ms609853.aspx</a></li>\n</ul>","excerpt":"此篇延續上一篇Dependency Property內容，上一篇談到最後，提到了一個初次進入WPF或是Silverlight時，會覺得很奇怪的地方，例如說設定DockPanel的上下左右對齊，通常我會覺得說，至少會這樣寫 ( 小弟膚淺的認知. )。 但在WPF…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"WPF - Dependency Property 深入探討","tags":["Silveright","WPF"]},"fields":{"slug":"/2011/12/15/WPF-Dependency-Property-深入探討/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/WPF-Dependency-Property-深入探討.md"},"previous":{"frontmatter":{"path":null,"title":"點課幫 Developer Party 11-1218活動展開!","tags":["Sky的IT碎碎念","Study4"]},"fields":{"slug":"/2011/12/18/點課幫-Developer-Party-11-1218活動展開/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/點課幫-Developer-Party-11-1218活動展開.md"}}}}