{"componentChunkName":"component---src-templates-page-js","path":"/2011/08/24/ASP-NET-MVC-–-Razor的-helper語法/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ASP.NET MVC – Razor的@helper語法","date":"24 August 2011","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC"],"coverImage":null},"id":"5cc97e16-c039-50cc-832e-5672793b8b0a","html":"<p>這篇是從ScottGu那邊看來的，之前和同事的每週技術分享報告上，有分享過，但後來也隨著時間，投影片就這樣消失於地球上，剛好最近又看到這個東西，就順便把他分享出來吧。</p>\n<p>有的時候，在View上面，也是會需要做到許多重複的事情，例如下面這個例子，將成績輸出到View，如果大於等於60會顯示及格，若小於60就顯示不及格。</p>\n<pre class=\"brush: xml;\">&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;\n        @if ( int.Parse(ViewData[\"score\"].ToString()) &gt;= 60)\n        {\n            &lt;span&gt;合格!&lt;/span&gt;\n        }\n        else\n        {\n            &lt;span&gt;不合格!&lt;/span&gt;\n        }\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>這是很簡單的例子，但搞不好會有很多頁都會需要做這樣的判斷，並顯示，如果用老方法拷貝貼上大法，當然可以很快，但這樣就會變得很難維護，總之Razor的@helper就是解決這個問題，我們可以將程式碼改成這樣。</p>\n<pre class=\"brush: xml;\">@helper DisplayScore(int score)\n{\n    if (score &gt; 60)\n    {\n    &lt;span&gt;合格!&lt;/span&gt;\n    }\n    else\n    {\n    &lt;span&gt;不合格!&lt;/span&gt;\n    }\n}\n\n&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;\n        @DisplayScore(int.Parse(ViewData[\"score\"].ToString()))\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</pre>\n<p><font face=\"Arial\">如上程式碼，我們將原本的判斷邏輯提出來，並且放到@helper DisplayScore裡面，這樣就可以重複使用，而這就是@helper的用法，最後我們可以直接使用@DisplayScore來呼叫放在@helper裡面的方法，就是這樣簡單~</font></p>\n<p>但是這樣做，也只能使用到同一張Page，如果要不同張的Page使用的話，要怎麼辦呢?其實可以將@helper放到app_code裡面，如下圖，這樣就可以在其他的Page裡面使用。</p>\n<p><a href=\"http://lh3.ggpht.com/-HrfMgAVh0qU/TlWvDhU7KII/AAAAAAAAAcw/ahG-dGr88Ew/s1600-h/image%25255B4%25255D.png\"><img src=\"http://lh4.ggpht.com/-QdOgz2iD-RE/TlWvESHReOI/AAAAAAAAAc0/utpX5gdeVF4/image_thumb%25255B2%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>另外，因程式碼移出至App<em>Code，所以原本的View表，也要稍微修改一下，需要在DisplayScore前面加上命名空間(也就是放在App</em>Code的檔案 )如下。</p>\n<pre class=\"brush: xml;\">\n\n    &lt;!DOCTYPE html&gt;\n\n    &lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Index&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div&gt;\n            @Sky.DisplayScore(int.Parse(ViewData[\"score\"].ToString()))\n        &lt;/div&gt;\n    &lt;/body&gt;\n    &lt;/html&gt;\n\n</pre>\n<p>但要注意到的一點，在App_Code裡面不能使用任何的ASP.NET MVC helper methods，例如Html.ActionLink()、Html.TextBox()等等，這部分官方也說未來會再改進，但不管如何還是將此方法提供給大家參考使用。</p>\n<p>參考來源:</p>\n<ol>\n<li><a href=\"http://weblogs.asp.net/scottgu/archive/2011/05/12/asp-net-mvc-3-and-the-helper-syntax-within-razor.aspx\">ScottGu Blog</a><li><a href=\"http://stackoverflow.com/questions/4710853/using-mvc-htmlhelper-extensions-from-razor-declarative-views\">解決無法在App_Code無法使用Helper method之方法</a></li>\n</ol>","excerpt":"這篇是從ScottGu那邊看來的，之前和同事的每週技術分享報告上，有分享過，但後來也隨著時間，投影片就這樣消失於地球上，剛好最近又看到這個東西，就順便把他分享出來吧。 有的時候，在View上面，也是會需要做到許多重複的事情，例如下面這個例子，將成績輸出到View，如果大於等於6…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"ASP.NET MVC – Hello ASP.NET MVC ( 目錄架構篇 )","tags":["ASP.NET MVC"]},"fields":{"slug":"/2011/08/23/ASP-NET-MVC-–-Hello-ASP-NET-MVC-目錄架構篇/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-–-Hello-ASP-NET-MVC-目錄架構篇.md"},"previous":{"frontmatter":{"path":null,"title":"ASP.NET MVC 將Razor的@helper包成DLL重複使用","tags":["ASP.NET MVC","Visual Studio"]},"fields":{"slug":"/2011/08/25/ASP-NET-MVC-將Razor的-helper包成DLL重複使用/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-將Razor的-helper包成DLL重複使用.md"}}}}