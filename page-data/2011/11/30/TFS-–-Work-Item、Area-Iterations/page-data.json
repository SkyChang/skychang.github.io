{"componentChunkName":"component---src-templates-page-js","path":"/2011/11/30/TFS-–-Work-Item、Area-Iterations/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"TFS – Work Item、Area & Iterations","date":"30 November 2011","author":"Sky Chang","excerpt":null,"tags":["Scrum","TFS"],"coverImage":null},"id":"b6a2154a-3c47-5103-aca8-163c8f00d844","html":"<p>在開始工作之前，先介紹這兩樣東西，這些名詞都是屬於每個Team專案裡面會有的東西，因為此範例主要是使用Scrum為基礎，所以不懂Scrum的人，建議先看<a href=\"http://blog.sanc.idv.tw/2011/11/scrum.html\">這一篇</a>。</p>\n<h4>Work Item</h4>\n<p>在TFS或是Team Foundation Service裡面，Work Item就是一個工作項目，而每個流程樣板裡面的Work Item可能會包含著不同類型的Item，像Scrum樣板裡面，Work Item就包含了Bug、Impediment、Product Backlog Item、Task、Test Case，如果是MSF，內容可能又不一樣。以Scrum來說，第一個建立的通常是Product Backlog，在Team Foundation Service底下，其實也就是在建立Work Item裡面的Product Backlog Item，如下圖。</p>\n<p><a href=\"http://lh6.ggpht.com/-DESpcI-DYbE/Tvftdbwht7I/AAAAAAAABMo/o0tI3k3VmjA/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh6.ggpht.com/-yMLikqY4V8I/TvfteF2yZNI/AAAAAAAABMs/QKRirK2tOro/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>Area</h4>\n<p>顧名思義，就是區域的意思，雖然Work Item已經有幫我們細分一些類別，但有的時候，我們會依據功能面來劃分區域，例如說Administration、Community、Customer、Marketing、Mobile、Order、Products，藉此來將Work Item更進一步的分類；例如有一些Test Case和Task是屬於Order的，我們就會把它分到Order類；這樣做有一些好處，一個是未來查詢會更加方便，其次我們也可以針對各個區域進行Work Item的權限管理。</p>\n<p><a href=\"http://lh4.ggpht.com/-gSu-eVqq3e0/Tvfte7ktb7I/AAAAAAAABM4/GrMQycyFU8M/s1600-h/image%25255B8%25255D.png\"><img src=\"http://lh5.ggpht.com/-F-C0GLA8_tI/TvftgfZclmI/AAAAAAAABM8/u4LicDQCPyc/image_thumb%25255B4%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>我們當然可以自行新增區域，但別忘了要在Administration內建立。</p>\n<p><a href=\"http://lh6.ggpht.com/-Qz4HzoDsJu0/TvfthCjiBxI/AAAAAAAABNE/cCIa339jjiI/s1600-h/image%25255B13%25255D.png\"><img src=\"http://lh3.ggpht.com/-2BXmrYOEvww/TvftiIJzF1I/AAAAAAAABNM/x205bEUDKt0/image_thumb%25255B7%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>建立非常的簡單。</p>\n<p><a href=\"http://lh4.ggpht.com/-dVDcXb6GcbM/TvftirUC_JI/AAAAAAAABNU/bJLMpw1kCeg/s1600-h/image%25255B17%25255D.png\"><img src=\"http://lh5.ggpht.com/-qXL06G7D0Q8/TvftjYmsMNI/AAAAAAAABNc/WqSkO-PlRb4/image_thumb%25255B9%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>Iterations</h4>\n<p>中文名稱稱之為反覆項目，一個專案裡面一定會有許多的反覆項目，換言之，就是開發循環啦，例如下面的圖為例，Study4Demo這個專案，第一個Release裡面會有許多的Sprint，而每一個每一個循環，就會慢慢的讓這個軟體逐漸接近成品。</p>\n<p><a href=\"http://lh3.ggpht.com/-JBU2jXQx578/TvftkVHOzSI/AAAAAAAABNk/j_nIiLe1NXY/s1600-h/image%25255B25%25255D.png\"><img src=\"http://lh6.ggpht.com/-0xCdvxssAQs/TvftlEQi5tI/AAAAAAAABNs/0Bz8XivabAo/image_thumb%25255B13%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>既然它代表的是時間循環，所以我們可以利用Edit來編輯時間，但登入者要有Administration權限，如果前面打勾，未來在Team Project裡面，就可以看到這個衝刺。</p>\n<p><a href=\"http://lh5.ggpht.com/-eU8I3SpXp-s/Tvftl2-OiNI/AAAAAAAABN0/3DTZnsklLnw/s1600-h/image%25255B33%25255D.png\"><img src=\"http://lh4.ggpht.com/-ezncx7IigLI/TvftmUynkWI/AAAAAAAABN8/3fOFa4ZCodY/image_thumb%25255B17%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>這裡可以填入起始結束日期。</p>\n<p><a href=\"http://lh5.ggpht.com/-2L_HbdR-4q4/TtZYCzarBEI/AAAAAAAABJ0/FAuz0UM-Xao/s1600-h/image%25255B8%25255D.png\"><img src=\"http://lh5.ggpht.com/-Ue3jzEAY3rY/TtZYDtYwT5I/AAAAAAAABJ8/ZFyXDZzvvPs/image_thumb%25255B3%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，我們會開始建立Product blocklog!</p>","excerpt":"在開始工作之前，先介紹這兩樣東西，這些名詞都是屬於每個Team專案裡面會有的東西，因為此範例主要是使用Scrum為基礎，所以不懂Scrum的人，建議先看這一篇。 Work Item 在TFS或是Team Foundation Service裡面，Work Item…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Scrum - 快速上手","tags":["Scrum","TFS"]},"fields":{"slug":"/2011/11/30/Scrum-快速上手/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Scrum-快速上手.md"},"previous":{"frontmatter":{"path":null,"title":"WPF - Dependency Property 深入探討","tags":["Silveright","WPF"]},"fields":{"slug":"/2011/12/15/WPF-Dependency-Property-深入探討/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/WPF-Dependency-Property-深入探討.md"}}}}