{"componentChunkName":"component---src-templates-page-js","path":"/2012/09/02/ALM-使用Visual-Studio-2012的分鏡腳本，並與TFS的Work-Item-Link/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ALM -  使用Visual Studio 2012的分鏡腳本，並與TFS的Work Item Link","date":"02 September 2012","author":"Sky Chang","excerpt":null,"tags":["Office","SharePoint","TFS","Visual Studio"],"coverImage":null},"id":"9f6bf8e7-829d-5ce7-8046-478862cd3a39","html":"<p>老實說，這次這個主題真難下，把他歸類到TFS也不是，因為這是Visual Studio裡面的新功能，但如果把他歸類到Visual Studio，又很在這篇介紹到和TFS Work Item Link的部分，所以考量之後，就把它歸到整個ALM流程下面了。</p>\n<p>Visual Studio 2012這次除了漂亮又符合程式設計師黑暗的人生之黑色的介面外，其實還有許多新功能，而這次，要談的其中一個功能就是分鏡腳本，當我們安裝完Visual Studio 2012之後，就可以從開始列，找到PowerPoint分鏡腳本的功能。</p>\n<p><a href=\"http://lh4.ggpht.com/-IW9c1Suge2E/UELhiDZlUXI/AAAAAAAAEiU/VPSt1jxpa4Y/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh3.ggpht.com/-dR4caSl_N4U/UELhjMxIWrI/AAAAAAAAEic/otDYAoLNv6Q/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>點下去之後，其實就會開啟整個Power Point，不過小弟我因為是使用Office 2013 Preview的版本，所以開起來是英文版的，如果是使用Office 2012，那是中文的，大家可以不用擔心。</p>\n<p>所謂的分鏡腳本，就是可以讓開發人員或是PM來和需求人員輕鬆又愉快地談畫面應該如何呈現，早期談論畫面的時候，我們可能用手來畫，可能會用很多張紙來解釋程式的流程；佛心一點的，可能就直接用設計工具來設計 ( 然後客戶就會以為你已經快寫完了…然後時間就被壓榨… )；但今天，新版的Visual Studio則提供了\"利用Power Point\"來畫UI的功能，這就是分鏡腳本；我們可以從Storyboard Shapes的地方，快速的選擇畫面上的原件，甚至，也可以自行的剪貼想要的畫面，也因此，讓溝通更為方便!!甚至可以讓客戶自己來畫!!</p>\n<p><a href=\"http://lh5.ggpht.com/-_Kht9uT3Cpk/UELhkckRjwI/AAAAAAAAEig/2SwBOGZxeH8/s1600-h/image%25255B7%25255D.png\"><img src=\"http://lh3.ggpht.com/-EURR4F_YTfw/UELhlQSHgUI/AAAAAAAAEis/Gv--h6FYVUE/image_thumb%25255B3%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>甚至，大家也知道，PowerPoint原本就可以製作簡單的動畫效果，所以也可以製作出，簡易的UI，讓客戶能更加瞭解，是怎樣去做動作。</p>\n<h4>與TFS的整合</h4>\n<p>相信有玩過TFS的人都知道，TFS有Work Item，而在Scrum下面，會有一個Product Backlog的Work Item來記錄使用者的需求。( 有需要的人可以參考<a href=\"http://blog.sanc.idv.tw/p/visual-studio-tfs.html\">這裡</a> )；所以我們就可以把畫好的UI，並且和Product Backlog進行連結，未來查到這個Product Backlog的時候，就會知道，當初談論的畫面是長怎樣；我們可已透過Storyboard Links來進行連結。</p>\n<p><a href=\"http://lh6.ggpht.com/-A6KoWOhnslI/UELhmZYaY5I/AAAAAAAAEi0/FJlHYYpoSFg/s1600-h/image%25255B12%25255D.png\"><img src=\"http://lh4.ggpht.com/-it1Ps5V4kNk/UELhnjEfW0I/AAAAAAAAEi8/8kOD2PswVUw/image_thumb%25255B6%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>當然，這個PowerPoint檔案必須要放在共享的位置上，不然會發生錯誤；通常我們再配合Team Foundation Server的時候，我們可以把這個PowerPoint放在SharePoint上面；但如果今天你是使用Team Foundation Service時，就沒有SharePoint可以使用了，不過也沒關係，我們還是可以存到SkyDrive。</p>\n<p><a href=\"http://lh5.ggpht.com/-8gT0CmOCC6U/UELhokqYAWI/AAAAAAAAEjE/jjOp_lvKPOM/s1600-h/image%25255B17%25255D.png\"><img src=\"http://lh5.ggpht.com/-mCC6zK50m3A/UELhpj9AK3I/AAAAAAAAEjM/o0vwSR9cDpQ/image_thumb%25255B9%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>我們可以透過存檔到SkyDrive，來讓Work Item順利連結，也可以讓別人打開Work Item的時候，可以順利開啟這個檔案。</p>\n<p><a href=\"http://lh5.ggpht.com/-pUOhnjU7mMI/UELhqovYNCI/AAAAAAAAEjU/MJb2shYR_b4/s1600-h/image%25255B26%25255D.png\"><img src=\"http://lh6.ggpht.com/-6RzCGYOrO44/UELhrlSNjMI/AAAAAAAAEjc/mRBYLGisTag/image_thumb%25255B14%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>如下，我們就可以順利進行連結了。</p>\n<p><a href=\"http://lh3.ggpht.com/-VHjAIThwHfo/UELhstUiBPI/AAAAAAAAEjk/0mXCjt8uZUI/s1600-h/image%25255B30%25255D.png\"><img src=\"http://lh3.ggpht.com/-GVT27pgLcGk/UELhtyWdDWI/AAAAAAAAEjs/PoCHnTZlCgc/image_thumb%25255B16%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>就這樣。</p>\n<h4>後記</h4>\n<p>其實Visual Studio的分鏡功能，就和一般在畫PowerPoint的使用上沒甚麼兩樣，所以小弟我這邊就沒有很詳細的敘述；也因為大家有時都會比較注重在畫UI的上面，而忽略掉，其實可以和TFS整合的部分，所以順便利用這篇帶出了和TFS Work Item整合的方式；最後又因為也些人可能是使用Team Foundation Service，所以這篇也把重點放在如何放到SkyDrive來解決沒有共用區的問題，但不管怎樣，相信這個新功能，未來一定會讓大家更為方便與使用!!</p>","excerpt":"老實說，這次這個主題真難下，把他歸類到TFS也不是，因為這是Visual Studio裡面的新功能，但如果把他歸類到Visual Studio，又很在這篇介紹到和TFS Work Item Link的部分，所以考量之後，就把它歸到整個ALM流程下面了。 Visual Studio…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Windows Azure - Mobile Service初體驗!!","tags":["Azure","Windows Store App"]},"fields":{"slug":"/2012/08/29/Windows-Azure-Mobile-Service初體驗/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Windows-Azure-Mobile-Service初體驗.md"},"previous":{"frontmatter":{"path":null,"title":"Windows Azure - 使用Mobile Service來處理行動裝置APP的Data","tags":["Azure","Windows Store App"]},"fields":{"slug":"/2012/09/05/Windows-Azure-使用Mobile-Service來處理行動裝置APP的Data/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Windows-Azure-使用Mobile-Service來處理行動裝置APP的Data.md"}}}}