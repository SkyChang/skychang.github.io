{"componentChunkName":"component---src-templates-page-js","path":"/2012/08/20/Windows-Azure-使用Access-Control-Service搭配Facebook來建立驗證機制-ASP-NET-MVC/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Windows Azure - 使用Access Control Service搭配Facebook來建立驗證機制 ( ASP.NET MVC )","date":"20 August 2012","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC","Azure"],"coverImage":null},"id":"c9ed7381-bbfd-5f1d-9b89-e6b53d51d65a","html":"<p>最近剛好寫到認證機制，就想到Windows Azure裡面還有Access Control Service還沒玩過，所以這次，就邊試玩這個認證機制，邊做個紀錄，另外<a href=\"http://www.dotblogs.com.tw/code6421/category/6399.aspx\">黃忠成老師</a>和<a href=\"http://www.dotblogs.com.tw/regionbbs/archive/2012/06/17/implement.asp.net.mvc.application.to.integrate.windows.azure.acs.2.0.aspx\">小朱前輩</a>，也有寫過這方面的文章，大家有興趣的話，也可以去讀讀看。</p>\n<p>Windows Azure的Access Control Service小弟這邊就不做深入的介紹，簡單的說，這項服務，就是可以讓我們輕鬆的透過第三方的帳號驗證，來當作我們的驗證機制，OK!簡單的說，就是可以拿Facebook的帳號，來當作我們網站的登入；當然，不是要把Facebook的帳號密碼放在我們網站，而是利用Facebook所提供的API，當使用者登入的時候，會先轉到Facebook的網站，然後登入Facebook後，會再轉回我們的網站，我們的網站只會收到Facebook告訴我們說\"不用擔心!!他是合格的使用者\"；原本要處理這些東西，是很麻煩的，舉例來說，如果今天我們網站要整合Windows Live、Google、Facebook、Yahoo等帳號，就需要準備很多很多的東西 ( 想到就懶了- -||| )，而這邊，微軟的Windows Azure提供的Access Control Service搭配Identity and Access Tools 就可以輕鬆搞定喔!!我們就來實作看看吧!!</p>\n<p>P.S 目前因Windows Azure還沒支援.NET Framework 4.5，所以如果這個網站是要部屬到Azure上面去的話，使用新版的Identity and Access Tool會出問題，解決方法可以<a href=\"http://haishibai.blogspot.tw/2012/08/windows-azure-web-site-targeting-net.html\">參考此網站</a>，這篇的教學主要是將Web放在地上，並呼叫雲上的Access Control Service為主。</p>\n<h4>建立Windows Azure Access Control</h4>\n<p>首先，我們要建立Windows Azure Access Control，目前新版的頁面還沒有此服務，所以只能回到舊版的頁面，<a href=\"http://blog.sanc.idv.tw/2012/07/windows-azure.html\">這邊</a>可以讓你了解到，如何切換回舊版。</p>\n<p>首先，我們選擇存取控制與快取，然後選擇Services，並且點選新增。</p>\n<p><a href=\"http://lh5.ggpht.com/-KjjdsCqoLRA/UDJZx4tvUeI/AAAAAAAAD_E/WghbxqYNMGk/s1600-h/image4.png\"><img src=\"http://lh4.ggpht.com/-3r7GcnRe3t4/UDJZy2vW_mI/AAAAAAAAD_M/KDMjmdowHRg/image_thumb2.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>因為目前我們只要使用到存取控制，所以我們這邊只要勾選存取控制就可以了，接下來，我們填入命名空間，選一個帥氣的名子吧!!，最後別忘了我們的地區是東亞，所以要選擇東亞。</p>\n<p><a href=\"http://lh6.ggpht.com/-E6hKA8pi4cY/UDJZ0DP38MI/AAAAAAAAD_U/ITMsohTnVUc/s1600-h/image8.png\"><img src=\"http://lh4.ggpht.com/-crUhyyGBEhM/UDJZ1eAwTpI/AAAAAAAAD_c/89SqHJ2eXMg/image_thumb4.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>然後他就會慢慢地啟用…</p>\n<p><a href=\"http://lh4.ggpht.com/-PNEBW9cAFXs/UDJZ2tivP8I/AAAAAAAAD_k/hhjvt5lBRMQ/s1600-h/image12.png\"><img src=\"http://lh5.ggpht.com/-edoPp_msdWI/UDJZ48pPdQI/AAAAAAAAD_s/aEMMVfh5W8s/image_thumb6.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>這時候，就讓他跑吧，我們先去Facebook建立App。</p>\n<h4>建立Facebook App</h4>\n<p><a href=\"http://developers.facebook.com/\" title=\"http://developers.facebook.com/\">http://developers.facebook.com/</a></p>\n<p>上面那個是建立的網址，也是Facebook的Developer中心，當然，而我們就要在這邊建立Facebook App ( 聽起來有沒有覺得很帥氣的感覺!? )，但別忘了，在我們建立App之前，自己也要先有Facebook帳號喔!!( 然後可以從\"應用程式\"那邊開始建立，如下圖。 )</p>\n<p><a href=\"http://lh5.ggpht.com/-deqloBxYa-0/UDJZ6NXyBlI/AAAAAAAAD_0/oxgjWY9csmU/s1600-h/image20.png\"><img src=\"http://lh6.ggpht.com/-n4O4sZHaM2w/UDJZ7RIq2hI/AAAAAAAAD_8/j9t2Z8vigi8/image_thumb10.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，選擇左邊的\"建立新的應用程式\"，就會跳出如下的視窗，基本上App Name之類的也可以隨便Key，例如小弟就是打Study4.TW_ACS；命名空間也可以隨便Key…</p>\n<p><a href=\"http://lh6.ggpht.com/-aEegicTYYcQ/UDJZ81uMDiI/AAAAAAAAEAE/C9rsiuwuVMs/s1600-h/image24.png\"><img src=\"http://lh4.ggpht.com/-sBMedVC--vk/UDJZ-GsZv4I/AAAAAAAAEAM/J9VgBQ-iELY/image_thumb12.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>其實剛剛Key的東西也會帶過來到這頁，這邊比較重要的是，App ID和App Secret這兩樣，小弟這邊故意把它塗白了；另外App Domains和下面的網站位置要填入剛剛申請的Windows Azure Access Control Service網址喔!! ( 網址通常為剛剛我們申請Windows Access Control Service 時所填入的命名空間再加上accesscontrol.windows.net，例如剛剛小弟在申請Windows Access Control Service的時候，填入的命名空間為Study4ACS，所以出來的網址就是study4acs.accesscontrol.windows.net )；至於其他的Mobile Web等等部分，就可以不用管了。</p>\n<p><a href=\"http://lh6.ggpht.com/-8jF97uHxwbU/UDJZ_XlifRI/AAAAAAAAEAU/l4nlC8lRG9U/s1600-h/image29.png\"><img src=\"http://lh6.ggpht.com/-zz6yG4Qzy8s/UDJaA5vI0RI/AAAAAAAAEAc/RPC7FY-YT8M/image_thumb15.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>到這邊，Facebook的建立App就算完成了!!</p>\n<h4>建立Windows Access Control Service的識別提供者</h4>\n<p>所謂的識別提供者，其實指的就是Facebook，意思就是說，由Facebook來提供我們識別身分的機制；所以Facebook就是識別提供者；換言之，就是用Facebook的帳號來當作我們網站的登入識別啦!!這邊，我們選擇剛剛建立好的Windows Azure Access Control Service，然後再選擇\"存取控制服務\"。</p>\n<p><a href=\"http://lh4.ggpht.com/-WOeCTTuMZzQ/UDJaB8eaM5I/AAAAAAAAEAk/5RzQhiMCV3w/s1600-h/image33.png\"><img src=\"http://lh4.ggpht.com/-6oyZixMOeRE/UDJaDItdh_I/AAAAAAAAEAs/N4du0YH74Mo/image_thumb17.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，就會導到另外一頁，我們這邊選擇\"識別提供者\"，並選擇新增。( 大家應該也會看到，其實預設，Windows Azure就已經幫我們準備好Windows Live的識別提供者了喔!! )</p>\n<p><a href=\"http://lh3.ggpht.com/-2CtUXTb29UM/UDJaEB7QOPI/AAAAAAAAEA0/S4pAnT2rjNA/s1600-h/image37.png\"><img src=\"http://lh3.ggpht.com/-4QxiXEILwNE/UDJaFu0eDWI/AAAAAAAAEA8/DfBawd0AOMQ/image_thumb19.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，這邊我們要選擇Facebook應用程式，大家也可以發現，其實Windows Azure也提供了Google和Yahoo喔!!</p>\n<p><a href=\"http://lh3.ggpht.com/-LBH8zKL-Wxk/UDJaG2V9wYI/AAAAAAAAEBE/RHMBVxwHpGw/s1600-h/image41.png\"><img src=\"http://lh3.ggpht.com/-aC6tOZTCYAY/UDJaH-t1MAI/AAAAAAAAEBM/Fu6EfMaNih4/image_thumb21.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>當我們按下下一步的時候，就會到下面這個畫面，這邊，我們就要填入剛剛在Facebook Developer建立Facebook App說很重要的那兩樣!!此外，後面登入連結文字的地方，其實也可以隨便Key，到時候是用來顯示要登入Facebook用的超連結文字。( 反正到後面就會知道了=v= )</p>\n<p><a href=\"http://lh3.ggpht.com/-3w1-Axbpj30/UDJaIxipBfI/AAAAAAAAEBU/gz8DyMyUm90/s1600-h/image45.png\"><img src=\"http://lh6.ggpht.com/-22RV5gH-1aE/UDJaKQDqwVI/AAAAAAAAEBc/V94Ymhxgdlg/image_thumb23.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>按下儲存後，就會發現多了一個Facebook了喔!!</p>\n<p><a href=\"http://lh5.ggpht.com/-xzcwXIYVTqc/UDJaLUu9OgI/AAAAAAAAEBk/iAbR8_5_7rQ/s1600-h/image49.png\"><img src=\"http://lh6.ggpht.com/-AA_ZzKp7Byc/UDJaMvhV7rI/AAAAAAAAEBs/DP1o4mEb8Tg/image_thumb25.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>到這邊，識別提供者的部分，就完成嚕!!</p>\n<h4>建立信賴憑證者應用程式</h4>\n<p>剛剛我們準備好了識別提供者，但只有識別提供者是不夠的!!就如剛剛說的，我們可能會有一堆識別提供者，但總要有個唯一的大門，讓使用者進去選擇到底要走哪一條路吧；所以這邊，我們就要設定信賴憑證者應用程式。</p>\n<p><a href=\"http://lh4.ggpht.com/-By6FtfY0ZzU/UDJaNk2DNcI/AAAAAAAAEB0/kd8CJHUEqJw/s1600-h/image53.png\"><img src=\"http://lh4.ggpht.com/-i6botVTKNpA/UDJaOwyKamI/AAAAAAAAEB8/7K0b4ucEvWs/image_thumb27.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>首先，我們要輸入一下名稱，基本上可以隨便打沒關係；其次比較重要的是領域和傳回URL這兩項，領域代表著的是，發出請求網站的位置，例如我們這邊要給<a href=\"http://sutuy4.tw\">http://sutuy4.tw</a>這個網站使用Access Control Service，所以這邊要填寫<a href=\"http://study4.tw\">http://study4.tw</a> 這樣信賴憑證者應用程式，才不會任何網站提出來，都照單全收；同樣的，當認證結束後，Access Control Service會幫我們轉到某個URL，而那個URL就是傳回URL，而這邊，也可以填入<a href=\"http://localhost\">http://localhost</a> ；接下來，因為我們要使用Identity and Access Tools，所以必須要使用SAML2.0的權杖格式。( 如果使用的是SAML 2.0，就必須要使用X.509憑證，不過不用擔心，預設都幫你準備好了，所以X.509的憑證，我們也不需要做甚麼就是了。 )</p>\n<p><a href=\"http://lh3.ggpht.com/-Kt3Y-ALqsvc/UDJaP5S51nI/AAAAAAAAECE/YGhGSpbrUlI/s1600-h/image5.png\"><img src=\"http://lh3.ggpht.com/-tCuKbVzGGZA/UDJaRKW0naI/AAAAAAAAECM/8WgmG58AJPY/image_thumb3.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來要勾選識別提供者，我們就把Facebook和Windows Live ID給勾一勾吧，其他部分就如同下圖一樣，因為每個信賴憑證者應用程式都會有規則，所以如果已經有建立規則的，可以選擇自己想要的規則，但第一次建立，當然沒有規範，所以這邊要勾選建立新的規則群組，此外，如剛剛提的，SAML2.0使用的是X.509，不過預設也幫我們準備好了，我們只要選擇\"使用服務命名空間憑證\"就可以了，當然，如果想要自己建立一個X.509，也不是不行。</p>\n<p><a href=\"http://lh5.ggpht.com/-gnzZU_ccXMk/UDJaSReNWCI/AAAAAAAAECQ/5lUzSccYYeM/s1600-h/image9.png\"><img src=\"http://lh3.ggpht.com/-sxBNvUkL-B0/UDJaTQxfsPI/AAAAAAAAECc/wZGnGiOZuBk/image_thumb5.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>然後就會順利地建立起來了。</p>\n<p><a href=\"http://lh6.ggpht.com/-UXL2BdyyST8/UDJaUVZeBLI/AAAAAAAAECg/m1QnbYrBEbU/s1600-h/image70.png\"><img src=\"http://lh4.ggpht.com/-7GO6XqiVlpk/UDJaVgCDucI/AAAAAAAAECs/8-qjI7rhRr4/image_thumb36.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>到這邊，就算把Windows Azure Access Control Service設定完畢，接下來我們要看程式段了。</p>\n<h4>ASP.NET MVC程式</h4>\n<p>我們這邊要使用的是Identity and Access Tool，這裡是他的<a href=\"http://visualstudiogallery.msdn.microsoft.com/e21bf653-dfe1-4d81-b3d3-795cb104066e\">解釋</a>，有興趣的人可以參考看看。( 這個版本支援於Visual Studio 2012 )</p>\n<p>我們可以使用Visual Studio 2012的擴充功能和更新，找到Identity And Access Tool ( 不是用NuGet找喔!! )</p>\n<p><a href=\"http://lh6.ggpht.com/-hPkDcqWME4M/UDJaWj3VSJI/AAAAAAAAEC0/tHLmu1dq4Uk/s1600-h/image79.png\"><img src=\"http://lh5.ggpht.com/-jXfqt_7ay2U/UDJaZPBGi2I/AAAAAAAAEC8/Rsh_9hFtkmk/image_thumb41.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，我們就可以在網頁專案上，按滑鼠右鍵找到Identity and Access的功能選單。</p>\n<p><a href=\"http://lh3.ggpht.com/-Al65Nyo7KFQ/UDJaaXE_frI/AAAAAAAAEDE/Wlg7EMq8vCg/s1600-h/image12%25255B1%25255D.png\"><img src=\"http://lh6.ggpht.com/-kfhiZrJt8a8/UDJabkcd6hI/AAAAAAAAEDM/DFuNd7SsRTg/image1_thumb1.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>點下去後，我們要選擇Use the Windows Azure Access control Service，並且先設定Configure。</p>\n<p><a href=\"http://lh4.ggpht.com/-rfZD3xGmehk/UDJac_N2yZI/AAAAAAAAEDU/_WldjvvFStE/s1600-h/image811.png\"><img src=\"http://lh4.ggpht.com/-CzeM3TVtQWE/UDJaeD41UlI/AAAAAAAAEDc/ezmvLX8DKJk/image81_thumb.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>這裡需要填入一些東西，我們先回到Windows Azure Access Control Control的管理介面，並選擇下面的管理服務，然後再選擇ManagementClient。</p>\n<p><a href=\"http://lh4.ggpht.com/-x0BVxqBqVnE/UDJafpETorI/AAAAAAAAEDk/vDSs-j24CCY/s1600-h/image13.png\"><img src=\"http://lh6.ggpht.com/-NosC3lJ2piE/UDJagpqRwzI/AAAAAAAAEDs/Wfg7oFmcwCQ/image_thumb7.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>然後點對稱金鑰。</p>\n<p><a href=\"http://lh6.ggpht.com/-OQF7hwBjGh8/UDJah14YTlI/AAAAAAAAED0/0j_Of_A10Io/s1600-h/image18.png\"><img src=\"http://lh3.ggpht.com/-22kddT7vatw/UDJajEJwz1I/AAAAAAAAED8/XAkpixyPahM/image_thumb10%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>然後把畫面上的東西，貼到Configure上面去，簡單的說，就是讓Visual Studio的Identity and Access擁有存取Windows Access Control Service的權限。</p>\n<p><a href=\"http://lh3.ggpht.com/-Uvq3vFCH_4k/UDJakcpviKI/AAAAAAAAEEE/mCMmBpGe9g4/s1600-h/image22.png\"><img src=\"http://lh3.ggpht.com/-oaoabWp5yqQ/UDJalZBrYEI/AAAAAAAAEEM/Dd8HToT7lis/image_thumb12%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>完成後，我們就可以把Windows Live ID和Facebook勾選起來，然後要注意下面那兩個URL，也就是我們在前面設定的\"領域\"、\"傳回URL\"的部分 ( 這裡要特別注意一下，這邊的範例會用IIS Express並使用<a href=\"http://localhost\">http://localhost</a> 來跑，如果今天沒有特別設定的話，可能會用到別的Port喔 )，最後記得要勾選Overwrite existing rules configuration for this application；如果沒勾選的話，你回到Windows Azure Access Control Service管理畫面，可能就會發現，Identity and Access幫你多新增了一個新的信賴憑證應用程式了，這邊打勾的意思，就是代表要把原來的那個設定複寫掉，而不是新增。( 沒錯，或許有人會想到，那是不是可以不用透過剛剛麻煩的信賴憑證應用程式設定，而直接給Identity and Access Tool來設定就好了，小弟是沒有試過，但小弟覺得事有可能的，但畢竟這是個學習的過程，所以這樣的流程，會比較清楚。 )</p>\n<p><a href=\"http://lh4.ggpht.com/-ZW-3hRoHXIs/UDJamoK_HcI/AAAAAAAAEEU/WpaMy820ARs/s1600-h/image%25255B5%25255D.png\"><img src=\"http://lh6.ggpht.com/-Hj3t4k2_hxU/UDJaoZ7KnQI/AAAAAAAAEEc/3oRwYPSRlP0/image_thumb%25255B2%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>按下ok後，Identity and Access Tool就會幫我們大刀闊斧地修改Web.config了，下面是針對Identity and Access所做的變動，在這邊做個紀錄，給大家參考看看。</p>\n<p>首先，他會在ConfigSections加入兩行，如下。</p>\n<pre class=\"brush: xml;\">&lt;configuration&gt;\n  &lt;configSections&gt;\n    &lt;section name=\"system.identityModel\" type=\"System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\" /&gt;\n    &lt;section name=\"system.identityModel.services\" type=\"System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089\" /&gt;\n  &lt;/configSections&gt;\n</pre>\n<p>接下來他會在appSettings底下加入這兩行</p>\n<pre class=\"brush: xml;\">&lt;appSettings&gt;\n  &lt;add key=\"ida:FederationMetadataLocation\" value=\"https://study4acs.accesscontrol.windows.net/FederationMetadata/2007-06/FederationMetadata.xml\" /&gt;\n  &lt;add key=\"ida:ProviderSelection\" value=\"ACS\" /&gt;\n&lt;/appSettings&gt;\n</pre>\n<p>然後他會多加一個location path，並且把原本的認證機制註解掉，換成新的認證機制。</p>\n<pre class=\"brush: xml;\">&lt;location path=\"FederationMetadata\"&gt;\n    &lt;system.web&gt;\n      &lt;authorization&gt;\n        &lt;allow users=\"*\" /&gt;\n      &lt;/authorization&gt;\n    &lt;/system.web&gt;\n  &lt;/location&gt;\n  &lt;system.web&gt;\n    &lt;authorization&gt;\n      &lt;deny users=\"?\" /&gt;\n    &lt;/authorization&gt;\n    &lt;authentication mode=\"None\" /&gt;\n    &lt;compilation debug=\"true\" targetFramework=\"4.0\" /&gt;\n    &lt;!--Commented out by Identity and Access VS Package--&gt;\n    &lt;!--&lt;authentication mode=\"Forms\"&gt;&lt;forms loginUrl=\"~/Account/Login\" timeout=\"2880\" /&gt;&lt;/authentication&gt;--&gt;\n    &lt;pages\n</pre>\n<p>接下來他會在system.web上面加上httpRuntime標籤</p>\n<pre class=\"brush: xml;\">    &lt;httpRuntime requestValidationMode=\"4.5\" /&gt;\n  &lt;/system.web&gt;\n</pre>\n<p>然後會在modules加上兩個新的Module。</p>\n<pre class=\"brush: xml;\">  &lt;system.webServer&gt;\n    &lt;modules&gt;\n      &lt;add name=\"WSFederationAuthenticationModule\" type=\"System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" preCondition=\"managedHandler\" /&gt;\n      &lt;add name=\"SessionAuthenticationModule\" type=\"System.IdentityModel.Services.SessionAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" preCondition=\"managedHandler\" /&gt;\n    &lt;/modules&gt;\n  &lt;/system.webServer&gt;\n</pre>\n<p>最後，會再加上system.identityModel。</p>\n<pre class=\"brush: xml;\">  &lt;system.identityModel&gt;\n    &lt;identityConfiguration&gt;\n      &lt;audienceUris&gt;\n        &lt;add value=\"http://localhost/\" /&gt;\n      &lt;/audienceUris&gt;\n      &lt;issuerNameRegistry type=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\"&gt;\n        &lt;trustedIssuers&gt;\n          &lt;add thumbprint=\"9B8174896FA4C3FCF16587DCA35FF3834F956D19\" name=\"https://Study4ACS.accesscontrol.windows.net/\" /&gt;\n        &lt;/trustedIssuers&gt;\n      &lt;/issuerNameRegistry&gt;\n      &lt;certificateValidation certificateValidationMode=\"None\" /&gt;\n    &lt;/identityConfiguration&gt;\n  &lt;/system.identityModel&gt;\n  &lt;system.identityModel.services&gt;\n    &lt;federationConfiguration&gt;\n      &lt;cookieHandler requireSsl=\"false\" /&gt;\n      &lt;wsFederation passiveRedirectEnabled=\"true\" issuer=\"https://study4acs.accesscontrol.windows.net/v2/wsfederation\" realm=\"http://localhost/\" reply=\"http://localhost/\" requireHttps=\"false\" /&gt;\n    &lt;/federationConfiguration&gt;\n  &lt;/system.identityModel.services&gt;\n&lt;/configuration&gt;\n</pre>\n<p>基本上就這樣，這時候，我們把程式Run起來，如下圖，就可以使用Windows Live ID或是Facebook當作帳號的登入了!!</p>\n<p><a href=\"http://lh4.ggpht.com/-1Sr8ipivd7Y/UDJapqx_nuI/AAAAAAAAEEk/naGVSeMN2HI/s1600-h/image%25255B9%25255D.png\"><img src=\"http://lh6.ggpht.com/-HEG2BA53LiU/UDJaqwMMqDI/AAAAAAAAEEs/tv_ueXp4ylo/image_thumb%25255B4%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>後記</h4>\n<p>老實說，搭配Windows Azure Access Control Service，更加的方便了，讓我們省掉了很多的麻煩事，而這也是第一次實作，後續如果有甚麼新的應用，會再發佈出來給大家參考。最後，如果需要上傳到Windows Azure上，則請參考\"參考網址\"的最下面一篇，並且要把Identity and Access改成另外一個版本喔。</p>\n<h4>參考網址</h4>\n<ul>\n<li><a href=\"https://www.windowsazure.com/en-us/develop/net/how-to-guides/access-control/#whats-next\" title=\"https://www.windowsazure.com/en-us/develop/net/how-to-guides/access-control/#whats-next\">https://www.windowsazure.com/en-us/develop/net/how-to-guides/access-control/#whats-next</a><li><a href=\"http://msdn.microsoft.com/en-us/library/gg185906.aspx\" title=\"http://msdn.microsoft.com/en-us/library/gg185906.aspx\">http://msdn.microsoft.com/en-us/library/gg185906.aspx</a><li><a href=\"http://www.dotblogs.com.tw/code6421/category/6399.aspx\" title=\"http://www.dotblogs.com.tw/code6421/category/6399.aspx\">http://www.dotblogs.com.tw/code6421/category/6399.aspx</a><li><a href=\"http://www.dotblogs.com.tw/regionbbs/archive/2012/06/17/implement.asp.net.mvc.application.to.integrate.windows.azure.acs.2.0.aspx\" title=\"http://www.dotblogs.com.tw/regionbbs/archive/2012/06/17/implement.asp.net.mvc.application.to.integrate.windows.azure.acs.2.0.aspx\">http://www.dotblogs.com.tw/regionbbs/archive/2012/06/17/implement.asp.net.mvc.application.to.integrate.windows.azure.acs.2.0.aspx</a><li><a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=4451\" title=\"http://www.microsoft.com/en-us/download/details.aspx?id=4451\">http://www.microsoft.com/en-us/download/details.aspx?id=4451</a><li><a href=\"http://haishibai.blogspot.tw/2012/08/windows-azure-web-site-targeting-net.html\" title=\"http://haishibai.blogspot.tw/2012/08/windows-azure-web-site-targeting-net.html\">http://haishibai.blogspot.tw/2012/08/windows-azure-web-site-targeting-net.html</a></li>\n</ul>","excerpt":"最近剛好寫到認證機制，就想到Windows Azure裡面還有Access Control Service還沒玩過，所以這次，就邊試玩這個認證機制，邊做個紀錄，另外黃忠成老師和小朱前輩，也有寫過這方面的文章，大家有興趣的話，也可以去讀讀看。 Windows Azure…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"紀錄文 -  Windows 8和Visual Studio 2012 正式釋出","tags":["Sky的IT碎碎念","TFS","Visual Studio","Windows"]},"fields":{"slug":"/2012/08/16/紀錄文-Windows-8和Visual-Studio-2012-正式釋出/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/紀錄文-Windows-8和Visual-Studio-2012-正式釋出.md"},"previous":{"frontmatter":{"path":null,"title":"Visual Studio - 使用.NET Framework原始碼來偵錯","tags":["C#","Visual Studio"]},"fields":{"slug":"/2012/08/21/Visual-Studio-使用-NET-Framework原始碼來偵錯/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Visual-Studio-使用-NET-Framework原始碼來偵錯.md"}}}}