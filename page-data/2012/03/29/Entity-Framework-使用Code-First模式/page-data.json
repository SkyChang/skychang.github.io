{"componentChunkName":"component---src-templates-page-js","path":"/2012/03/29/Entity-Framework-使用Code-First模式/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Entity Framework - 使用Code First模式","date":"29 March 2012","author":"Sky Chang","excerpt":null,"tags":["Entity Framework"],"coverImage":null},"id":"d5f13a3b-6630-532b-a2a9-a2cfa248af5f","html":"<p><font color=\"#ff0000\">2013/05/30 更新，目前最新的文章在</font><a href=\"http://blog.sanc.idv.tw/2013/05/entity-framework-code-first-ver-50.html\">這邊</a><font color=\"#ff0000\">。此版本為4.1版本。</font></p>\n<p>印象沒記錯的話，其實在EntityFramework 4.1的時候，Code First模式就已經出來了，但是使用後，覺得卡卡的，再加上一些問題( 下一篇會提到 )，所以也沒有真正的好好研究使用，而最近，因為ASP.NET MVC 4的關係，也改良了一些東西，所以就邊看<a href=\"http://blogs.msdn.com/b/adonet/archive/2012/02/09/ef-4-3-code-based-migrations-walkthrough.aspx\">原文</a>，邊翻譯，邊把它紀錄下來吧，此內容和原文有一點點的差異，有興趣的也可以直接看<a href=\"http://blogs.msdn.com/b/adonet/archive/2012/02/09/ef-4-3-code-based-migrations-walkthrough.aspx\">原文</a>。</p>\n<p><font color=\"#ff0000\">小弟在開ASP.NET MVC 4專案的時候，發現預設還是4.1，如果發現還是4.1，可以使用NuGet取得最新版本。</font></p>\n<p><a href=\"http://lh6.ggpht.com/-54AR1uZ5Xyg/T3SB5Kj9lBI/AAAAAAAABys/rjOeoTSl_1I/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh6.ggpht.com/-0j7ku4IhMkQ/T3SB6IypHZI/AAAAAAAABy0/PMS0jrJc-EU/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>What’s Code First</h4>\n<p>不知道大家是怎樣開始專案的呢?我相信，最常聽到的應該是，看使用者的需求，然後來規劃資料庫，畫出ER圖，然後就開始努力地下去Coding了( 這裡就不討論怎樣軟體開發流程是好是壞了。 )。</p>\n<p>接下來呢!?早期小弟在寫ASP的時候，會在裡面加上一堆SQL、邏輯、畫面，組合成義大利麵式的程式碼!( 可惜實際上不夠美味 )，後來使用ASP.NET的時候，也差不了多少，一樣在.cs的檔案裏面放上一堆SQL，只是那時候用Dataset，感覺上比較高級了，後來懂得把Table變成一個又一個的物件，至少有拆開了=w=，到現在，會使用Repository Patten來拆開資料存取層，也會利用EntityFramework來進行ORM，至少有進步了XDD。</p>\n<p>但是無論怎樣的設計上，還是會先考慮資料庫模型，想好Table的關聯，畫好ER圖，建好DB後，在開始寫程式。</p>\n<p>而這樣的作法，也不是說好或不好，畢竟，沒有不好的方法，只有用錯的地方=w=，但今天，EntityFramework帶來另外一種作法，也就是Code First。( 如果先建立DB，就稱為DB First，如果利用EF工具，先建立好模型，就稱為Model First。)</p>\n<p>廢話了一堆，Code First，簡單的說，就是不先建立db，也不用EF的工具建立模型，而是直接利用建立好的類別產生DB!</p>\n<p>有沒有很酷!，老實說我覺得酷斃了，因為這樣，我就可以專心思考OO的架構，而不會分心於DB的設計上，但實際上總是現實的，因為在公司上，還有公司的DB之神，DBA在管理資料庫…</p>\n<p>但不管怎樣，這個還是個好物，所以歷經許久後，小弟就在這邊稍微Demo一下吧!</p>\n<h4>建立Code First Demo</h4>\n<p>首先，我們就不大材小用了，這麼小小的範例，當然使用主控台應用程式就可以了!</p>\n<p><a href=\"http://lh6.ggpht.com/-2jWAoDqYHJ8/T3SB7XZ0S_I/AAAAAAAABy8/8xPFjMZJ1Ys/s1600-h/image%25255B8%25255D.png\"><img src=\"http://lh4.ggpht.com/-jbBrGAy9emk/T3SB8qqV10I/AAAAAAAABzE/xtScPHgTyWQ/image_thumb%25255B4%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，我們要在專案上，按下滑鼠右鍵，選擇NuGet，來取得最新版本的EntityFramework。</p>\n<p><a href=\"http://lh3.ggpht.com/-m-7--FOgeOk/T3SB9gU4ckI/AAAAAAAABzM/jCv5QhXiijU/s1600-h/image%25255B13%25255D.png\"><img src=\"http://lh4.ggpht.com/-uRa0RULrQg0/T3SB_Hq3K8I/AAAAAAAABzU/WGKbob5C7_I/image_thumb%25255B7%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>然後，假設我們要寫一個客戶的管理程式，那自然，就要先建立一個客戶的Class，我們新增一個Class，取名為ClientBasic。</p>\n<p><a href=\"http://lh5.ggpht.com/-nVxrP7a8TcA/T3SCATkDJsI/AAAAAAAABzc/831lgnWFWdA/s1600-h/image%25255B18%25255D.png\"><img src=\"http://lh5.ggpht.com/-Ge8dWLO15ig/T3SCB4cptkI/AAAAAAAABzk/pxykGF32DSQ/image_thumb%25255B10%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來呢!?當然就是開始打ClientBasic的程式碼啦!，那db呢!?，別忘了我們現在是Code First，顧名思義，就是先打Code!!</p>\n<p>我們建立一個ClientBasicId，代表唯一的編號，和一個Name，就這麼簡單。</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace MigrationsCodeDemo\n{\n    public class ClientBasic\n    {\n        public int ClientBasicId { get; set; }\n        public string Name { get; set; }\n    }\n}\n</pre>\n<p>然後，我們要建立另外一個程式碼，這個程式碼主要繼承於DbContext，簡單的說，就像是個資料庫一般，裡面會有一個屬性ClientBasics，就像是Table。</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Data.Entity;\n\nnamespace MigrationsCodeDemo\n{\n    public class ClientBasicContext : DbContext\n    {\n        public DbSet&lt;clientbasic&gt; ClientBasics { get; set; }\n    }\n}\n</pre>\n<p>接下來，我們只要修改Program.cs，程式開始運作時，我們會先建立一個ClientBasicContext物件( 稱為db )，裡面會有許多方法，用來處理所有和資料庫有關的行為，然後我們在db.ClientBasics這個屬性( 可以想成ClientBasics Table )，加上一個物件( 可以想像成，加上一筆資料)，而裡面有屬性Name( 可以想像成欄位Name )，值為Sky，最後利用SaveChanges方法，就會將資料寫回到資料庫。</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace MigrationsCodeDemo\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            using(var db = new ClientBasicContext())\n            {\n                db.ClientBasics.Add(new ClientBasic { Name = \"Sky\" });\n                db.SaveChanges();\n            }\n        }\n    }\n}\n</pre>\n<p>然後，就開始跑程式，沒錯!!黑黑一片!!因為我們本來就沒有輸出甚麼，當然黑黑一片。</p>\n<p><a href=\"http://lh6.ggpht.com/-8SIccjWjs3k/T3SCDK9BhhI/AAAAAAAABzs/dBGmiH4L8Sg/s1600-h/image%25255B23%25255D.png\"><img src=\"http://lh6.ggpht.com/-2jcS-A6McFI/T3SCEdlMItI/AAAAAAAABz0/GjlVbs735PI/image_thumb%25255B13%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>但我們去看資料庫，就會發現，他自動地幫我們建立了資料庫和Table!!，神奇吧!!就如前面所說的，我們可以完全不用考慮db該如何建，而會專心思考物件要怎麼寫，但實際上，小弟還沒有案子真正的這樣試過就是了= =..</p>\n<p><a href=\"http://lh5.ggpht.com/-R7Ebo13eeco/T3SCFgCyE1I/AAAAAAAABz8/XRziCuiJUMI/s1600-h/image%25255B27%25255D.png\"><img src=\"http://lh4.ggpht.com/-BYYfu9Kx4bs/T3SCG_BEolI/AAAAAAAAB0E/N7h3Cb9AOL4/image_thumb%25255B15%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>如果去查資料，可以查到一筆</p>\n<p><a href=\"http://lh3.ggpht.com/-CHJCtheRyuk/T3SDS51PrPI/AAAAAAAAB0M/l4KE3EC4-7s/s1600-h/image%25255B4%25255D.png\"><img src=\"http://lh6.ggpht.com/-7UjjZJqaxRA/T3SDUEH9ioI/AAAAAAAAB0U/VsqAlGSZm4I/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>後記</h4>\n<p>就如前面流程，小弟我完全沒添加任何設定，甚至連App.Config都沒有改，預設似乎會自動去抓本機的資料庫，有需要改資料庫的人，還是可以去調整一下App.Config。</p>\n<p>小弟這個範例，就是很簡單的先去建立類別，然後資料庫就自動幫忙建立起來了，但是聰明的你應該已經注意到了，那如果Class的屬性增加後，資料庫會不會自動變更!?答案已經很清楚了，在4.1他會丟出例外給你看XDD，所以必須先刪除掉資料庫，才能重新Run一次，也因此，下篇就會解紹真正的重點，如何處理這種問題!</p>\n<h4>參考資料</h4>\n<ul>\n<li><a href=\"http://blogs.msdn.com/b/adonet/archive/2012/02/09/ef-4-3-code-based-migrations-walkthrough.aspx\" title=\"http://blogs.msdn.com/b/adonet/archive/2012/02/09/ef-4-3-code-based-migrations-walkthrough.aspx\">http://blogs.msdn.com/b/adonet/archive/2012/02/09/ef-4-3-code-based-migrations-walkthrough.aspx</a></li>\n</ul>","excerpt":"2013/05/30 更新，目前最新的文章在這邊。此版本為4.1版本。 印象沒記錯的話，其實在EntityFramework 4.1的時候，Code First…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"回報產品網頁問題給Microsoft","tags":["Azure","Sky的IT碎碎念"]},"fields":{"slug":"/2012/03/27/回報產品網頁問題給Microsoft/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/回報產品網頁問題給Microsoft.md"},"previous":{"frontmatter":{"path":null,"title":"Windows Azure 申請3個月免費試用!","tags":["Azure"]},"fields":{"slug":"/2012/03/30/Windows-Azure-申請3個月免費試用/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Windows-Azure-申請3個月免費試用.md"}}}}