{"componentChunkName":"component---src-templates-page-js","path":"/2012/05/09/Silverlight-繼承UserControl的作法/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Silverlight -  繼承UserControl的作法","date":"09 May 2012","author":"Sky Chang","excerpt":null,"tags":["Silveright","WPF"],"coverImage":null},"id":"21c63e0a-a99c-57bf-a13f-076f39e845ab","html":"<p>最近因為公司所逼，所以也開始針對Silverlight上面進行一些系統的開發，而開發的時候也碰到一些問題，所以也順便紀錄一下，不然我大概幾天就忘記怎麼做了…</p>\n<p>UserControl是個好物!，但有的時候，還是會有需求繼承一下UserControl，才不會寫了一堆重複的Code，甚至要改一些東西的時候，漏改一堆，而這邊剛好看到國外網站有講到繼承的方法，據說MSDN也有教，但小弟沒搜尋到，如果有找到的人，和小弟說一聲吧XDD。</p>\n<p>首先第一步，當然是要做一個UserControl的父類別!我們就取名為Control1吧。</p>\n<p><a href=\"http://lh3.ggpht.com/-AwsCxQr_yos/T6p_q0f1OTI/AAAAAAAACfI/xQvNLa6LBcs/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh3.ggpht.com/--8T8SZ0DwcA/T6p_r0jdIdI/AAAAAAAACfQ/I7EXfiCp5z4/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>第二步，當然是準備要建立繼承父類別的子類別，我們就稱為Control2吧。</p>\n<p><a href=\"http://lh4.ggpht.com/-a1-fyjQm-5A/T6p_st1LkKI/AAAAAAAACfU/crrvjlljXIg/s1600-h/image%25255B8%25255D.png\"><img src=\"http://lh4.ggpht.com/-7XhxPdXe5OM/T6p_taEYX2I/AAAAAAAACfc/SdQyFE4Jn-w/image_thumb%25255B4%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來就是關鍵了，我們要重寫Control2.xaml；這邊的第一件事情，就是要先加上Namespace，也就是xmlns:my=”clr-namespace:這個專案名\"，然後要把原本的根節點，從UserControl改為繼承的Control1。</p>\n<pre class=\"brush: xml;\">&lt;!--這裡要改寫，把原本的UserControl換成Control1，也別忘記了要加上namespace--&gt;\n&lt;my:Control1 x:Class=\"InheritanceUserControl.Control2\"\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n    xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\"\n    xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n    mc:Ignorable=\"d\"\n    xmlns:my=\"clr-namespace:InheritanceUserControl\"\n    d:DesignHeight=\"300\" d:DesignWidth=\"400\"&gt;\n\n    &lt;Grid x:Name=\"LayoutRoot\" Background=\"White\"&gt;\n        &lt;Button&gt;&lt;/Button&gt;\n    &lt;/Grid&gt;\n&lt;!--這裡也要改寫--&gt;\n&lt;/my:Control1&gt;\n</pre>\n<p>接下來還要改一下Control2.xaml.cs檔案，把原本繼承於UserControl的地方，改成繼承Control1，這樣就可以了。</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Net;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Animation;\nusing System.Windows.Shapes;\n\nnamespace InheritanceUserControl\n{\n    //這裡直接繼承Control1\n    public partial class Control2 : Control1\n    {\n        public Control2()\n        {\n            InitializeComponent();\n        }\n    }\n}\n</pre>\n<p>根據國外所說，這樣改完，Visual Studio會有點不爽XDD，其實這樣改為後，如果編譯的話，會出現這樣的警告，但原則上是不受影響的。( 國外網站也不建議去修改g.i.cs檔案 )</p>\n<p><a href=\"http://lh6.ggpht.com/-Czn2NHxdOZA/T6p_uUem9DI/AAAAAAAACfo/B2kqaS62QbU/s1600-h/image%25255B12%25255D.png\"><img src=\"http://lh5.ggpht.com/-nFZPdoFzIE4/T6p_v2UvOuI/AAAAAAAACfw/8Y0PjsQKi34/image_thumb%25255B6%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>這樣就完成了UserControl的繼承，有許多的程式碼，就可以實際的寫在父類別那邊了。</p>\n<h4>參考資料</h4>\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/5996300/inheritance-with-silverlight-user-control-partial-classes?answertab=votes#tab-top\" title=\"http://stackoverflow.com/questions/5996300/inheritance-with-silverlight-user-control-partial-classes?answertab=votes#tab-top\">http://stackoverflow.com/questions/5996300/inheritance-with-silverlight-user-control-partial-classes?answertab=votes#tab-top</a></li>\n<li><a href=\"http://www.cnblogs.com/024hi/archive/2010/05/24/1743110.html\" title=\"http://www.cnblogs.com/024hi/archive/2010/05/24/1743110.html\">http://www.cnblogs.com/024hi/archive/2010/05/24/1743110.html</a></li>\n</ul>","excerpt":"最近因為公司所逼，所以也開始針對Silverlight上面進行一些系統的開發，而開發的時候也碰到一些問題，所以也順便紀錄一下，不然我大概幾天就忘記怎麼做了… UserControl是個好物!，但有的時候，還是會有需求繼承一下UserControl，才不會寫了一堆重複的Code…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"ASP.NET MVC -  在Windows Azure使用TempData要小心!","tags":["ASP.NET MVC","Azure"]},"fields":{"slug":"/2012/05/09/ASP-NET-MVC-在Windows-Azure使用TempData要小心/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-在Windows-Azure使用TempData要小心.md"},"previous":{"frontmatter":{"path":null,"title":"C# -  new和override的差異與目的","tags":["C#"]},"fields":{"slug":"/2012/05/10/C-new和override的差異與目的/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/C-new和override的差異與目的.md"}}}}