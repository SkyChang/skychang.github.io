{"componentChunkName":"component---src-templates-page-js","path":"/2012/05/26/ASP-NET-MVC-MVC和Web-API之Model-Binder的陷阱/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ASP.NET MVC - MVC和Web API之Model Binder的陷阱","date":"26 May 2012","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC","Silveright"],"coverImage":null},"id":"68e74de3-8b3a-5fd4-9885-19aa197552c3","html":"<p>其實也不能說陷阱啦，只能說小弟自己太笨，今天又踩進去一次 ( 記得以前也踩進過一次 )，所以決定在這邊紀錄一下，讓自己有個印象深刻的記憶QQ。</p>\n<p>先說明一下，這個絕對不是ASP.NET MVC的Bug，只能說這種細節，一不小心就會撞到XDD</p>\n<h4>Model</h4>\n<p>首先我們先看看Model，這個Model簡單到爆炸，反正就是有Id、Name、Phone，然後利用DisplayName來定義未來要在View那邊顯示的資訊。</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.ComponentModel;\n\nnamespace MvcOrz.Models\n{\n    public class Customer\n    {\n        [DisplayName(\"ID\")]\n        public int Id { get; set; }\n\n        [DisplayName(\"Name\")]\n        public string Name { get; set; }\n\n        [DisplayName(\"Phone\")]\n        public string Phone { get; set; }\n    }\n}\n</pre>\n<p>就這麼簡單，接下來我們看一下Controller。</p>\n<h4>Controller</h4>\n<p>這個Controller其實也很簡單，就是兩個Action，第一個Action Index很簡單，就只是顯示出畫面，第二個Action Index2則會傳入兩個參數，第一個是id，也就是會去收網址後面的值，例如/Home/Index2/123，就會把123帶進去到id裡面；而第二個則會把View那頁Post或是其他方式進來的資料，自動轉成Customer Model。</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\nusing MvcOrz.Models;\n\nnamespace MvcOrz.Controllers\n{\n    public class HomeController : Controller\n    {\n        //\n        // GET: /Home/\n\n        public ActionResult Index()\n        {\n            return View();\n        }\n\n        public ActionResult Index2(int id,Customer customer)\n        {\n            customer.Id = id;\n            return View();\n        }\n\n    }\n}\n</pre>\n<p>基本上這還滿簡單的，接下來我們看一下View。</p>\n<h4>VIew</h4>\n<p>View也簡單到一個不行，幾乎都是利用HtmlHelper來利用Model產生需要的東西，但有個地方要注意到的，就是在Html.BeginForm的地方，我們會多加上一個RouterValue，並設定id = 1；</p>\n<pre class=\"brush: xml;\">@model MvcOrz.Models.Customer\n\n@{\n    Layout = null;\n}\n\n&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div&gt;\n    @using (Html.BeginForm(\"index2\",\"Home\", new { id = \"1\" }))\n    {\n        &lt;fieldset&gt;\n            &lt;legend&gt;文案&lt;/legend&gt;\n            &lt;dl&gt;\n                &lt;dt&gt;@Html.LabelFor(model =&gt;model.Id)&lt;/dt&gt;\n                &lt;dd&gt;@Html.EditorFor(model =&gt; model.Id)&lt;/dd&gt;\n\n                &lt;dt&gt;@Html.LabelFor(model =&gt; model.Name)&lt;/dt&gt;\n                &lt;dd&gt;@Html.EditorFor(model =&gt; model.Name)&lt;/dd&gt;\n\n                &lt;dt&gt;@Html.LabelFor(model =&gt; model.Phone)&lt;/dt&gt;\n                &lt;dd&gt;@Html.EditorFor(model =&gt; model.Phone)&lt;/dd&gt;\n            &lt;/dl&gt;\n        &lt;/fieldset&gt;\n        &lt;input type=\"submit\" value=\"Send\" /&gt;\n    }\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>就這樣!非常簡單，而且我相信各位大家應該也猜得出梗了。</p>\n<h4>第一個</h4>\n<p>我們把整個專案執行起來，並且在Name和Phone填入3。</p>\n<p><a href=\"http://lh5.ggpht.com/-yGMwtvBMdGs/T7-1PJ6pqTI/AAAAAAAACuk/v5x9TJQQT00/s1600-h/image%25255B7%25255D.png\"><img src=\"http://lh6.ggpht.com/-YNO33SdLD4c/T7-1QOo6muI/AAAAAAAACus/NX6lOyEOyRI/image_thumb%25255B3%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>到後面我們利用中斷偵錯，我們會發現，沒錯!，第一個參數id，變成3了!，但實際上，我們預期的卻是1阿!</p>\n<p><a href=\"http://lh4.ggpht.com/-vIlXO_RvQec/T7-1Q2ApZLI/AAAAAAAACu0/XGhTYA4bdhk/s1600-h/image%25255B12%25255D.png\"><img src=\"http://lh6.ggpht.com/-dlRyavPlaRI/T7-1SIQeILI/AAAAAAAACu8/tcEkY8L6FrE/image_thumb%25255B6%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>其實這個沒有甚麼好奇怪，因為ASP.NET MVC的預設就是這樣，會依據Model對應到的屬性名稱優先，不過，通常也不會有人會寫這樣的程式碼，因為id通常都是不能改的，所以通常會寫成第二個範例的樣子。</p>\n<h4>第二個</h4>\n<p>接下來第二個範例，我們把id拿掉了。</p>\n<p><a href=\"http://lh5.ggpht.com/-Cp-fRAqYVpI/T7-1THrVHnI/AAAAAAAACvE/RPZ33iXjnL8/s1600-h/image%25255B16%25255D.png\"><img src=\"http://lh5.ggpht.com/--CrabyzyKp4/T7-1VJ3B_rI/AAAAAAAACvM/b6HoJcjaJ1E/image_thumb%25255B8%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>的確，這樣第一個id參數就會如預期的變成1了。</p>\n<p><a href=\"http://lh4.ggpht.com/-lwdLPA5AyuE/T7-1WtqORMI/AAAAAAAACvU/j4eJMnhh_qM/s1600-h/image%25255B21%25255D.png\"><img src=\"http://lh6.ggpht.com/-VZjs92WNyCs/T7-1XolYqMI/AAAAAAAACvc/4F8jA5MUtJg/image_thumb%25255B11%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>但是好景不長XDD，Customer裡面的Id也變成1了。</p>\n<p><a href=\"http://lh5.ggpht.com/-wamjH4zW7rw/T7-1Ybz8nAI/AAAAAAAACvk/9T0pu44s59k/s1600-h/image%25255B25%25255D.png\"><img src=\"http://lh5.ggpht.com/-ybBS4y587I0/T7-1ZcGIfTI/AAAAAAAACvs/ZlcZsR-8tM4/image_thumb%25255B13%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>這樣子的狀況，某方面來講也不算是問題的，因為通常網址後面帶的id，也和我們準備要改的資料id是同樣的 ( 會在BeginForm裡面的RouterValue值換成當前的id )，其次為了安全性，我們也通常都會再加上Exclue，來過濾id，例如下面程式碼，所以幾乎不會有問題。</p>\n<pre class=\"brush: csharp;\">public ActionResult Index2(\n    int id, [Bind(Exclude = \"Id\")]Customer customer)\n{\n    customer.Id = id;\n    return View();\n}\n</pre>\n<p>第三個就比較容易犯錯…</p>\n<h4>第三個</h4>\n<p>第三個範例，是笨笨小弟我今天踩到的地雷，這是一個Silverlight裡面的一段程式片段，程式的畫面如下。</p>\n<p><a href=\"http://lh6.ggpht.com/-_xsX1RN1suM/T7-1aVcldCI/AAAAAAAACv0/BeKqx7ANIqk/s1600-h/image%25255B29%25255D.png\"><img src=\"http://lh3.ggpht.com/-ROXHyd1pEic/T7-1bDI79gI/AAAAAAAACv8/EnQUWTdqVhE/image_thumb%25255B15%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>當然這裡不會全部解釋，主要的地方是更新的區塊，小弟我利用WebRequest來對Web Service進行Http的PUT命令，詳細的程式碼小弟就不解釋了，反正重點在於，我先用取得id這個TextBox的值( idTbx.Text )，因為要知道id才能進行Update，接下來，也從TextBox裡面取得要變更的Name和Phone，然後設定WebRequest的URI為Web Service再加上剛剛取得的id ( 例如URI為api/Customer/1 )，然後就進行更新，程式碼在下面，其實也不用看懂，因為重點不是程式碼XD。</p>\n<pre class=\"brush: csharp;\">    private void updateButton_Click(object sender, RoutedEventArgs e)\n    {\n        string id = idTbx.Text;\n\n        Customer customer = new Customer();\n\n        customer.Name = nameTbx.Text;\n        customer.Phone = phoneTbx.Text;\n\n        #region 使用WebRequest\n\n        WebRequest webRequest = WebRequestCreator.ClientHttp.Create(new Uri(_url + \"/\" + id));\n        webRequest.ContentType = \"application/json\";\n        webRequest.Method = \"PUT\";\n        webRequest.BeginGetRequestStream(requestAsyncCallback =&gt;\n        {\n            Stream requestStream = webRequest.EndGetRequestStream(requestAsyncCallback);\n\n            string json = JsonConvert.SerializeObject(customer, Formatting.Indented);\n            byte[] buffer = System.Text.Encoding.Unicode.GetBytes(json);\n            requestStream.Write(buffer, 0, buffer.Length);\n            requestStream.Close();\n\n            webRequest.BeginGetResponse(responseAsyncCallback =&gt;\n            {\n                WebResponse webResponse = webRequest.EndGetResponse(responseAsyncCallback);\n                using (StreamReader reader = new StreamReader(webResponse.GetResponseStream()))\n                {\n                    string result = reader.ReadToEnd();\n                    this.Dispatcher.BeginInvoke(() =&gt;\n                    {\n                        MessageBox.Show(result);\n                    });\n                }\n            }, null);\n        }, null);\n\n        #endregion\n    }\n</pre>\n<p>我們填入了這些值，希望針對id 1的Customer，將Name改為1，Phone也改為1。</p>\n<p><a href=\"http://lh5.ggpht.com/-qyg5AGl-LEM/T7-1cMwFywI/AAAAAAAACwA/JzY2czZ5J44/s1600-h/image%25255B33%25255D.png\"><img src=\"http://lh3.ggpht.com/-a_WVXSyQgyE/T7-1dKgXqQI/AAAAAAAACwM/puSpwb_GR1I/image_thumb%25255B17%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>結果看一下中斷點，變成0!!。</p>\n<p><a href=\"http://lh5.ggpht.com/-bIYA_fk19y8/T7-1d67KzdI/AAAAAAAACwU/6Kd2nzk3nPs/s1600-h/image%25255B37%25255D.png\"><img src=\"http://lh6.ggpht.com/-4ekKEEyuVxM/T7-1erjY7gI/AAAAAAAACwc/JpqgElSMYyk/image_thumb%25255B19%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>為什麼會這樣呢?ASP.NET MVC Web API裡面，第一個參數，應該就是URI後面的參數阿，我們的URI為api/Customer/1，那這裡的id應該為1阿，為什麼會為0呢?再看一下Customer變數。</p>\n<p><a href=\"http://lh4.ggpht.com/-lJovyremKrM/T7-1gLJ08zI/AAAAAAAACwk/jAtKjChPc0k/s1600-h/image%25255B41%25255D.png\"><img src=\"http://lh6.ggpht.com/-xihpnoJBkzA/T7-1h0kTekI/AAAAAAAACws/_SW7Wp9hDlI/image_thumb%25255B21%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>沒錯Customer也為0，其實答案很簡單，那是因為在Silverlight裡面的程式碼段落，我們只有設定Customer.Name和Customer.Phone，而沒有設定Customer.Id，所以Customer.id就為0，如第一個範例一樣，預設上，ASP.NET MVC的模型繫節，會以Model為主，如果沒有對應到，才會以網址參數對應，但如果在Silverlight裡面補上Customer.Id = id的程式碼；就會讓Put的第一個參數id和Customer裡面的Id都有值了。</p>\n<p>但其實到這邊，不管有無機率踩到。最好的方法，要嘛Model不要取名為id，要嘛把Router改一下。( 在Global.asax.cs檔案裡面 )</p>\n<p><a href=\"http://lh4.ggpht.com/-lQLPMv9_Aho/T7-1itrK9bI/AAAAAAAACw0/eU1neKgvDp0/s1600-h/image%25255B48%25255D.png\"><img src=\"http://lh6.ggpht.com/-FekMK6eW9zU/T7-1jfOxuhI/AAAAAAAACw8/6irTh-dGgcs/image_thumb%25255B24%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>將下面的\"{controller}/{action}/{id}\", 的{id}改成新的名字，例如routerValueId。( 如果是Web Api，也要去改Web Api的地方，Web Api在這行 routeTemplate: \"api/{controller}/{id}\" )，下圖是ASP.NET MVC的地方，另外，別忘了後面的id也要改到，這樣如果沒有填入id值，就會自動幫我們設定預設值。</p>\n<p><a href=\"http://lh5.ggpht.com/-udzmsnzcg-4/T8XxWJgvdAI/AAAAAAAACy0/oqy3r_S5a_M/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh5.ggpht.com/-mMm_OxS3jjo/T8XxXCWLGTI/AAAAAAAACy4/wMLJH4U4pVw/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>改成如下程式碼 ( 以下為MVC範例。 )</p>\n<pre class=\"brush: csharp;\">public static void RegisterRoutes(RouteCollection routes)\n{\n    routes.IgnoreRoute(\"{resource}.axd/{*pathInfo}\");\n\n    routes.MapRoute(\n        \"Default\", // Route name\n        \"{controller}/{action}/{routerValueId}\", // URL with parameters\n        new { controller = \"Home\", action = \"Index\", routerValueId = UrlParameter.Optional } // Parameter defaults\n    );\n\n}\n</pre>\n<p>當然，別忘了所有Action的參數也全部都要改，例如Put的程式碼片段，但記得全部的地方都要改阿!</p>\n<pre class=\"brush: csharp;\">public void Put(int routerValueId, Customer customer)\n{\n    customer.Id = routerValueId;\n    if (!_repository.Update(customer))\n    {\n        //如果找不到，就拋出HTTP的Response例外，內容是尋找不到，也就是404\n        throw new HttpResponseException(HttpStatusCode.NotFound);\n    }\n}\n</pre>\n<p>除非很不幸的，連改了名子都會和Model的屬性撞到；不然這樣幾乎就不會有任何的問題了。</p>\n<h4>後記</h4>\n<p>其實真正的重點是希望大家能了解Model Binder的一些特性，其實只要了解了，但不了解的話，也真的是欲哭無淚，找不到問題，所以也在這邊po出來，希望大家能注意一下，Model Binder的一些小細節。</p>","excerpt":"其實也不能說陷阱啦，只能說小弟自己太笨，今天又踩進去一次 ( 記得以前也踩進過一次 )，所以決定在這邊紀錄一下，讓自己有個印象深刻的記憶QQ。 先說明一下，這個絕對不是ASP.NET MVC的Bug，只能說這種細節，一不小心就會撞到XDD Model 首先我們先看看Model…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"ASP.NET MVC Web API - 利用jQuery進行CRUD! 番外篇 丟去Azure吧!","tags":["ASP.NET MVC","Azure","Visual Studio"]},"fields":{"slug":"/2012/05/24/ASP-NET-MVC-Web-API-利用jQuery進行CRUD-番外篇-丟去Azure吧/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-Web-API-利用jQuery進行CRUD-番外篇-丟去Azure吧.md"},"previous":{"frontmatter":{"path":null,"title":"TFS - 使用NuGet搭配版本控制","tags":["NuGet","TFS","Visual Studio"]},"fields":{"slug":"/2012/05/30/TFS-使用NuGet搭配版本控制/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/TFS-使用NuGet搭配版本控制.md"}}}}