{"componentChunkName":"component---src-templates-page-js","path":"/2012/05/24/ASP-NET-MVC-Web-API-利用jQuery進行CRUD-三-View篇/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ASP.NET MVC Web API - 利用jQuery進行CRUD! (三) View篇","date":"24 May 2012","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC","CSS","HTML","JavaScript","jQuery"],"coverImage":null},"id":"cbefa62e-cdf5-599b-b07c-3fef0365fca3","html":"<h4>支援版本</h4>\n<ul>\n<li>ASP.NET MVC 4 Beta </li>\n</ul>\n<p>終於進入到View篇了，本來是預計一天把三篇寫完的，結果沒想到變成一個禮拜一篇= =，現在終於知道連載的辛苦了，富木堅，對不起以前都一直罵你XDD；回到主題，<a href=\"http://blog.sanc.idv.tw/2012/05/aspnet-mvc-web-api-jquerycrud.html\">上一篇</a>我們介紹到Controller，也把整個Web Service完成了，但是我們還沒講到要怎樣利用JavaScript ( 利用jQuery這個函式庫 )對Web Service進行呼叫阿!?所以我們這篇來談談View的部分。</p>\n<h4>jQuery</h4>\n<p>小弟就不再這邊詳細的介紹jQuery了，我相信很多人應該都會使用，這邊只簡單的介紹一下jQuery是做甚麼的；jQuery 是一個非常方便，快速，程式碼又簡潔的JavaScript函式庫，原本我們用JavaScript來進行DOM物件的尋找、處理事件、動畫、瀏覽器版本還有Ajax等等，都會寫非常多的程式碼，所以就有位天才John Resig，寫了jQuery來大幅的簡化，總之，就是一個好物就是了；如果不會jQuery，可以參考一下<a href=\"http://jquery.com/\">jQuery的官網</a>或是<a href=\"http://blog.darkthread.net/post-2009-01-23-my-jquery-tutorial.aspx\">暗黑前輩的超完整教學</a>，所以這部分小弟就不多介紹嚕。</p>\n<h4>Knockout</h4>\n<p>這裡必須還要再提一個東西，就是Knockout，他也是一個JavaScript的程式庫，不過不用擔心，小弟沒那麼慘忍XDD，一下要K Repository Patten，一下要看ASP.NET MVC Web API，一下又要看jQuery，所以這篇文章小弟不會用到Knockout；但為什麼要提到這個呢!?那是因為目前這個東西也正是被納入到ASP.NET MVC裡面，而且官方的範例中，就是大量地使用到這個程式庫，Knockout主要的用處是利用MVVM模式，來繫節畫面上的UI；詳細可以參考<a href=\"http://blog.darkthread.net/post-2012-05-09-knockout-js-intro.aspx\">暗黑前輩的Knockout這篇文章</a>，或是<a href=\"http://knockoutjs.com/\">官網</a>，或是<a href=\"http://blog.faq-book.com/?p=3456\">Andy前輩的FAQ Book</a>；不過在一次的重申，這篇文章不會用到Knockout，所以可以放鬆心情的去讀這幾位前輩的文章=v=。</p>\n<h4>View</h4>\n<p>前面鋪完路後，我們終於要正式開始撰寫View了，不知道大家還記不記得，<a href=\"http://blog.sanc.idv.tw/2012/05/aspnet-mvc-web-api-jquerycrud-model.html\">第一章</a>的時候，那個空白的圖?那時候我們建立起View後，並沒有在View裡面添加甚麼，現在我們終於要開始加上一些東西了；首先，我們可以先打開如下圖的檔案，這就是我們<a href=\"http://blog.sanc.idv.tw/2012/05/aspnet-mvc-web-api-jquerycrud-model.html\">第一章</a>就準備好的檔案。</p>\n<p><a href=\"http://lh5.ggpht.com/-TqzLfchYaEs/T70gJ5EQUsI/AAAAAAAACn4/3kHK5AtCgnM/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh6.ggpht.com/-nmOXGLxNJnI/T70gLHPUdPI/AAAAAAAACn8/8hlS8K8Mxp8/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>我們首先先準備一下畫面，我們預期的畫面如下圖，基本上和官網的差不多 ( 官網範例沒有Delete喔XDD )。</p>\n<p><a href=\"http://lh5.ggpht.com/-tJlOVdHuFSE/T70gLsDJ2XI/AAAAAAAACoE/Rt7lMIYMFFk/s1600-h/image%25255B6%25255D.png\"><img src=\"http://lh4.ggpht.com/-IhnYIOkabnY/T70gNJ2aWCI/AAAAAAAACoM/K_vdTcLxZmA/image_thumb%25255B2%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>HTML</h4>\n<p>接下來，HTML要怎樣寫哩，其實也沒甚麼特別的，就是利用了一些HTML5的標籤 ( 畢竟已經是HTML5的時代了 )，然後準備好一個Table，來顯示資料，並且準備一些輸入欄位，以便後續的CRUD( 這裡範例是用DIV標籤來包輸入欄位，當然也可以用DD、DT、或是li等標籤，看個人喜好吧 )，當然，我們也要準備一些 Button來觸發事件，所以我們準備了很多的Button ( 不是Submit按鈕喔!!兩個是有差異的。 )，來觸發各種事件，完成大致上如下。( 眼力好的人，可能已經會發現Button裡面已經有寫準備觸發的事件的Function名稱了，我們等下就會把這些Function建立起來了喔! )</p>\n<pre class=\"brush: xml;\">@{\n    Layout = null;\n}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;div id=\"body\"&gt;\n        &lt;section class=\"content-wrapper main-content\"&gt;\n            &lt;h3&gt;Contacts&lt;/h3&gt;\n            &lt;table&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;\n                        &lt;th&gt;ID&lt;/th&gt;\n                        &lt;th&gt;Name&lt;/th&gt;\n                        &lt;th&gt;Phone&lt;/th&gt;\n                    &lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;tbody id=\"customers\"&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n        &lt;/section&gt;\n        &lt;section id=\"detail\" class=\"content-wrapper\"&gt;\n            &lt;h3&gt;View Contact&lt;/h3&gt;\n            &lt;label for=\"contactId\"&gt;ID&lt;/label&gt;\n            &lt;input type=\"text\" title=\"ID\" id=\"contactId\" size=\"5\" /&gt;\n            &lt;input type=\"button\" value=\"Get\" onclick=\"find();\" /&gt;\n            &lt;div&gt;\n                &lt;label for=\"name\"&gt;Name&lt;/label&gt;\n                &lt;input type=\"text\" title=\"Name\" id=\"name\" /&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;label for=\"phone\"&gt; Phone&lt;/label&gt;\n                &lt;input type=\"text\" title=\"Phone\" id=\"phone\" /&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;input type=\"button\" value=\"Update\" onclick=\"update();\" /&gt;\n                &lt;input type=\"button\" value=\"Delete\" onclick=\"del();\" /&gt;\n                &lt;input type=\"button\" value=\"Add New\" onclick=\"add();\" /&gt;\n            &lt;/div&gt;\n        &lt;div&gt;\n            &lt;p id=\"status\"&gt;&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;/section&gt; \n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>接下來，我們稍微弄一下美化吧，所以我們利用CSS進行美化，( 再次強調，不要用HTML做為美化的工具，美化的職責應該是由CSS負責的喔!! )。</p>\n<h4>CSS</h4>\n<p>好，不用擔心，我們沒有用到CSS3，下面是個很簡單的CSS，把CSS放到head標籤底下；CSS的內容也超簡單，基本上也只是把table、tr、th、td上個顏色，畢竟小弟現在不是要寫CSS的筆記，所以稍微設定一下而已；另外，小弟特別把從頭擷取index.cshtml的程式碼，我想這樣大家會比較了解CSS要放到哪邊。</p>\n<pre class=\"brush: css;\">@{\n    Layout = null;\n}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n\n&lt;style type=\"text/css\"&gt;\n    table\n    {\n        border: 1px solid #000;\n        border-collapse: collapse;\n        color: #666666;\n        min-width: 200px;\n    }\n\n    tr\n    {\n        border: 1px solid #000;\n        line-height: 25px;\n    }\n\n    th\n    {\n        background-color: #B1C3CC;\n        color: #000;\n        font-size: 13px;\n        text-align: left;\n    }\n\n    th, td\n    {\n        padding-left: 5px;\n    }\n&lt;/style&gt;\n\n&lt;/head&gt;\n</pre>\n<p>完成後，就會變成這樣，有沒有有沒有，變漂亮了吧!!( 好吧，其實也沒漂亮到哪去…但我們這篇的重點是jQuery和Web Service，小細節就不要計較了XDD)。</p>\n<p><a href=\"http://lh3.ggpht.com/-uSNGvjekP1U/T70gNxgCc6I/AAAAAAAACoU/-mwofbzNOdE/s1600-h/image%25255B9%25255D.png\"><img src=\"http://lh3.ggpht.com/-7TPtsg8_c2k/T70gO5U65tI/AAAAAAAACog/YFRHcWNj-kY/image_thumb%25255B3%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>JavaScript &#x26; jQuery</h4>\n<p>好，完成畫面後，就可以隨便亂點了，然後就會在偵錯工具出現這些錯誤( 記得偵錯工具要打開…)，這當然很正常，因為我們JavaScript還沒開始寫嘛。</p>\n<p><a href=\"http://lh6.ggpht.com/-WcZXcvy6rEI/T70gQF-4imI/AAAAAAAACoo/U2ZAGBj1xc8/s1600-h/image%25255B13%25255D.png\"><img src=\"http://lh4.ggpht.com/-XYijBShNhoc/T70gRRhBsnI/AAAAAAAACos/p2XsRqjLaO8/image_thumb%25255B5%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來我們開始寫JavaScript，以下是整個JavaScript，我們可以把整個JavaScript放到head標籤裡面，我們後面會針對細節做介紹。 ( 好的，我知道一些JavaScript放在head，效能等等之類的問題，但是，這不是我們這篇的重點=v= )</p>\n<pre class=\"brush: js;\">&lt;script src=\"@Url.Content(\"~/Scripts/jquery-1.6.2.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n    //清空status區段\n    function clearStatus() {\n        $('#status').html('');\n    }\n\n    var API_URL = \"api/Customer/\";\n\n    //增加資料\n    function add() {\n\n        clearStatus();\n\n        var json = JSON.stringify({ name: $(\"#name\").val(), phone: $(\"#phone\").val() });\n\n        $.ajax({\n            url: API_URL,\n            cache: false,\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            data: json,\n            statusCode: {\n                201 /*Created*/: function (data) {\n                    getAll();\n                }\n            }\n        });\n    }\n\n    //尋找資料\n    function find() {\n\n        clearStatus();\n\n        var id = $('#contactId').val();\n        if (id != \"\") {\n            $.getJSON(API_URL + id,\n            function (data) {\n                $(\"#customers tr\").remove();\n                $(\"#customers\").append(\"&lt;tr&gt;\" +\n                          \"&lt;td&gt;\" + data[\"Id\"] + \"&lt;/td&gt;\" +\n                          \"&lt;td&gt;\" + data[\"Name\"] + \"&lt;/td&gt;\" +\n                          \"&lt;td&gt;\" + data[\"Phone\"] + \"&lt;/td&gt;\" +\n                          \"&lt;/tr&gt;\");\n            })\n            .fail(\n            function (xhr, textStatus, err) {\n                $('#status').html('Error: ' + err);\n            });\n        } else {\n            getAll();\n        }\n    }\n\n    //更新資料\n    function update() {\n        clearStatus();\n\n        var id = $('#contactId').val();\n\n        var json = JSON.stringify({ name: $(\"#name\").val(), phone: $(\"#phone\").val() });\n\n        $.ajax({\n            url: API_URL + id,\n            cache: false,\n            type: 'PUT',\n            contentType: 'application/json; charset=utf-8',\n            data: json,\n            success: function () { getAll(); }\n        })\n        .fail(\n        function (xhr, textStatus, err) {\n            $('#status').html('Error: ' + err);\n        });\n    }\n\n    //刪除指定資料\n    function del() {\n        clearStatus();\n\n        var id = $('#contactId').val();\n\n        $.ajax({\n            url: API_URL + id,\n            cache: false,\n            type: 'DELETE',\n            contentType: 'application/json; charset=utf-8',\n            //data: json,\n            success: function () { getAll(); }\n        })\n        .fail(\n        function (xhr, textStatus, err) {\n            $('#status').html('Error: ' + err);\n        });\n    }\n\n    //取得所有資料\n    function getAll() {\n        clearStatus();\n\n        //利用Get方式取得。\n        $.getJSON(API_URL,\n        function (data) {\n            $(\"#customers tr\").remove();\n            for (i = 0; i &lt; data.length; i++) {\n                $(\"#customers\").append(\"&lt;tr&gt;\" +\n                              \"&lt;td&gt;\" + data[i].Id + \"&lt;/td&gt;\" +\n                              \"&lt;td&gt;\" + data[i].Name + \"&lt;/td&gt;\" +\n                              \"&lt;td&gt;\" + data[i].Phone + \"&lt;/td&gt;\" +\n                              \"&lt;/tr&gt;\");\n            }\n        })\n    .fail(\n        function (xhr, textStatus, err) {\n            $('#status').html('Error: ' + err);\n        });\n    }\n\n    //開始時，先把資料讀取進來\n    $(document).ready(function () {\n        getAll();\n    });\n\n&lt;/script&gt;\n</pre>\n<p>接下來，我們針對每個細部，做一個講解，有講不好的地方，不要鞭我喔>&#x3C;。</p>\n<h4>清空</h4>\n<p>我們的第一個function，主要用途是清除status的資訊，在HTML裡面，有一段會顯示錯誤訊息等資訊，所以我們這邊也要準備一下，清除這些資訊的Function。</p>\n<pre class=\"brush: js;\">//清空status區段\n    function clearStatus() {\n        $('#status').html('');\n    }\n</pre>\n<p>接下來繼續。</p>\n<h4>取得全部</h4>\n<p>我們先來介紹取得全部的這個Funciton，也就是getAll()，我們這邊利用jQuery的getJSON API進行處理，這個API預設會用HTTP的GET命令；當順利取得資料的時候，就會把HTML table裡面的東西移除掉，然後再利用迴圈的方式，把取得的JSON資料和HTML標籤td，一起塞到Table裡面去。</p>\n<pre class=\"brush: js;\">//取得所有資料\nfunction getAll() {\n    clearStatus();\n\n    //利用Get方式取得。\n    $.getJSON(API_URL,\n    function (data) {\n        $(\"#customers tr\").remove();\n        for (i = 0; i &lt; data.length; i++) {\n            $(\"#customers\").append(\"&lt;tr&gt;\" +\n                          \"&lt;td&gt;\" + data[i].Id + \"&lt;/td&gt;\" +\n                          \"&lt;td&gt;\" + data[i].Name + \"&lt;/td&gt;\" +\n                          \"&lt;td&gt;\" + data[i].Phone + \"&lt;/td&gt;\" +\n                          \"&lt;/tr&gt;\");\n        }\n    })\n.fail(\n    function (xhr, textStatus, err) {\n        $('#status').html('Error: ' + err);\n    });\n}\n</pre>\n<p>然後我們來看看新增。</p>\n<h4>ADD</h4>\n<p>第二段我們要講的是ADD，但我們談論ADD之前，我們要先設一個變數，負責記錄網址位置，也就是API_URL；接下來，因為是新增，所以我們會需要準備傳遞資料，所以我們利用JSON.stringify來將我們填入表單的資料，轉成JSON格式。然後我們就要利用jQuery的ajax API來對Web Service進行呼叫；還記得嗎?HTTP的POST就是新增的意思，所以我們Type會設定POST，並且等傳回201時，執行getAll()這個Function。</p>\n<pre class=\"brush: js;\">var API_URL = \"api/Customer/\";\n\n    //增加資料\n    function add() {\n\n        clearStatus();\n\n        var json = JSON.stringify({ name: $(\"#name\").val(), phone: $(\"#phone\").val() });\n\n        $.ajax({\n            url: API_URL,\n            cache: false,\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            data: json,\n            statusCode: {\n                201 /*Created*/: function (data) {\n                    getAll();\n                }\n            }\n        });\n    }\n</pre>\n<p>這樣ADD就完成了，下圖是執行結果，我們填入AA、AA的資料 ( Phone欄位沒有驗證，我真的知道>&#x3C;，是我的錯。 )，按下AddNew後，畫面會自動更新Table，出現第四筆資料；而下面的分析工具可以看到，真的送出了POST。</p>\n<p><a href=\"http://lh5.ggpht.com/-ebSGc82vn4c/T70gSQA2G2I/AAAAAAAACo4/kl17g8R_Uc0/s1600-h/image%25255B18%25255D.png\"><img src=\"http://lh5.ggpht.com/-AqOmWgRaC4U/T70gTVxa3PI/AAAAAAAACpA/d63hWPeWGLo/image_thumb%25255B8%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>Find</h4>\n<p>接下來是尋找資料，其實尋找資料和getAll()很像，就不多加敘述了，但比較特別的是，我們會在網址 (API_URL)後面加上id，來尋找到想要找到的那一筆；如果沒有找到，就會在status區塊報錯。</p>\n<pre class=\"brush: js;\">//尋找資料\nfunction find() {\n\n    clearStatus();\n\n    var id = $('#contactId').val();\n    if (id != \"\") {\n        $.getJSON(API_URL + id,\n        function (data) {\n            $(\"#customers tr\").remove();\n            $(\"#customers\").append(\"&lt;tr&gt;\" +\n                      \"&lt;td&gt;\" + data[\"Id\"] + \"&lt;/td&gt;\" +\n                      \"&lt;td&gt;\" + data[\"Name\"] + \"&lt;/td&gt;\" +\n                      \"&lt;td&gt;\" + data[\"Phone\"] + \"&lt;/td&gt;\" +\n                      \"&lt;/tr&gt;\");\n        })\n        .fail(\n        function (xhr, textStatus, err) {\n            $('#status').html('Error: ' + err);\n        });\n    } else {\n        getAll();\n    }\n}\n</pre>\n<p>執行結果如下，table會更新成尋到到的那筆，在下面的偵錯視窗可以看到，利用了Get。</p>\n<p><a href=\"http://lh6.ggpht.com/-HF-LVrXufUs/T70gUZsLlkI/AAAAAAAACpE/9fCfQtCHPq4/s1600-h/image%25255B23%25255D.png\"><img src=\"http://lh3.ggpht.com/-SDV_8HRZjNw/T70gVRmIcaI/AAAAAAAACpM/sNQwlW6_Vl4/image_thumb%25255B11%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>Update</p>\n<p>更新資料和新增資料很像，一樣是利用JSON.stringify來轉換成JSON格式，然後用PUT來進行傳送。</p>\n<pre class=\"brush: js;\">//更新資料\nfunction update() {\n    clearStatus();\n\n    var id = $('#contactId').val();\n\n    var json = JSON.stringify({ name: $(\"#name\").val(), phone: $(\"#phone\").val() });\n\n    $.ajax({\n        url: API_URL + id,\n        cache: false,\n        type: 'PUT',\n        contentType: 'application/json; charset=utf-8',\n        data: json,\n        success: function () { getAll(); }\n    })\n    .fail(\n    function (xhr, textStatus, err) {\n        $('#status').html('Error: ' + err);\n    });\n}\n</pre>\n<p>執行結果如下，我們ID、Name、Phone都填好後，按下Update就會更新資料，並且取得最新的table，我們也可以看到下面的偵錯工具，可以發現到現在是用HTTP PUT命令。</p>\n<p><a href=\"http://lh4.ggpht.com/-QxMIIIGwmng/T70gWbY5S9I/AAAAAAAACpU/vkC0-0qQKxs/s1600-h/image%25255B28%25255D.png\"><img src=\"http://lh5.ggpht.com/-0lIxh6qVFTc/T70gXa0y-6I/AAAAAAAACpc/EGho4LA7yww/image_thumb%25255B14%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>Delete</p>\n<p>刪除資料更簡單了，因為連JSON都不需要了，我們只要URL配合id，並且送出DELETE的指令就可以了! </p>\n<pre class=\"brush: js;\">//刪除指定資料\nfunction del() {\n    clearStatus();\n\n    var id = $('#contactId').val();\n\n    $.ajax({\n        url: API_URL + id,\n        cache: false,\n        type: 'DELETE',\n        contentType: 'application/json; charset=utf-8',\n        //data: json,\n        success: function () { getAll(); }\n    })\n    .fail(\n    function (xhr, textStatus, err) {\n        $('#status').html('Error: ' + err);\n    });\n}\n</pre>\n<p>測試一下，我們填入要刪除的ID，並按下Delete按鈕，table就會自動更新，我們也可以從偵錯視窗看到目前使用的是HTTP裡面的Delete命令。</p>\n<p><a href=\"http://lh3.ggpht.com/--KKP132158g/T70gYflo5OI/AAAAAAAACpo/XCbBAQtv4Ew/s1600-h/image%25255B33%25255D.png\"><img src=\"http://lh3.ggpht.com/-DsFMc3GEdSQ/T70gapYjo7I/AAAAAAAACpw/Hsa7_ozY0ZM/image_thumb%25255B17%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<h4>畫面載入完成時</h4>\n<p>這是最後一小段的程式碼，小弟我希望畫面載入完成後，table會再動載入資料進來，所以加了這段。</p>\n<pre class=\"brush: js;\">//開始時，先把資料讀取進來\n    $(document).ready(function () {\n        getAll();\n    });\n</pre>\n<p>到這邊就大功告成，我們最後再把整個index.cshtml看一遍吧。</p>\n<pre class=\"brush: xml;\">@{\n    Layout = null;\n}\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width\" /&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n\n&lt;style type=\"text/css\"&gt;\n    table\n    {\n        border: 1px solid #000;\n        border-collapse: collapse;\n        color: #666666;\n        min-width: 200px;\n    }\n\n    tr\n    {\n        border: 1px solid #000;\n        line-height: 25px;\n    }\n\n    th\n    {\n        background-color: #B1C3CC;\n        color: #000;\n        font-size: 13px;\n        text-align: left;\n    }\n\n    th, td\n    {\n        padding-left: 5px;\n    }\n&lt;/style&gt;\n&lt;script src=\"@Url.Content(\"~/Scripts/jquery-1.6.2.js\")\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\n    //清空status區段\n    function clearStatus() {\n        $('#status').html('');\n    }\n\n    var API_URL = \"api/Customer/\";\n\n    //增加資料\n    function add() {\n\n        clearStatus();\n\n        var json = JSON.stringify({ name: $(\"#name\").val(), phone: $(\"#phone\").val() });\n\n        $.ajax({\n            url: API_URL,\n            cache: false,\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            data: json,\n            statusCode: {\n                201 /*Created*/: function (data) {\n                    getAll();\n                }\n            }\n        });\n    }\n\n    //尋找資料\n    function find() {\n\n        clearStatus();\n\n        var id = $('#contactId').val();\n        if (id != \"\") {\n            $.getJSON(API_URL + id,\n            function (data) {\n                $(\"#customers tr\").remove();\n                $(\"#customers\").append(\"&lt;tr&gt;\" +\n                          \"&lt;td&gt;\" + data[\"Id\"] + \"&lt;/td&gt;\" +\n                          \"&lt;td&gt;\" + data[\"Name\"] + \"&lt;/td&gt;\" +\n                          \"&lt;td&gt;\" + data[\"Phone\"] + \"&lt;/td&gt;\" +\n                          \"&lt;/tr&gt;\");\n            })\n            .fail(\n            function (xhr, textStatus, err) {\n                $('#status').html('Error: ' + err);\n            });\n        } else {\n            getAll();\n        }\n    }\n\n    //更新資料\n    function update() {\n        clearStatus();\n\n        var id = $('#contactId').val();\n\n        var json = JSON.stringify({ name: $(\"#name\").val(), phone: $(\"#phone\").val() });\n\n        $.ajax({\n            url: API_URL + id,\n            cache: false,\n            type: 'PUT',\n            contentType: 'application/json; charset=utf-8',\n            data: json,\n            success: function () { getAll(); }\n        })\n        .fail(\n        function (xhr, textStatus, err) {\n            $('#status').html('Error: ' + err);\n        });\n    }\n\n    //刪除指定資料\n    function del() {\n        clearStatus();\n\n        var id = $('#contactId').val();\n\n        $.ajax({\n            url: API_URL + id,\n            cache: false,\n            type: 'DELETE',\n            contentType: 'application/json; charset=utf-8',\n            //data: json,\n            success: function () { getAll(); }\n        })\n        .fail(\n        function (xhr, textStatus, err) {\n            $('#status').html('Error: ' + err);\n        });\n    }\n\n    //取得所有資料\n    function getAll() {\n        clearStatus();\n\n        //利用Get方式取得。\n        $.getJSON(API_URL,\n        function (data) {\n            $(\"#customers tr\").remove();\n            for (i = 0; i &lt; data.length; i++) {\n                $(\"#customers\").append(\"&lt;tr&gt;\" +\n                              \"&lt;td&gt;\" + data[i].Id + \"&lt;/td&gt;\" +\n                              \"&lt;td&gt;\" + data[i].Name + \"&lt;/td&gt;\" +\n                              \"&lt;td&gt;\" + data[i].Phone + \"&lt;/td&gt;\" +\n                              \"&lt;/tr&gt;\");\n            }\n        })\n    .fail(\n        function (xhr, textStatus, err) {\n            $('#status').html('Error: ' + err);\n        });\n    }\n\n    //開始時，先把資料讀取進來\n    $(document).ready(function () {\n        getAll();\n    });\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"body\"&gt;\n        &lt;section class=\"content-wrapper main-content\"&gt;\n            &lt;h3&gt;Contacts&lt;/h3&gt;\n            &lt;table&gt;\n                &lt;thead&gt;\n                    &lt;tr&gt;\n                        &lt;th&gt;ID&lt;/th&gt;\n                        &lt;th&gt;Name&lt;/th&gt;\n                        &lt;th&gt;Phone&lt;/th&gt;\n                    &lt;/tr&gt;\n                &lt;/thead&gt;\n                &lt;tbody id=\"customers\"&gt;\n                &lt;/tbody&gt;\n            &lt;/table&gt;\n        &lt;/section&gt;\n        &lt;section id=\"detail\" class=\"content-wrapper\"&gt;\n            &lt;h3&gt;View Contact&lt;/h3&gt;\n            &lt;label for=\"contactId\"&gt;ID&lt;/label&gt;\n            &lt;input type=\"text\" title=\"ID\" id=\"contactId\" size=\"5\" /&gt;\n            &lt;input type=\"button\" value=\"Get\" onclick=\"find();\" /&gt;\n            &lt;div&gt;\n                &lt;label for=\"name\"&gt;Name&lt;/label&gt;\n                &lt;input type=\"text\" title=\"Name\" id=\"name\" /&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;label for=\"phone\"&gt; Phone&lt;/label&gt;\n                &lt;input type=\"text\" title=\"Phone\" id=\"phone\" /&gt;\n            &lt;/div&gt;\n            &lt;div&gt;\n                &lt;input type=\"button\" value=\"Update\" onclick=\"update();\" /&gt;\n                &lt;input type=\"button\" value=\"Delete\" onclick=\"del();\" /&gt;\n                &lt;input type=\"button\" value=\"Add New\" onclick=\"add();\" /&gt;\n            &lt;/div&gt;\n        &lt;div&gt;\n            &lt;p id=\"status\"&gt;&lt;/p&gt;\n        &lt;/div&gt;\n        &lt;/section&gt; \n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</pre>\n<p>以上，終於寫完!</p>\n<h4>後記</h4>\n<p>寫完的當下，才發現<a href=\"http://blog.kkbruce.net/search/label/Web%20API#.T70ecMWYS48\">KingKong前輩</a>，和<a href=\"http://mvc.keigen.net/2012/03/web-api_30.html\">阿源哥哥前輩</a>都有寫過類似的文章 ( 暈倒 )，但不管怎樣，這是小弟自己邊看邊寫的讀書筆記啦>&#x3C;，所以如果小弟沒寫好的地方，也可以去看看前輩們寫的超詳細文章喔!!</p>\n<h4>參考資料</h4>\n<ul>\n<li>\n<p><a href=\"http://zh.wikipedia.org/wiki/JQuery\" title=\"http://zh.wikipedia.org/wiki/JQuery\">http://zh.wikipedia.org/wiki/JQuery</a><li><a href=\"http://jquery.com/\" title=\"http://jquery.com/\">http://jquery.com/</a><li><a href=\"http://blog.darkthread.net/post-2009-01-23-my-jquery-tutorial.aspx\" title=\"http://blog.darkthread.net/post-2009-01-23-my-jquery-tutorial.aspx\">http://blog.darkthread.net/post-2009-01-23-my-jquery-tutorial.aspx</a><li><a href=\"http://knockoutjs.com/\" title=\"http://knockoutjs.com/\">http://knockoutjs.com/</a><li><a href=\"http://blog.darkthread.net/post-2012-05-09-knockout-js-intro.aspx\" title=\"http://blog.darkthread.net/post-2012-05-09-knockout-js-intro.aspx\">http://blog.darkthread.net/post-2012-05-09-knockout-js-intro.aspx</a><li><a href=\"http://blog.faq-book.com/?p=3456\" title=\"http://blog.faq-book.com/?p=3456\">http://blog.faq-book.com/?p=3456</a></p>\n<li>[http://blog.kkbruce.net/search/label/Web%20API#.T70ecMWYS48](http://blog.kkbruce.net/search/label/Web%20API#.T70ecMWYS48 \"http://blog.kkbruce.net/search/label/Web%20API#.T70ecMWYS48\")\n<li>[http://mvc.keigen.net/2012/03/web-api_30.html](http://mvc.keigen.net/2012/03/web-api_30.html \"http://mvc.keigen.net/2012/03/web-api_30.html\")\n<li>[http://www.asp.net/web-api/overview/creating-web-apis/creating-a-web-api-that-supports-crud-operations](http://www.asp.net/web-api/overview/creating-web-apis/creating-a-web-api-that-supports-crud-operations \"http://www.asp.net/web-api/overview/creating-web-apis/creating-a-web-api-that-supports-crud-operations\")\n</li>\n</ul>","excerpt":"支援版本 ASP.NET MVC 4 Beta  終於進入到View篇了，本來是預計一天把三篇寫完的，結果沒想到變成一個禮拜一篇= =，現在終於知道連載的辛苦了，富木堅，對不起以前都一直罵你XDD；回到主題，上一篇我們介紹到Controller，也把整個Web Service…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Visual Studio -  開啟起始頁","tags":["Visual Studio"]},"fields":{"slug":"/2012/05/23/Visual-Studio-開啟起始頁/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Visual-Studio-開啟起始頁.md"},"previous":{"frontmatter":{"path":null,"title":"ASP.NET MVC Web API - 利用jQuery進行CRUD! 番外篇 丟去Azure吧!","tags":["ASP.NET MVC","Azure","Visual Studio"]},"fields":{"slug":"/2012/05/24/ASP-NET-MVC-Web-API-利用jQuery進行CRUD-番外篇-丟去Azure吧/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-Web-API-利用jQuery進行CRUD-番外篇-丟去Azure吧.md"}}}}