{"componentChunkName":"component---src-templates-page-js","path":"/2010/08/09/Linq之動態查詢/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Linq之動態查詢","date":"09 August 2010","author":"Sky Chang","excerpt":null,"tags":["Entity Framework","Linq"],"coverImage":null},"id":"c8ad6047-227b-5954-8b40-075db9145032","html":"<p>Linq之動態查詢。</p>\n<p>最近寫Linq碰到一個問題，</p>\n<p>就是如果要寫一個查詢系統，這個系統裡面有很多TextBox可以填，</p>\n<p>然後撈出符合各個欄位的資料。</p>\n<p>在SQL查詢的時候還滿方便的，用字串連連連就可以了，</p>\n<p>( 也就是sqlStr += \"or name like '%sanc%' \" )</p>\n<p>那在Linq的話呢，就完全沒有辦法可以用連連連的方法QQ</p>\n<p>後來和G神禱告後，G神告訴我目前有三種方法可以處理。</p>\n<p>第一是出自MS的Linq Dynamic Query Library</p>\n<p>但聽說一堆問題，就懶得去試了。</p>\n<p>第二是自己寫運算式樹，也就是建立QueryBuilder</p>\n<p>好吧，我有空會再找時間研究看看QQ</p>\n<p>第三則是由有名的C# In a Nutshell作者寫的一個Library</p>\n<p>( 其實滿想讀他寫的書的，但是全英文....光看這篇，就懶了= = )</p>\n<p>總之，最後用了第三個方案，因為真的很方便，也很直覺。</p>\n<p>要擴充或是移除，都很方便。</p>\n<p>他給的第一個範例是這樣，這個範例沒用到什麼技巧，</p>\n<p>反正直接就可以用了。</p>\n<pre class=\"brush: csharp\">IQueryable SearchProducts (params string[] keywords)\n{\n  IQueryable query = dataContext.Products;\n\n  foreach (string keyword in keywords)\n  {\n    string temp = keyword;\n    query = query.Where (p =&gt; p.Description.Contains (temp));\n  }\nreturn query;\n}\n</pre>這個的功能很簡單，假設你送進去，\"可樂\"、\"暢快\"，\n<p>他就會把在Products的Description(描述)裡面有\"可樂\"和\"暢快\"這兩個關鍵字</p>\n<p>的內容撈出來，也就是用and的方法。</p>\n<p>但是，我們常常需要用到or方法，例如要查詢\"可樂\"、\"雪碧\"。</p>\n<p>那在用這種查詢方法，就沒辦法查的到了....</p>\n<p>( 不可能會出現一種可樂是雪碧口味的吧= =)</p>\n<p>ok~所以作者提出了另外一種方法，也就是使用了PredicateBuilder</p>\n<pre class=\"brush: csharp\">IQueryable SearchProducts (params string[] keywords)\n{\n  var predicate = PredicateBuilder.False();\n\n  foreach (string keyword in keywords)\n  {\n    string temp = keyword;\n    predicate = predicate.Or (p =&gt; p.Description.Contains (temp));\n  }\nreturn dataContext.Products.Where (predicate);\n}\n</pre>用Or方法，就可以用or來查詢\"可樂\"和\"雪碧\"。\n<p>讚吧!!果然是神人級的。</p>\n<p>但是看到這邊，不要馬上貼上去使用阿~@@~</p>\n<p>因為最重要最重要的關鍵是</p>\n<p>我們還沒有PredicateBuilder這個類別阿。</p>\n<p>這裡有兩個方法可以使用這個類別。</p>\n<p>一、去作者網站下載LinqKit</p>\n<p>二、去作者網站將PredicateBuilder的程式碼複製貼上</p>\n<p>( 兩個都夠簡單吧= = )</p>\n<p>最後，要補充一下，</p>\n<p>如果是使用Linq to Entity的話，要把程式碼的最後一行改為</p>\n<pre class=\"brush: csharp\">return objectContext.Products.AsExpandable().Where (predicate);\n</pre>也就是如下程式碼。\n<pre class=\"brush: csharp\">IQueryable SearchProducts (params string[] keywords)\n{\n  var predicate = PredicateBuilder.False();\n\n  foreach (string keyword in keywords)\n  {\n    string temp = keyword;\n    predicate = predicate.Or (p =&gt; p.Description.Contains (temp));\n  }\nreturn objectContext.Products.AsExpandable().Where (predicate);\n}\n</pre>另外，如果要查名子、描述、發行公司等等\n<p>很多TextBox的話，怎麼辦呢?</p>\n<p>就改成這樣。</p>\n<pre class=\"brush: csharp\">var predicate = PredicateBuilder.False();\npredicate = predicate.Or(p =&gt; p.name.Contains(要查詢的));\npredicate = predicate.Or(p =&gt; p.Description.Contains (要查詢的));\nobjectContext.Products.AsExpandable().Where (predicate);\n</pre>這樣擴充有沒有很容易呢!?\n<p>最後，這些我都還沒實驗過，實驗完後，我會再修改這篇文章，</p>\n<p>將正確的訊息貼上。</p>","excerpt":"Linq之動態查詢。 最近寫Linq碰到一個問題， 就是如果要寫一個查詢系統，這個系統裡面有很多TextBox可以填， 然後撈出符合各個欄位的資料。 在SQL查詢的時候還滿方便的，用字串連連連就可以了， ( 也就是sqlStr += \"or name like '%sanc…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Form快速使用","tags":["HTML","快速使用"]},"fields":{"slug":"/2010/07/12/Form快速使用/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Form快速使用.md"},"previous":{"frontmatter":{"path":null,"title":"Firefox無法Debug Silveright解決方案","tags":["Firefox","Silveright"]},"fields":{"slug":"/2010/08/18/Firefox無法Debug-Silveright解決方案/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Firefox無法Debug-Silveright解決方案.md"}}}}