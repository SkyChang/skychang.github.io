{"componentChunkName":"component---src-templates-page-js","path":"/2014/05/17/AngularJS-AngularJS-與-UI-Bootstrap-Scope的陷阱/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"AngularJS -  AngularJS 與 UI-Bootstrap Scope的陷阱","date":"17 May 2014","author":"Sky Chang","excerpt":null,"tags":["AngularJS","JavaScript"],"coverImage":null},"id":"1e494d05-e65b-5d0a-97ba-ec6f9aba34b0","html":"<p>這幾天，遇雷的狀況，都已經快要變成索爾了…而今天要談的這個問題，其實算是JS加上AngularJS的基本功…牽涉的範圍還滿廣泛的…從UI-Bootstrap這個Directive開始..到AngularJS Scope的範圍，一直到JavaScript的原型繼承…</p>\n<p>而這篇的整個概念可以看<a href=\"http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs\">原文這裡</a>，對岸的高手，也有幫忙翻譯成<a href=\"http://www.lovelucy.info/understanding-scopes-in-angularjs.html\">簡體中文</a>，所以有興趣的可以先看一下上面這些資訊( 沒時間看的朋友也沒關係，可以先聽小弟講完，再回頭看… )；而以下的敘述，會依據上面的理論來開始解釋小弟遇到的問題…</p>\n<h4>問題</h4>\n<p>首先，我們還是要先來看一下問題…</p>\n<p>大家可以從這邊看到<a href=\"http://plnkr.co/edit/RK2AyP?p=preview\">原始碼</a>…另外，我也貼一份在Blog…</p>\n<p>HTML</p>\n<pre class=\"brush: csharp;\">&lt;!doctype html&gt;\n&lt;html ng-app=\"plunker\"&gt;\n  &lt;head&gt;\n    &lt;script src=\"//ajax.googleapis.com/ajax/libs/angularjs/1.2.10/angular.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.11.0.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n    &lt;link href=\"//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css\" rel=\"stylesheet\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n\n&lt;div ng-controller=\"ModalDemoCtrl\"&gt;\n    &lt;script type=\"text/ng-template\" id=\"myModalContent.html\"&gt;\n        &lt;div class=\"modal-header\"&gt;\n            &lt;h3 class=\"modal-title\"&gt;I'm a modal!&lt;/h3&gt;\n        &lt;/div&gt;\n        &lt;div class=\"modal-body\"&gt;\n            &lt;ul&gt;\n                &lt;li ng-repeat=\"item in items\"&gt;\n                    &lt;a ng-click=\"selected.item = item\"&gt;{{ item }}&lt;/a&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            Selected: &lt;b&gt;{{ selected.item }}&lt;/b&gt;\n        &lt;/div&gt;\n        &lt;input type=\"text\" ng-model=\"testText\"  /&gt;\n        &lt;div class=\"modal-footer\"&gt;\n            &lt;button class=\"btn btn-primary\" ng-click=\"ok()\"&gt;OK&lt;/button&gt;\n            &lt;button class=\"btn btn-warning\" ng-click=\"cancel()\"&gt;Cancel&lt;/button&gt;\n        &lt;/div&gt;\n    &lt;/script&gt;\n\n    &lt;button class=\"btn btn-default\" ng-click=\"open()\"&gt;Open me!&lt;/button&gt;\n    &lt;div ng-show=\"selected\"&gt;Selection from a modal: {{ selected }}&lt;/div&gt;\n&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</pre>\n<p>JS</p>\n<pre class=\"brush: js;\">angular.module('plunker', ['ui.bootstrap']);\nvar ModalDemoCtrl = function ($scope, $modal, $log) {\n\n  $scope.items = ['item1', 'item2', 'item3'];\n\n  $scope.open = function (size) {\n\n    var modalInstance = $modal.open({\n      templateUrl: 'myModalContent.html',\n      controller: ModalInstanceCtrl,\n      size: size,\n      resolve: {\n        items: function () {\n          return $scope.items;\n        }\n      }\n    });\n\n    modalInstance.result.then(function (selectedItem) {\n      $scope.selected = selectedItem;\n    }, function () {\n      $log.info('Modal dismissed at: ' + new Date());\n    });\n  };\n};\n\n// Please note that $modalInstance represents a modal window (instance) dependency.\n// It is not the same as the $modal service used above.\n\nvar ModalInstanceCtrl = function ($scope, $modalInstance, items) {\n\n  $scope.items = items;\n  $scope.selected = {\n    item: $scope.items[0]\n  };\n\n  $scope.ok = function () {\n    alert($scope.testTest);\n    $modalInstance.close($scope.selected.item);\n  };\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss('cancel');\n  };\n};\n</pre>\n<p>好，稍微解釋一下這個問題，這個問題主要是使用UI-Bootstrap Modal的時候，如果我們再彈跳視窗的地方，加上一個Textbox，並且用ng-model ( 原始碼上是Bind到testText )來做Bind；最後當我們按下ok按鈕的時候，會用alert($scope.testText)來顯示值…</p>\n<p>但實際上，大家玩過後可以發現，是找不到這個值的…而且這個值為定義…</p>\n<h4>解法</h4>\n<p>這個解法其實很簡單，我們只要把Text的ng-model改成繫結$parent.testText就可以了…所以會長的如下這樣:</p>\n<p>把原本繫結testText改成$parent.testText…</p>\n<pre class=\"brush: xml;\">&lt;input type=\"text\" ng-model=\"$parent.testText\"  /&gt;\n</pre>\n<p>是的，這樣alert就可以順利彈跳出來值…</p>\n<p>此外，你也可以改成這樣…變成繫結oo.testText</p>\n<pre class=\"brush: xml;\">&lt;input type=\"text\" ng-model=\"oo.testText\"  /&gt;\n</pre>\n<p>但這時候，JavaScript那邊也要跟調整…我們在一開始的時候設定oo為物件，並且alert改為alert($scope.oo.testText)。</p>\n<pre class=\"brush: js;\">var ModalInstanceCtrl = function ($scope, $modalInstance, items) {\n\n  $scope.oo = {};\n  $scope.items = items;\n  $scope.selected = {\n    item: $scope.items[0]\n  };\n\n  $scope.ok = function () {\n    alert($scope.oo.testText);\n    $modalInstance.close($scope.selected.item);\n  };\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss('cancel');\n  };\n};\n</pre>\n<p>是的，以下兩種方法都可以順利解決這個問題…但是大家一定會覺得很奇怪和納悶…為什麼這樣就可以??</p>\n<h4>解釋</h4>\n<p>首先，我們回去思索一下問題。</p>\n<p>小弟我使用UI-Bootstrap的Modal，並且定義了這個Modal獨立的Controller，但為什麼這個Modal畫面上的ng-model，在Modal這個Controller上讀不到…反之…加了$Parent或是使用oo.這種寫法就可以讀的到!?</p>\n<p>其實原理就是一開始給大家看的那個網址( 如果沒看的朋友也沒關係，可以繼續看下去 )；小弟引用了一下原文的一張圖，其實原理就是這張圖上…</p>\n<p><a href=\"http://lh3.ggpht.com/-FzQaew2I_vs/U3w-tlNMj-I/AAAAAAAAI3Y/t-o3Twkv9n8/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh4.ggpht.com/-fwl4nMJ9qEs/U3w-ur7JsmI/AAAAAAAAI3g/UPAbSW7Iqqc/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>我們使用的UI-Bootstrap其實是用AngularJS的Directive寫的，這點我相信大家都沒啥問題…而UI-Bootstrap在設定Directive有使用到Transclude ( Transclude 是替換內容的功能 )，而當AngularJS有使用到Transclude時，其實會建立一個獨立的Scope，也就是圖上的TranscludedScope…</p>\n<p>其次，除了TranscluedScope外，AngularJS還會建立另外一個Scope…也就是IsolateScope…而IsolateScope會透過的$$nextSibling指向到TranscludedScope…</p>\n<p>發現了嗎?..真實的底層，並不是我們想的，只有我們為Modal建立的Controller Scope…除了我們為Modal建立的Controller Scope外，還有兩個Scope!!</p>\n<p>所以我們驗證一下，如下圖，我們可以看到他其實不是在我們Modal Controller的Scope，而是自己獨立的Scope….( Modal Controller的Scope為 Scope(004) )，所以可以確定$scope(007)為TranscluedScope</p>\n<p><a href=\"http://lh3.ggpht.com/-Jxgv5vavcTY/U3w-vQ2VUZI/AAAAAAAAI3o/b1azWJAQrc4/s1600-h/image%25255B8%25255D.png\"><img src=\"http://lh5.ggpht.com/-Y5e96uLtfaI/U3w-weTXpeI/AAAAAAAAI3w/6LMzYzHauQM/image_thumb%25255B4%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>我們繼續驗證下去…當我們拉到Scope (006)的時候，我們可以看到$$nextSibling確實指向到了Scope(007)，所以可以確定Scope(006)就是IsolateScope</p>\n<p><a href=\"http://lh3.ggpht.com/-uJBgwlivqeo/U3w-xaxZn8I/AAAAAAAAI34/op7QahbYU-w/s1600-h/image%25255B12%25255D.png\"><img src=\"http://lh3.ggpht.com/-2nYIeuPZfUg/U3w-zB8qKkI/AAAAAAAAI4A/TyMj4mpJSeI/image_thumb%25255B6%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>也因此，實際上我們的Controller與定義畫面的model的Scope完全不同，自然Controller也呼叫不到…</p>\n<p>但那為什麼用$parent.testText就可以呢??..因為$parent是代表上一層的意思(父層)，而他的父層就是Controller，所以也就是代表在父層的Controller Scope定義了這個變數…</p>\n<p>那oo.testText為什麼可以呢…如果ng-model=”oo.testText\"這個變數應該也是會落在TranscluedScope上阿??</p>\n<p>那是因為JavaScript原型繼承的特性…如果我們只打ng-model=”oo.testText\"，那的確還是會落在TranscluedScope上…</p>\n<p><a href=\"http://lh5.ggpht.com/-RdAYqhDjsNE/U3w-0ARYuJI/AAAAAAAAI4I/VabGqjSQfpk/s1600-h/image%25255B17%25255D.png\"><img src=\"http://lh6.ggpht.com/-L1Eib4yEgiw/U3w-0oWDuCI/AAAAAAAAI4Q/mS5KFGKj1HE/image_thumb%25255B9%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>但如果今天，我們在Controller Scope裡面寫了$Scope.oo = {}，則因JavaScript原型繼承的特性，當子物件要去定義oo.testText的時候，會先往上找到父層，看看有沒有oo這個物件，如果有的話，就實作於父層的oo下面，加上textText，若父層沒有，就會在子物件那邊，建立一個oo.testText…</p>\n<p>基本上就是這樣…</p>\n<p>最後，或許有人會說，那如果父層有oo，那我真的要在子物件去控制oo裡面的東西，不就會找不到oo!?，因為只有父層有oo啊!!?</p>\n<p>但實際上，子Scope還是可以找的到oo，那是因為父層和子Scope都是參考到oo這個物件的記憶體位置~~</p>\n<p>最後的最後，總之，這次的這個Case的原因，其實就是…我們的Controller實際上是屬於父層..但我們直接用ng-model=”testText”的時候，是在子Scope建立了這個變數，而非父層…，所以解決的方法，第一個就是告訴ng-model，要建立這個變數到父層喔!!，或是使用物件的方式，讓這個物件建立於父層~~</p>\n<p>就是這樣!!~</p>\n<h4>後記</h4>\n<p>利用上班中午休息時間趕稿趕完XDDD，如有錯誤，也請大家多多包涵~~~</p>\n<h4>參考資料</h4>\n<ul>\n<li>\n<p><a href=\"http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs\" title=\"http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs\">http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs</a></p>\n<li>[http://www.lovelucy.info/understanding-scopes-in-angularjs.html](http://www.lovelucy.info/understanding-scopes-in-angularjs.html \"http://www.lovelucy.info/understanding-scopes-in-angularjs.html\")<li>[https://github.com/angular/angular.js/issues/5489](https://github.com/angular/angular.js/issues/5489 \"https://github.com/angular/angular.js/issues/5489\")<li>[https://egghead.io/lessons/angularjs-the-dot](https://egghead.io/lessons/angularjs-the-dot \"https://egghead.io/lessons/angularjs-the-dot\")<li>[https://docs.angularjs.org/error/$compile/nonassign?p0=undefined&amp;p1=box](https://docs.angularjs.org/error/$compile/nonassign?p0=undefined&amp;p1=box \"https://docs.angularjs.org/error/$compile/nonassign?p0=undefined&amp;p1=box\")<li>[https://docs.angularjs.org/api/ng/directive/ngTransclude](https://docs.angularjs.org/api/ng/directive/ngTransclude \"https://docs.angularjs.org/api/ng/directive/ngTransclude\")<li>[https://github.com/angular-ui/bootstrap/blob/master/template/modal/window.html](https://github.com/angular-ui/bootstrap/blob/master/template/modal/window.html \"https://github.com/angular-ui/bootstrap/blob/master/template/modal/window.html\")\n</li>\n</ul>","excerpt":"這幾天，遇雷的狀況，都已經快要變成索爾了…而今天要談的這個問題，其實算是JS加上AngularJS的基本功…牽涉的範圍還滿廣泛的…從UI-Bootstrap這個Directive開始..到AngularJS Scope的範圍，一直到JavaScript…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"ASP.NET MVC - 限制CamalCase在特定的Web API Controller下","tags":["ASP.NET MVC"]},"fields":{"slug":"/2014/05/15/ASP-NET-MVC-限制CamalCase在特定的Web-API-Controller下/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-限制CamalCase在特定的Web-API-Controller下.md"},"previous":{"frontmatter":{"path":null,"title":"ASP.NET MVC - ASP.NET MVC vNext ( MVC 6 ) KVM初體驗","tags":["ASP.NET MVC","Git","KVM"]},"fields":{"slug":"/2014/05/22/ASP-NET-MVC-ASP-NET-MVC-vNext-MVC-6-KVM初體驗/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-ASP-NET-MVC-vNext-MVC-6-KVM初體驗.md"}}}}