{"componentChunkName":"component---src-templates-page-js","path":"/2014/06/20/ASP-NET-MVC-ASP-NET-MVC-vNext-MVC-6-於MAC上跑ASP-NET-MVC-上篇-安裝Mono/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"ASP.NET MVC - ASP.NET MVC vNext ( MVC 6 ) 於MAC上跑ASP.NET MVC (上篇) 安裝Mono","date":"20 June 2014","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC","Git","KVM","Linux","Mac","mono"],"coverImage":null},"id":"5778c74e-57a0-5572-89b2-fd52791a4fe5","html":"<p>前篇介紹了用USB將編譯好的ASP.NET MVC網站丟到另外一台機器上，就算沒裝K環境，還是可以正常地跑；但是，大家這樣就滿足了嗎?；下一代的ASP.NET MVC vNext可不只是這樣而已，現在也支援了跨平台執行ASP.NET MVC的應用程式；所以小弟我，這次就來試驗一下，如何跨到Apple的MAC OS上!! ( 第一次覺得小弟的Macbook那麼有用… )</p>\n<p>但Mac底下沒有CLR阿…那該怎麼辦呢??，沒錯，就是靠Mono啦…所以這篇，就來教大家，如何安裝Mono…</p>\n<p>基本上，在Mac底下安裝Mono說難不難，說簡單也不簡單…基本上只要照著以下指令下，通常都可以成功~</p>\n<p><font color=\"#ff0000\">警告!! 目前Mono這個版本，也並非正式釋出，所以也會有很多的bug，小弟是為了興趣而嘗鮮，如要用在正式環境，還是建議等推出正式版本，再來裝設。</font></p>\n<pre class=\"brush: js;\">PREFIX=/usr/local\n\n# Ensure you have write permissions to /usr/local\nmkdir $PREFIX\nsudo chown -R `whoami` $PREFIX\n\n# Downlaod and build dependencies\nmkdir ~/Build\ncd ~/Build\ncurl -O ftp://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz\ncurl -O ftp://ftp.gnu.org/gnu/automake/automake-1.14.tar.gz\ncurl -O ftp://ftp.gnu.org/gnu/libtool/libtool-2.4.2.tar.gz\n\nfor i in *.tar.gz; do tar xzvf $i; done\nfor i in */configure; do (cd `dirname $i`; ./configure --prefix=$PREFIX &amp;&amp; make &amp;&amp; make install); done\n\nPATH=$PREFIX/bin:$PATH\ngit clone https://github.com/mono/mono.git\ncd mono\nCC='cc -m32' ./autogen.sh --prefix=$PREFIX --disable-nls --build=i386-apple-darwin11.2.0\nmake get-monolite-latest\nmake\nmake install\n</pre>\n<p>好，現在開始，我們一步一步地做。</p>\n<p>首先我們先設一下變數，PREFIX=/usr/local，這樣之後就不怕Key錯路徑了，而且未來的mono所包好的dll也會放到這個目錄之下。</p>\n<p>接下來，要建立剛剛我們設定的那個路徑的目錄，並且將我們自己設為這個目錄的owner，所以會下這兩個指令；另外要注意，'whoami’記得換成自己的名稱喔 ( 連單引號都不用Key )。</p>\n<pre>mkdir $PREFIX\nsudo chown -R `whoami` $PREFIX</pre><pre>下圖這邊因為我已經建立過usr/local了，所以他提示我，已經存在了。</pre>\n<p><a href=\"http://lh5.ggpht.com/-1FBQbewijzQ/U6B3Uegrn1I/AAAAAAAAJTw/Lw5Z4Jvxz8A/s1600-h/SNAGHTML3a49bdd%25255B4%25255D.png\"><img src=\"http://lh4.ggpht.com/-Gd5do6rrIlI/U6B3VdTmU2I/AAAAAAAAJT4/ZWEwDNHgpDQ/SNAGHTML3a49bdd_thumb%25255B1%25255D.png?imgmax=800\" alt=\"SNAGHTML3a49bdd\" title=\"SNAGHTML3a49bdd\"></a></p>\n<p>接下來，我們要執行這些指令。</p>\n<pre>mkdir ~/Build\ncd ~/Build\ncurl -O ftp://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz\ncurl -O ftp://ftp.gnu.org/gnu/automake/automake-1.14.tar.gz\ncurl -O ftp://ftp.gnu.org/gnu/libtool/libtool-2.4.2.tar.gz&nbsp;&nbsp; \nfor i in *.tar.gz; do tar xzvf $i; done</pre><pre>這些指令就是在家目錄建立一個Build目錄，並且下載三個要用到的套件；分別是autoconf、automake、libtool，這是因為編譯Mono需要這三個套件。</pre><pre>接下來，就用迴圈，將這三個壓縮檔通通解開。</pre>\n<p><a href=\"http://lh5.ggpht.com/-C17Z2_DR7w4/U6B3Vwu5yjI/AAAAAAAAJUA/1QH-NfRVEq4/s1600-h/SNAGHTML3a3a75b%25255B4%25255D.png\"><img src=\"http://lh3.ggpht.com/-LsCbNk-0Rsk/U6B3WsmIIwI/AAAAAAAAJUI/yZnIeO3R9fA/SNAGHTML3a3a75b_thumb%25255B1%25255D.png?imgmax=800\" alt=\"SNAGHTML3a3a75b\" title=\"SNAGHTML3a3a75b\"></a></p>\n<p>完成後的圖如下；接下來就輸入以下指令編譯與安裝。</p>\n<p>( 下圖的部分，指令key進去後沒截到圖，但我們可以從下圖看到，這三個套件都已經解開了 )</p>\n<pre>for i in */configure; do (cd `dirname $i`; ./configure --prefix=$PREFIX &amp;&amp; make &amp;&amp; make install); done</pre><pre>( 查資料的過程中有發現，有人這三個套件Build不起來，有人建議是要裝xcode…但小弟的Macbook本身就有裝xcode，所以過程是滿順利的…所以過程中有遇到問題，可以死馬當活馬醫，試試看吧… )</pre>\n<p><a href=\"http://lh6.ggpht.com/--cU_jfcir-k/U6B3XU5gzdI/AAAAAAAAJUQ/Q0u_aT_VIAw/s1600-h/Image.png\"><img src=\"http://lh6.ggpht.com/-gzSGlqe8i50/U6B3YYeoL9I/AAAAAAAAJUY/Qw5yQ7WqHoQ/Image.png?imgmax=800\" alt=\"螢幕快照 2014-06-17 下午11.21.48\" title=\"螢幕快照 2014-06-17 下午11.21.48\"></a></p>\n<p>正確安裝完成後，我們要設定PATH這個變數，然後使用git下載最新版本的mono；並且進入mono目錄，來下指令檢查與編譯前準備。 </p>\n<p>( 注意，mono的source也要放到剛剛上面下載下來的同一個目錄裡面，也就是Build裡面，不然會出錯 )。</p>\n<pre>PATH=$PREFIX/bin:$PATH\ngit clone https://github.com/mono/mono.git\ncd mono\nCC='cc -m32' ./autogen.sh --prefix=$PREFIX --disable-nls --build=i386-apple-darwin11.2.0</pre>\n<p><a href=\"http://lh3.ggpht.com/-Nk_U-v1w8J4/U6B3ZLsahlI/AAAAAAAAJUg/NAOwNPkzy10/s1600-h/Image.png\"><img src=\"http://lh6.ggpht.com/-i80xHb3h2UE/U6B3Z_Ve03I/AAAAAAAAJUo/GlRrMCviX-I/Image.png?imgmax=800\" alt=\"螢幕快照 2014-06-18 上午12.16.38\" title=\"螢幕快照 2014-06-18 上午12.16.38\"></a></p>\n<p>完成後，我們就可以使用make編譯了，編譯完成後可以再用make install安裝…</p>\n<p>但正式開始使用make指令前，要先下make get-monolite-latest來取得最新的mcs compiler，不然會有錯誤make[6]: gmcs: No such file or directory的錯誤。</p>\n<p>取得之後，就可以下make，當make跑了超久跑完之後，就可以下make install了。</p>\n<p>( 下圖也沒截圖截到…反正就是跑很久就是了… )</p>\n<p><a href=\"http://lh3.ggpht.com/-YcSviywiAB0/U6B3aQwJm0I/AAAAAAAAJUw/O86Ba-CAdjw/s1600-h/Image.png\"><img src=\"http://lh4.ggpht.com/-HcUMJ-JYd94/U6B3bHpjf0I/AAAAAAAAJU4/zXj71W9zciw/Image.png?imgmax=800\" alt=\"螢幕快照 2014-06-18 上午12.22.05\" title=\"螢幕快照 2014-06-18 上午12.22.05\"></a></p>\n<p>接下來要調整一下預設的路徑位置，我們要去/private/etc/裡面的paths這個檔案去做修改；但因為這個檔案的權限是644 ( 644代表只有root可以讀寫，其他都只能讀，詳細可以去看Linux的權限設定 )，所以小弟先把它改成777，等改完檔案後，再調整回644。</p>\n<p>( 指令如下圖，因為這算是基本的Linux指令，小弟就不多談了，請見諒~ )</p>\n<p><a href=\"http://lh4.ggpht.com/-_69tqtfbjV0/U6B3b5MkGJI/AAAAAAAAJVA/wIVI2SAdSNM/s1600-h/Image.png\"><img src=\"http://lh4.ggpht.com/-j5NZ11Xs3eE/U6B3cqcdVJI/AAAAAAAAJVI/b4BJJFXran8/Image.png?imgmax=800\" alt=\"螢幕快照 2014-06-18 上午12.37.01\" title=\"螢幕快照 2014-06-18 上午12.37.01\"></a></p>\n<p>這邊小弟是使用vi直接改了…如果不熟vi的朋友，可能會很吃力…看看能不能用ide的編輯器改…基本上，而如果是使用vi編輯的方法，就是進去vi後，按下i，就可以編輯內容，編輯好後，按下:wq，就可以儲存…如果編輯錯了，可以按下:!q來跳出VI，從新再來一次…</p>\n<p>而這邊，我們要把/usr/local/bin放到/usr/bin之上，但這邊也要小心，如果原本/usr/bin有放大量的指令，這樣改，未來系統可能會有問題，不過基本上小弟本來就很少在OSX安裝那些東西，所以我是不怎麼怕啦XDDD。</p>\n<p><a href=\"http://lh3.ggpht.com/-NjP3l1KnjHQ/U6B3dUFloUI/AAAAAAAAJVQ/8GNIl-ulvPI/s1600-h/Image.png\"><img src=\"http://lh3.ggpht.com/-lnDskQzQD0I/U6B3dxzvsRI/AAAAAAAAJVY/BzzxWBIiQis/Image.png?imgmax=800\" alt=\"螢幕快照 2014-06-18 上午12.36.25\" title=\"螢幕快照 2014-06-18 上午12.36.25\"></a></p>\n<p>編輯完成後，就把剛剛那個檔案改回644。</p>\n<p><a href=\"http://lh6.ggpht.com/-cuy8LQoJK-U/U6B3ejDTc3I/AAAAAAAAJVg/HQ_iEV4LVlY/s1600-h/Image.png\"><img src=\"http://lh5.ggpht.com/-kbD6VMOumB8/U6B3fWHLCAI/AAAAAAAAJVo/3qH3JJTvwTk/Image.png?imgmax=800\" alt=\"螢幕快照 2014-06-18 上午12.37.01\" title=\"螢幕快照 2014-06-18 上午12.37.01\"></a></p>\n<p>然後下Mono --version就可以看到mono的版本，一定要3.6.1以上…</p>\n<p><a href=\"http://lh4.ggpht.com/-vAX6ClMtm7k/U6B3f1fwpEI/AAAAAAAAJVw/-2_inzYPixc/s1600-h/Image.png\"><img src=\"http://lh4.ggpht.com/-2pasQMGis9s/U6B3gk1B2PI/AAAAAAAAJV4/qNAdzvCr1e4/Image.png?imgmax=800\" alt=\"螢幕快照 2014-06-18 上午12.38.12\" title=\"螢幕快照 2014-06-18 上午12.38.12\"></a></p>\n<p>基本上這樣就完成了~~初步就到這邊，後篇則是要改ASP.NET MVC的project.json檔，來達到可以run在OSX上的目的。</p>\n<h4>參考資料</h4>\n<ul>\n<li><a href=\"http://www.mono-project.com/Compiling_Mono_on_OSX\" title=\"http://www.mono-project.com/Compiling_Mono_on_OSX\">http://www.mono-project.com/Compiling<em>Mono</em>on_OSX</a><li><a href=\"http://graemechristie.github.io/graemechristie/blog/2014/05/26/asp-dot-net-vnext-on-osx-and-linux/\" title=\"http://graemechristie.github.io/graemechristie/blog/2014/05/26/asp-dot-net-vnext-on-osx-and-linux/\">http://graemechristie.github.io/graemechristie/blog/2014/05/26/asp-dot-net-vnext-on-osx-and-linux/</a><li><a href=\"https://github.com/mono/mono#compilation-and-installation\" title=\"https://github.com/mono/mono#compilation-and-installation\">https://github.com/mono/mono#compilation-and-installation</a><li><a href=\"http://qiita.com/disktnk/items/cb643ac86c0fd5a0bba2\" title=\"http://qiita.com/disktnk/items/cb643ac86c0fd5a0bba2\">http://qiita.com/disktnk/items/cb643ac86c0fd5a0bba2</a></li>\n</ul>","excerpt":"前篇介紹了用USB將編譯好的ASP.NET MVC網站丟到另外一台機器上，就算沒裝K環境，還是可以正常地跑；但是，大家這樣就滿足了嗎?；下一代的ASP.NET MVC vNext可不只是這樣而已，現在也支援了跨平台執行ASP.NET MVC…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"ASP.NET MVC - ASP.NET MVC vNext ( MVC 6 ) 使用Source Code","tags":["ASP.NET MVC","Git","KVM","Visual Studio"]},"fields":{"slug":"/2014/06/20/ASP-NET-MVC-ASP-NET-MVC-vNext-MVC-6-使用Source-Code/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-ASP-NET-MVC-vNext-MVC-6-使用Source-Code.md"},"previous":{"frontmatter":{"path":null,"title":"ASP.NET MVC - ASP.NET MVC vNext ( MVC 6 ) 於MAC上跑ASP.NET MVC (後篇) Kruntime與MVC專案設定","tags":["ASP.NET MVC","KVM","Mac"]},"fields":{"slug":"/2014/06/20/ASP-NET-MVC-ASP-NET-MVC-vNext-MVC-6-於MAC上跑ASP-NET-MVC-後篇-Kruntime與MVC專案設定/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/ASP-NET-MVC-ASP-NET-MVC-vNext-MVC-6-於MAC上跑ASP-NET-MVC-後篇-Kruntime與MVC專案設定.md"}}}}