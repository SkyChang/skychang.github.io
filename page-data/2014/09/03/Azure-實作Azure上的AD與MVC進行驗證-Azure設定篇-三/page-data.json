{"componentChunkName":"component---src-templates-page-js","path":"/2014/09/03/Azure-實作Azure上的AD與MVC進行驗證-Azure設定篇-三/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Azure - 實作Azure上的AD與MVC進行驗證 - Azure設定篇 ( 三 )","date":"03 September 2014","author":"Sky Chang","excerpt":null,"tags":["Active Directory","ASP.NET MVC","Azure"],"coverImage":null},"id":"b8e187c2-147b-5f7d-be15-2308366894c4","html":"<p>持續努力，現在進入第三篇了!!，第三篇我們先以完成為目標，所以小弟先不在這邊講Code的內容了，這部份未來再補上。</p>\n<p><a href=\"http://lh4.ggpht.com/-ax5U2J9U6iA/VAXvNkYkIeI/AAAAAAAAJ2k/3b_Y9nICA6I/s1600-h/image%25255B3%25255D.png\"><img src=\"http://lh5.ggpht.com/-oH5HQ7LlkS4/VAXvO_hYg-I/AAAAAAAAJ2s/ev-lbDJJ4TA/image_thumb%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>TenantDbContext.cs的內容為:</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Data.Entity;\n\nnamespace WebApplication2.Models\n{\n    public class TenantDbContext : DbContext\n    {\n        public TenantDbContext()\n            : base(\"DefaultConnection\")\n        {\n        }\n\n        public DbSet&lt;IssuingAuthorityKey&gt; IssuingAuthorityKeys { get; set; }\n\n        public DbSet&lt;Tenant&gt; Tenants { get; set; }\n    }\n}\n</pre>\n<p>TenantRegistrationModels.cs的內容為:</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace WebApplication2.Models\n{\n    public class IssuingAuthorityKey\n    {\n        public string Id { get; set; }\n    }\n\n    public class Tenant\n    {\n        public string Id { get; set; }\n    }\n}\n</pre>\n<p>接著，我們要建立一個Utils的目錄，然後建立一個DatabaseIssuerNameRegistry.cs檔案。</p>\n<p><a href=\"http://lh4.ggpht.com/-Au2XxMZc6wk/VAXvP_-fCqI/AAAAAAAAJ20/my8IKm49VnI/s1600-h/image%25255B7%25255D.png\"><img src=\"http://lh5.ggpht.com/-9qptRC00Epw/VAXvRT96EsI/AAAAAAAAJ28/ZpEvAS7Ub08/image_thumb%25255B3%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>DatabaseIssuerNameRegistry.cs的內容為:</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.IdentityModel.Tokens;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\nusing System.Web;\nusing System.Web.Hosting;\nusing System.Xml.Linq;\nusing WebApplication2.Models;\n\nnamespace WebApplication2.Utils\n{\n    public class DatabaseIssuerNameRegistry : ValidatingIssuerNameRegistry\n    {\n        public static bool ContainsTenant(string tenantId)\n        {\n            using (TenantDbContext context = new TenantDbContext())\n            {\n                return context.Tenants\n                    .Where(tenant =&gt; tenant.Id == tenantId)\n                    .Any();\n            }\n        }\n\n        public static bool ContainsKey(string thumbprint)\n        {\n            using (TenantDbContext context = new TenantDbContext())\n            {\n                return context.IssuingAuthorityKeys\n                    .Where(key =&gt; key.Id == thumbprint)\n                    .Any();\n            }\n        }\n\n        public static void RefreshKeys(string metadataLocation)\n        {\n            IssuingAuthority issuingAuthority = ValidatingIssuerNameRegistry.GetIssuingAuthority(metadataLocation);\n\n            bool newKeys = false;\n            bool refreshTenant = false;\n            foreach (string thumbprint in issuingAuthority.Thumbprints)\n            {\n                if (!ContainsKey(thumbprint))\n                {\n                    newKeys = true;\n                    refreshTenant = true;\n                    break;\n                }\n            }\n\n            foreach (string issuer in issuingAuthority.Issuers)\n            {\n                if (!ContainsTenant(GetIssuerId(issuer)))\n                {\n                    refreshTenant = true;\n                    break;\n                }\n            }\n\n            if (newKeys || refreshTenant)\n            {\n                using (TenantDbContext context = new TenantDbContext())\n                {\n                    if (newKeys)\n                    {\n                        context.IssuingAuthorityKeys.RemoveRange(context.IssuingAuthorityKeys);\n                        foreach (string thumbprint in issuingAuthority.Thumbprints)\n                        {\n                            context.IssuingAuthorityKeys.Add(new IssuingAuthorityKey { Id = thumbprint });\n                        }\n                    }\n\n                    if (refreshTenant)\n                    {\n                        foreach (string issuer in issuingAuthority.Issuers)\n                        {\n                            string issuerId = GetIssuerId(issuer);\n                            if (!ContainsTenant(issuerId))\n                            {\n                                context.Tenants.Add(new Tenant { Id = issuerId });\n                            }\n                        }\n                    }\n                    context.SaveChanges();\n                }\n            }\n        }\n\n        private static string GetIssuerId(string issuer)\n        {\n            return issuer.TrimEnd('/').Split('/').Last();\n        }\n\n        protected override bool IsThumbprintValid(string thumbprint, string issuer)\n        {\n            return ContainsTenant(GetIssuerId(issuer))\n                &amp;&amp; ContainsKey(thumbprint);\n        }\n    }\n}\n</pre>\n<p>接下來，我們要在App_Start底下新增IdentityConfig.cs檔案。</p>\n<p><a href=\"http://lh4.ggpht.com/-Y5N_9-vQlTU/VAXvTEFehCI/AAAAAAAAJ3E/Fa_SQFHWkkU/s1600-h/image%25255B11%25255D.png\"><img src=\"http://lh6.ggpht.com/-wn8GoVuVObo/VAXvUSMTmmI/AAAAAAAAJ3M/60vRK3liJgc/image_thumb%25255B5%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>IdentityConfig.cs的內容為:</p>\n<pre class=\"brush: csharp;\">using System;\nusing System.Collections.Generic;\nusing System.Configuration;\nusing System.IdentityModel.Claims;\nusing System.IdentityModel.Services;\nusing System.Linq;\nusing System.Web.Helpers;\nusing WebApplication2.Utils;\n\nnamespace WebApplication2\n{\n    // 如需 ASP.NET Identity 的詳細資訊，請造訪 http://go.microsoft.com/fwlink/?LinkId=301863\n    public static class IdentityConfig\n    {\n        public static string AudienceUri { get; private set; }\n        public static string Realm { get; private set; }\n\n        public static void ConfigureIdentity()\n        {\n            RefreshValidationSettings();\n            // 設定應用程式領域\n            Realm = ConfigurationManager.AppSettings[\"ida:realm\"];\n\n            // 設定應用程式 audienceUri\n            AudienceUri = ConfigurationManager.AppSettings[\"ida:AudienceUri\"];\n            if (!String.IsNullOrEmpty(AudienceUri))\n            {\n                UpdateAudienceUri();\n            }\n\n            AntiForgeryConfig.UniqueClaimTypeIdentifier = ClaimTypes.Name;\n        }\n\n        public static void RefreshValidationSettings()\n        {\n            string metadataLocation = ConfigurationManager.AppSettings[\"ida:FederationMetadataLocation\"];\n            DatabaseIssuerNameRegistry.RefreshKeys(metadataLocation);\n        }\n\n        public static void UpdateAudienceUri()\n        {\n            int count = FederatedAuthentication.FederationConfiguration.IdentityConfiguration\n                .AudienceRestriction.AllowedAudienceUris.Count(\n                    uri =&gt; String.Equals(uri.OriginalString, AudienceUri, StringComparison.OrdinalIgnoreCase));\n            if (count == 0)\n            {\n                FederatedAuthentication.FederationConfiguration.IdentityConfiguration\n                    .AudienceRestriction.AllowedAudienceUris.Add(new Uri(IdentityConfig.AudienceUri));\n            }\n        }\n    }\n}\n\n接下來，我們要在Global.asax裡面加入註冊使用上面的IdentityConfig。</pre>\n<p><a href=\"http://lh5.ggpht.com/-fH7rpCUFQJY/VAXvVQE-mII/AAAAAAAAJ3U/n_P7_IXxcSU/s1600-h/image%25255B14%25255D.png\"><img src=\"http://lh5.ggpht.com/-2b58EjCQrGU/VAXvXXoqA7I/AAAAAAAAJ3c/W0ejljRtZUU/image_thumb%25255B6%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>加入IdentityConfig.ConfigureIdentity();</p>\n<pre class=\"brush: xml;\">void Application_Start(object sender, EventArgs e)\n{\n    // 應用程式啟動時執行的程式碼\n    AreaRegistration.RegisterAllAreas();\n    IdentityConfig.ConfigureIdentity();\n    GlobalConfiguration.Configure(WebApiConfig.Register);\n    RouteConfig.RegisterRoutes(RouteTable.Routes);            \n}\n</pre>\n<p>最後，我們有用到DB，所以還是要補一下連線字串；這邊小弟我是使用LocalDB，大家也可以建立自己想要的DB位置。</p>\n<pre class=\"brush: xml;\">  &lt;connectionStrings&gt;\n    &lt;add name=\"DefaultConnection\" connectionString=\"Data Source=(LocalDb)\\v11.0;AttachDbFilename=|DataDirectory|\\aspnet-WebApplication1-20140901114034.mdf;Initial Catalog=aspnet-WebApplication1-20140901114034;Integrated Security=True\" providerName=\"System.Data.SqlClient\" /&gt;\n  &lt;/connectionStrings&gt;\n</pre>\n<p>完成之後，你會發現，使用HTTPS時，就會要求先使用Azure來登入帳號了~~</p>\n<p><a href=\"http://lh6.ggpht.com/-tZ9u2YYVqnk/VAXvYEhQx2I/AAAAAAAAJ3k/rIElgji2L2g/s1600-h/image%25255B19%25255D.png\"><img src=\"http://lh3.ggpht.com/-wXtzzNZat2A/VAXvZUfcXrI/AAAAAAAAJ3s/1R0H3_Ovfng/image_thumb%25255B9%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>以上!!</p>\n<h4>參考資料</h4>\n<ul>\n<li><a href=\"http://geeks.ms/blogs/lmanez/archive/2014/06/10/adding-windows-azure-active-directory-to-an-existing-asp-net-app.aspx\" title=\"http://geeks.ms/blogs/lmanez/archive/2014/06/10/adding-windows-azure-active-directory-to-an-existing-asp-net-app.aspx\">http://geeks.ms/blogs/lmanez/archive/2014/06/10/adding-windows-azure-active-directory-to-an-existing-asp-net-app.aspx</a></li>\n</ul>","excerpt":"持續努力，現在進入第三篇了!!，第三篇我們先以完成為目標，所以小弟先不在這邊講Code的內容了，這部份未來再補上。 image TenantDbContext.cs的內容為: TenantRegistrationModels.cs的內容為: 接著，我們要建立一個Utils…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Azure - 實作Azure上的AD與MVC進行驗證 - Azure設定篇 ( 二 )","tags":["Active Directory","ASP.NET MVC","Azure"]},"fields":{"slug":"/2014/09/02/Azure-實作Azure上的AD與MVC進行驗證-Azure設定篇-二/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Azure-實作Azure上的AD與MVC進行驗證-Azure設定篇-二.md"},"previous":{"frontmatter":{"path":null,"title":"Visual Studio - 安裝Node.js Tools","tags":["Node.js","npm","Visual Studio"]},"fields":{"slug":"/2014/09/12/Visual-Studio-安裝Node-js-Tools/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Visual-Studio-安裝Node-js-Tools.md"}}}}