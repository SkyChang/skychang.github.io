{"componentChunkName":"component---src-templates-page-js","path":"/2014/11/02/JavaScript-使用gulp來建置JS/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"JavaScript -  使用gulp來建置JS","date":"02 November 2014","author":"Sky Chang","excerpt":null,"tags":["Gulp","JavaScript","Visual Studio"],"coverImage":null},"id":"4a8df21f-4fae-5277-a0f5-fbe017a07193","html":"<p>這篇的來源，是從<a href=\"http://markgoodyear.com/2014/01/getting-started-with-gulp/\">這裡</a>來的，後來看到一半，發現已經有<a href=\"http://987.tw/2014/07/09/gulpru-men-zhi-nan/\">JS神人翻成中文</a>了..Orz..但已經弄到一半，就還是留下來記錄一下…有興趣的朋友，可以直接去看中文版的，寫的很詳細也很棒喔!!</p>\n<p>最近因為某些因素，也開始看看JS的建置方案，至於為什麼要建置，有很多的原因，舉例來說，我們希望把JS給min化，又或許是把多個JS給綑綁成一個，又或許是為了要測試；總之，近代的JS已經沒有以前那樣的單純，所以也需要個建置流程，來處理這些事情~</p>\n<p>而除了今天要聊的gulp外，其餘還有grunt等方案，但小弟選的是gulp，其實也沒為什麼，就覺得他的設定過程滿好的XDDD，也容易理解，就選擇了gulp~</p>\n<p>開始前，我們必須先透過npm進行安裝，不知道甚麼是npm的朋友，可以看一下<a href=\"http://blog.sanc.idv.tw/2014/09/visual-studio-nodejs-tools.html\">這篇</a>。</p>\n<p>裝完npm後，我們就可以透過npm install gulp -g進行第一次的全域安裝。</p>\n<p><a href=\"http://lh5.ggpht.com/-T-qqiGS4H38/VFY1iTzZvjI/AAAAAAAAKSk/OMF2Xf8Nhhk/s1600-h/image3.png\"><img src=\"http://lh6.ggpht.com/-awP2TDXJNUY/VFY1jd5aEKI/AAAAAAAAKSs/h_OLvPIH3fk/image_thumb1.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，我們就進入我們要的專案底下，針對此專案，再安裝一次gulp。</p>\n<p><a href=\"http://lh3.ggpht.com/-O3_P9UzzBBA/VFY1kOPw_MI/AAAAAAAAKS0/EC12uF3IdGY/s1600-h/image8.png\"><img src=\"http://lh6.ggpht.com/-79FIs3CF1Ik/VFY1k-boLxI/AAAAAAAAKS4/idjp3hg_gko/image_thumb4.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>完成之後，我們要持續的透過npm進行gulp的套件安裝；這邊有非常多的套件，因為神人那篇已經寫的很詳細了，小弟這邊就不多加敘述了。</p>\n<ul>\n<li>gulp-uglify - 將JS醜化…( 就類似程式碼混淆器的功能 )</li>\n<li>gulp-rename - 重新命名JS檔案</li>\n<li>gulp-clean - 清除目標路徑</li>\n<li>gulp-concat - 合併多個JS檔案</li>\n<li>gulp-notify - 通知，完成後通知功能 </li>\n</ul>\n<p><a href=\"http://lh5.ggpht.com/-s9NW5tXLtRE/VFY1llIQ2JI/AAAAAAAAKTE/SR7_YB4CId8/s1600-h/image13.png\"><img src=\"http://lh4.ggpht.com/-bff0WMIWH4Q/VFY1mvgnqcI/AAAAAAAAKTI/u7Qncll4ov4/image_thumb7.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來，我們要在專案下，建立一個gulpfile.js的檔案。</p>\n<p><a href=\"http://lh5.ggpht.com/-RhHBObqYcN4/VFY1npl0yBI/AAAAAAAAKTU/ORQzAppkP4I/s1600-h/image18.png\"><img src=\"http://lh4.ggpht.com/-B0DLeuhGM9g/VFY1opfHKMI/AAAAAAAAKTY/BPR0pos05PQ/image_thumb10.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>檔案的內容大致如下，簡單的說，前面是針對套件的載入，接下來使用pipe來讓套件一個一個的循序漸進的工作，而gulp.dest表示目標的路徑，這邊指的是當合併成main.js或是使用uglify後，要將js檔案放到哪個路徑…最後我們再使用gulp.start來啟動Task。</p>\n<p>以下面的案例來說，我們先使用src讀取所有的js位置，並且透過concat合併成main.js並且輸出到assets/js的路徑下，接下來，我們將此檔案新建立一個.min的檔案並且混淆裡面內容後輸出到dist/assets/js底下，完成後，使用Scripts task complete來通知我們。</p>\n<pre class=\"brush: js;\">var gulp = require('gulp'),\n    uglify = require('gulp-uglify'),\n    rename = require('gulp-rename'),\n    clean = require('gulp-clean'),\n    concat = require('gulp-concat'),\n    notify = require('gulp-notify');\n\ngulp.task('scripts', function () {\n    return gulp.src('src/scripts/**/*.js')\n      .pipe(concat('main.js'))\n      .pipe(gulp.dest('dist/assets/js'))\n      .pipe(rename({ suffix: '.min' }))\n      .pipe(uglify())\n      .pipe(gulp.dest('dist/assets/js'))\n      .pipe(notify({ message: 'Scripts task complete' }));\n});\n\ngulp.task('clean', function () {\n    return gulp.src(['dist/assets/css', 'dist/assets/js', 'dist/assets/img'], { read: false })\n      .pipe(clean());\n});\n\n// 預設任務\ngulp.task('default', ['clean'], function () {\n    gulp.start('scripts');\n});\n</pre>\n<p>完成之後，我們只要進入指令模式，打入gulp，就可以呼叫建置。</p>\n<p><a href=\"http://lh3.ggpht.com/-R4QyisEcpbo/VFY1ptdGbrI/AAAAAAAAKTk/E91tmgdBETw/s1600-h/image4%25255B1%25255D.png\"><img src=\"http://lh4.ggpht.com/-wW3tz3AvRos/VFY1qd28RUI/AAAAAAAAKTs/YdAnIua69Kc/image_thumb1%25255B1%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>基本上就先到這邊，其實原文的部分，還有包含CSS、瀏覽器自動更新等功能，如果迫不急待的朋友們，可以看看參考資料，那邊寫的非常詳細喔!~</p>\n<p>未來小弟這篇，會再慢慢的補充上去。</p>\n<p>另外，目前Visual Studio 2013已經有提供IDE的套件，至於未來的Visual Studio 2015，則會內建，未來也會持續更新。</p>\n<h4>參考資料</h4>\n<ul>\n<li>\n<p><a href=\"http://markgoodyear.com/2014/01/getting-started-with-gulp/\" title=\"http://markgoodyear.com/2014/01/getting-started-with-gulp/\">http://markgoodyear.com/2014/01/getting-started-with-gulp/</a></p>\n<li>[http://987.tw/2014/07/09/gulpru-men-zhi-nan/](http://987.tw/2014/07/09/gulpru-men-zhi-nan/ \"http://987.tw/2014/07/09/gulpru-men-zhi-nan/\")<li>[http://www.w3ctech.com/topic/114](http://www.w3ctech.com/topic/114 \"http://www.w3ctech.com/topic/114\")\n</li>\n</ul>","excerpt":"這篇的來源，是從這裡來的，後來看到一半，發現已經有JS神人翻成中文了..Orz..但已經弄到一半，就還是留下來記錄一下…有興趣的朋友，可以直接去看中文版的，寫的很詳細也很棒喔!! 最近因為某些因素，也開始看看JS的建置方案，至於為什麼要建置，有很多的原因，舉例來說，我們希望把JS…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Visual Studio - 自動產生NuGet Package並移除舊版Package","tags":["NuGet","Visual Studio"]},"fields":{"slug":"/2014/11/02/Visual-Studio-自動產生NuGet-Package並移除舊版Package/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Visual-Studio-自動產生NuGet-Package並移除舊版Package.md"},"previous":{"frontmatter":{"path":null,"title":"Visual Studio - 使用NuGet Packager來打包NuGet Package","tags":["NuGet","Visual Studio"]},"fields":{"slug":"/2015/01/12/Visual-Studio-使用NuGet-Packager來打包NuGet-Package/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Visual-Studio-使用NuGet-Packager來打包NuGet-Package.md"}}}}