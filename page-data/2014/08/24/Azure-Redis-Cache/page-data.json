{"componentChunkName":"component---src-templates-page-js","path":"/2014/08/24/Azure-Redis-Cache/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Azure - Redis Cache","date":"24 August 2014","author":"Sky Chang","excerpt":null,"tags":["ASP.NET MVC","Azure","Redis"],"coverImage":null},"id":"08f4c9c6-23b9-5c88-8b33-381bf63a753d","html":"<p>在Open Source裡面，<a href=\"http://redis.io/\">Redis</a>其實算是非常紅的NOSQL資料庫，尤其是他的速度非常快(因為都存在Memory裡面)，所以大家通常都會把Redis當作Cache使用。</p>\n<p>( 這裡有簡體的<a href=\"http://redisbook1e-gallery.readthedocs.org/en/latest/?utm_content=buffer98244&#x26;utm_medium=social&#x26;utm_source=facebook.com&#x26;utm_campaign=buffer\">Redis 設計與實踐手冊</a>，有興趣的朋友可以看看，小弟是還沒空看就是了… )</p>\n<p>而近年來，不斷改變形象的MS，現在Azure上，也幫我們實作了以Redis為核心的Cache，讓我們可以不用建立，立馬可以使用!!</p>\n<p>除此之外，官方的<a href=\"http://blogs.technet.com/b/azuretw/archive/2014/08/09/azure-cache.aspx\">Blog文章</a>也指出，\"<strong>微軟公司建議 Azure 用戶所有的新開發的應用系統，未來皆採用 Azure Redis Cache</strong>\"，所以可以看的出來Redis Cache已經取代了原先的Cache機制了…</p>\n<p>另外，這邊也有\"早期\"的Redis Cache vs AppFabric的效能<a href=\"http://siliconangle.com/blog/2012/02/27/redis-on-windows-vs-microsofts-appfabric/\">比較資訊</a>，不過這種資訊參考參考就好，畢竟時代不斷的進步~</p>\n<p>那接下來這篇，我們就來介紹一下Azure上的Redis Cache。</p>\n<h3>Create a cache</h3>\n<p>首先，我們當然是要建立Redis Cache，而在寫這篇文章的時候，還是Prieview，所以要用於正式環境的朋友，要注意一下喔!~要啟用Redis Cache，必須於新版的Azure Portal上，才可以看見，所以大家記得切換到新版的Portal上喔!~</p>\n<p>要建立很簡單，只要選擇Redis Cache就可以了。</p>\n<p><a href=\"http://lh3.ggpht.com/-5j192SElHvA/U_mnH02qxJI/AAAAAAAAJsY/iSTHWNWUygE/s1600-h/image%25255B5%25255D.png\"><img src=\"http://lh3.ggpht.com/-GX9SkOTE5Eg/U_mnJrvPQuI/AAAAAAAAJsg/ncTHzEcPud0/image_thumb%25255B3%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>然後我們要輸入一下DNS的位置；然後依據你想要使用的大小，選擇方案，基本上目前Redis Cache有兩種方案，一種是Basic，一種是Standard；Basic比較便宜，但是不保證SLA 99.95，而Standard基本上都有SLA 99.95 ( 詳細資訊可以參考官網 )。</p>\n<p>另外，如果不滿1G，通常都會和別人共用，所以如果想獨享，那就要選1G以上方案 ( 好像在講手機4G行動方案的感覺= =|| )</p>\n<p>接下來要選擇Resource Group、要使用的帳號、和地區。</p>\n<p><a href=\"http://lh4.ggpht.com/-CCjPudbPvkM/U_mnKrjYGoI/AAAAAAAAJso/PNckQjl1OEI/s1600-h/image%25255B28%25255D.png\"><img src=\"http://lh5.ggpht.com/-s1M3kqdVzi8/U_mnL2R8SNI/AAAAAAAAJsw/MH-eAftQmd8/image_thumb%25255B18%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>完成之後，就可以等他建立完成；完成之後，我們就可以從下圖的位置取得密碼等資訊。</p>\n<p><a href=\"http://lh6.ggpht.com/-x8cgTRuLIfI/U_mnNaw3wNI/AAAAAAAAJs4/i9iej-k-rkk/s1600-h/image%25255B42%25255D.png\"><img src=\"http://lh6.ggpht.com/-rjOpiCuCs3o/U_mnOcWPZ1I/AAAAAAAAJtA/VoE45iTx_Js/image_thumb%25255B25%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>到這邊，就建立完成了!!</p>\n<h3>Application</h3>\n<p>應用程式這邊，則要使用第三方套件，才能對Redis Cache進行操作；我們可以使用NuGet打\"StackExchange.Redis\"取得，如下圖。而這邊，兩個套件選擇其中一個就可以；如果你喜歡Strong-Name，那可以選擇第二個。( 關於Strong-Name，有興趣的朋友可以Google )，另外，要注意的是目前這個Lib只支援.Net Framework 4以上版本。</p>\n<p><a href=\"http://lh3.ggpht.com/-VXekrRdKzkw/U_mnP6IuZbI/AAAAAAAAJtI/KioNhINlqeY/s1600-h/image%25255B22%25255D.png\"><img src=\"http://lh5.ggpht.com/-axzsMb-zcgk/U_mnRE9L1uI/AAAAAAAAJtQ/_G0M_9N6oVg/image_thumb%25255B14%25255D.png?imgmax=800\" alt=\"image\" title=\"image\"></a></p>\n<p>接下來就是寫Code了!!~，基本上我們這邊會有三個簡單的Demo；首先我們會使用ConnectionMultiplexer.Connect來設定連線字串；如果不想要SSL，可以把SSL設為False；而後面的Password就是我們上面所看到的Key。</p>\n<p>另外，官方網站有特別提到，ConnectionMultiplexer.Connect只需要設定一次，就可以給你的這個應用程式使用，如果設定多次，可能會有效能下降的疑慮。接下來，我們可以使用connection.GetDatabase()來取得IDatabase的實體，到時候我們就可以使用這個Object來操作Redis Cache。</p>\n<p>我們要存放資料很簡單，只需要下cache.StringSet(\"Key1\", \"value\");，而不需要在下啥SaveChange等指令…；Redis裡面存的是Key、Value，而這個Value基本上是文字；但我們也可以把二進位元碼存、C# Object存進去；只是要稍微轉換一下就是了。</p>\n<p>要取出來也很簡單；我們可以用StringGet(“Key1”)來把資料放到MVC的ViewData裡面；而如果裡面沒有東西，則會回傳Null，所以透過此機制，我們可以很簡單的實作出Cache-Aside Pattern ( 如Demo-2 )</p>\n<p>最後，如果有需要，也可以設定過期時間，如Demo-3。</p>\n<pre class=\"brush: csharp;\">using StackExchange.Redis;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\n\nnamespace RedisCacheDemo.Controllers\n{\n    public class HomeController : Controller\n    {\n        // GET: Home\n        public ActionResult Index()\n        {\n            //設定連線字串\n            ConnectionMultiplexer connection = \n                ConnectionMultiplexer.Connect(\n                \"skyrediscache.redis.cache.windows.net,ssl=true,password=....\");\n\n            IDatabase cache = connection.GetDatabase();\n\n            //Demo-1 存放簡單的形態到Cache\n            cache.StringSet(\"key1\", \"value\");\n            cache.StringSet(\"key2\", 25);\n\n            //取得資料\n            ViewData[\"key1\"] = cache.StringGet(\"key1\");\n            ViewData[\"key2\"] = (int)cache.StringGet(\"key2\");\n\n            //Demo-2 Cache-Aside Pattern\n            string value = cache.StringGet(\"key1\");\n            if (value == null)\n            {\n                //如果找不到資料，就從資料庫取得\n                value = GetValueFromDataSource();\n\n                cache.StringSet(\"key1\", value);\n            }\n\n            //Demo-3 指定時間\n            cache.StringSet(\"key1\", \"value1\", TimeSpan.FromMinutes(90));\n\n            return View();\n        }\n    }\n}\n</pre>\n<p>基本上這部份的操作就是這樣，還滿簡單的；下一篇，我們來看看，如何將Session存放到Redis Cache裡面去。</p>\n<h4>參考資料</h4>\n<ul>\n<li><a href=\"http://redis.io/\" title=\"http://redis.io/\">http://redis.io/</a><li><a href=\"http://redisbook1e-gallery.readthedocs.org/en/latest/?utm_content=buffer98244&#x26;utm_medium=social&#x26;utm_source=facebook.com&#x26;utm_campaign=buffer\" title=\"http://redisbook1e-gallery.readthedocs.org/en/latest/?utm_content=buffer98244&#x26;utm_medium=social&#x26;utm_source=facebook.com&#x26;utm_campaign=buffer\">http://redisbook1e-gallery.readthedocs.org/en/latest/?utm<em>content=buffer98244&#x26;utm</em>medium=social&#x26;utm<em>source=facebook.com&#x26;utm</em>campaign=buffer</a><li><a href=\"http://blogs.technet.com/b/azuretw/archive/2014/08/09/azure-cache.aspx\" title=\"http://blogs.technet.com/b/azuretw/archive/2014/08/09/azure-cache.aspx\">http://blogs.technet.com/b/azuretw/archive/2014/08/09/azure-cache.aspx</a><li><a href=\"http://azure.microsoft.com/zh-tw/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache/\" title=\"http://azure.microsoft.com/zh-tw/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache/\">http://azure.microsoft.com/zh-tw/documentation/articles/cache-dotnet-how-to-use-azure-redis-cache/</a><li><a href=\"http://msdn.microsoft.com/en-us/library/dn589799.aspx\" title=\"http://msdn.microsoft.com/en-us/library/dn589799.aspx\">http://msdn.microsoft.com/en-us/library/dn589799.aspx</a><li><a href=\"http://msdn.microsoft.com/en-us/library/dn690523.aspx\" title=\"http://msdn.microsoft.com/en-us/library/dn690523.aspx\">http://msdn.microsoft.com/en-us/library/dn690523.aspx</a></li>\n</ul>","excerpt":"在Open Source裡面，Redis其實算是非常紅的NOSQL資料庫，尤其是他的速度非常快(因為都存在Memory裡面)，所以大家通常都會把Redis當作Cache使用。 ( 這裡有簡體的Redis…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Entity Framework -  為什麼修改的資料不用Attach","tags":["ASP.NET MVC","Entity Framework"]},"fields":{"slug":"/2014/08/21/Entity-Framework-為什麼修改的資料不用Attach/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Entity-Framework-為什麼修改的資料不用Attach.md"},"previous":{"frontmatter":{"path":null,"title":"Azure - 儲存Session到Redis Cache","tags":["ASP.NET MVC","Azure","Redis"]},"fields":{"slug":"/2014/08/24/Azure-儲存Session到Redis-Cache/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Azure-儲存Session到Redis-Cache.md"}}}}