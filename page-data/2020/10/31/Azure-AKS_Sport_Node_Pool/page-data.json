{"componentChunkName":"component---src-templates-page-js","path":"/2020/10/31/Azure-AKS_Sport_Node_Pool/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Azure - AKS - Spot Node Pool","date":"31 October 2020","author":"Sky Chang","excerpt":null,"tags":["Azure","Container","Kubernetes","Docker","Linux","AKS"],"coverImage":null},"id":"bbf2f153-9fbd-585a-ba7f-220a8422cf38","html":"<h2>前言</h2>\n<p>至從 Spot 推出後，完全受到小弟的歡迎，因為透過 Spot 的特性與價格 ( 最重要的是價格 )，讓小弟在做很多測試的時候，可以無後顧之憂 ( 比較不會被老闆宰了~ )，所以現在很多的環境，例如模擬地端的 K8S VM，測試開發環境用的 VM，還有 Azure DevOps Server、AD 等等，之前都全部一口氣改成了 Spot VM 的模式來進行測試。</p>\n<p>當然，Spot 的特性就是便宜，已超乎想像的價格提供給我們使用，But 啊 But，任何事情，便宜一定有一定的限制。例如，節點是沒有 SLA 的，節點基本上都是會部署在單一容錯網域中。( 當然，也不用想去開高可用性區用這個功能 )。另外，當 Azure 需要資源的時候，你的機器就會 \"被收回！！\"。</p>\n<p>好吧，你想說，這種沒通知的收回，怎麼可能拿來使用！？，的確啦，正式環境很不適合，隨時有可能被回收的情況，也表示隨時會被老闆罵死。所以如果是正式環境，當然還是建議使用標準的 VM。( 備註，MSDN 提供的免費訂閱，也不可以用在正式環境喔～ )</p>\n<p>至於 Spot，當然就很適合批次處理工作、開發和測試環境。所以對小弟來說，就是要拿來測試的環境，當然就是用 Spot 囉。</p>\n<p>( 或許大家會想，應該不會真的回收吧，不好意思，小弟還真的滿常遇過，就在 Demo 的當下，真的被回收了 T^T )。</p>\n<p>好，前面講了很多 Spot VM 的特性，而 AKS，也在不久之前，推出了 Spot Node，當然因為底層和 VM 是依樣的，所以這些 Spot Node，也是會有 Spot VM 同樣的特性。但對於我們要測試一些 AKS 的功能與服務的時候，Spot Node 還是一個很棒的選擇。</p>\n<p>而 Spot Node Pool 目前有底下此限制。( 請注意，限制可能會隨著 AKS 更新而改變，請留意官網文件 )</p>\n<p>但目前有幾個比較需要注意的。</p>\n<ul>\n<li>\n<p>你的 AKS 還是需要一個預設的 Node Pool，不能全部都是 Spot Node Pool</p>\n<ul>\n<li>原本小弟就有一個 System Node Pool 了</li>\n</ul>\n</li>\n<li>\n<p>Spot Node Pool 會無法升級 Spot Node Pool 的 K8S 版本 </p>\n<ul>\n<li>未來只能自己建立新的 Node Pool 來轉移</li>\n</ul>\n</li>\n<li>\n<p>建立完後，目前沒辦法設定 ScaleSetPriority 或 SpotMaxPrice</p>\n<ul>\n<li>通常設定完就不會改了</li>\n</ul>\n</li>\n<li>\n<p>設定 SpotMaxPrice 時，值必須是-1 或具有最多五個小數位數的正數值</p>\n<ul>\n<li>下指令需注意一下</li>\n</ul>\n</li>\n<li>\n<p>點節點集區會有標籤 kubernetes.azure.com/scalesetpriority:spot、污點 kubernetes.azure.com/scalesetpriority=spot:NoSchedule 和 System pod 會有反親和性</p>\n<ul>\n<li>也無仿，反正原本我就將 System Pod 塞到 System Pool Node 了</li>\n</ul>\n</li>\n<li>\n<p>必須在 Yaml 新增 tolerations，才能放到 Spot Pool Node</p>\n<ul>\n<li>這個倒是有點小討厭 XDDD</li>\n</ul>\n</li>\n</ul>\n<h2>建立 Spot Node Pool</h2>\n<p>如前一篇文章<a href=\"http://skychang.github.io/2020/10/19/Azure-Create_Azure_Kubernetes_Service/\">Azure - 建立 Azure Kubernetes Service - 2020-10-19 version</a>，有提到，在 AKS ，其實是很多 Node Pool 組合而成的，而在前篇，我們建立了一個 System Node Pool，和一個 DefaultApp 的 User Node Pool，現在我們多建立一個 Spot Node Pool。</p>\n<p>寫此稿的時候，Spot Node 雖然 GA，但還沒 UI。所以必須要透過 az cli 來處理。</p>\n<p>( 其實寫這篇文章，寫到一半，剛好就看到 <a href=\"https://www.facebook.com/groups/AzureTWUG/permalink/2820602384835794/\">Tom 哥的發文</a>，只能說，Tom 哥真是神算啊！！)</p>\n<p>要執行，可以透過底下指令新增 Spot Node Pool。</p>\n<p>請注意， spot-max-price -1 的定義如下</p>\n<ul>\n<li>使用默認的 Spot 價格</li>\n<li>該實例不會因價格而被關閉 ( 因為已經使用默認了 )</li>\n<li>價格為 Spot 當前價格或標準價格，通常只要有可用的容量和配額，價格就會更低 ( 但容量不夠，還是會被回收 Orz )</li>\n</ul>\n<p>如果您想要定義自己的價格，可以在 spot-max-price 後面加上價格，加上去後，也代表，當股價，喔不是，當目前的費用超過此價格時，就會自動關閉回收。</p>\n<p>eviction-policy 參數有兩個，一個是 Delete 和 Deallocate，當使用 Deallocate 的時候，若 VM 被收走，則會呈現關閉的狀況，雖然是關閉，但還是會有磁碟的費用產生，而且被關閉的 VM，還是會佔用掉 Auto Scale 的 Instance，其次，也有可能資源要不回來....</p>\n<p>至於 Delete，就是真的砍掉，但好處是不回佔用 Auto Scale 的 Instace，而且，磁碟不會被收費 ( 畢竟都被砍光 = =|| )</p>\n<p>而通常，我們會加上 enable-cluster-autoscaler 這個參數，因為透過這個參數和 Delete 匹配後，就可以想用到，被回收砍 Node，但有需要再自動加回來的機制。若沒有起用 autoscaler，那可能會被砍到變成 0 .....</p>\n<p>最後，下面指令有啟用使用 Temp Disk，且只設定 30G，因為 D4as_V4 的 Temp Disk 也只有 32G，所以只能設定為最小，這邊就看需求，看要不要自行加上 node-osdisk-type Ephemeral 和 node-osdisk-size 30</p>\n<p>Note : 請注意，選擇的 VM，是否有支援 Spot。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 底下會用到一些上一篇用到的指令，例如 :</span>\n<span class=\"token comment\"># ppg、node-osdisk-size、node-osdisk-type、aks-custom-headers</span>\n<span class=\"token comment\"># 若有需要了解這些功能，請參考上一篇</span>\n<span class=\"token comment\"># 若要使用 Ephemeral 磁碟，請注意選的 VM 暫存磁碟的大小是否有大於 node-osdist-size</span>\n\n<span class=\"token comment\"># 若要使用 PPG ，請填入 PPG ID</span>\n<span class=\"token assign-left variable\">MY_PPG_RESOURCE_ID</span><span class=\"token operator\">=</span>/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/Study4Dev-JE/providers/Microsoft.Compute/proximityPlacementGroups/Study4Dev-JE-PPG\n\naz aks nodepool <span class=\"token function\">add</span> <span class=\"token punctuation\">\\</span>\n    --resource-group study4dev-je <span class=\"token punctuation\">\\</span>\n    --cluster-name aks-study4dev-je <span class=\"token punctuation\">\\</span>\n    --name spotnodepool <span class=\"token punctuation\">\\</span>\n    --priority Spot <span class=\"token punctuation\">\\</span>\n    --eviction-policy Delete <span class=\"token punctuation\">\\</span>\n    --spot-max-price -1 <span class=\"token punctuation\">\\</span>\n    --enable-cluster-autoscaler <span class=\"token punctuation\">\\</span>\n    --min-count <span class=\"token number\">1</span> <span class=\"token punctuation\">\\</span>\n    --max-count <span class=\"token number\">3</span> <span class=\"token punctuation\">\\</span>\n    --max-pods <span class=\"token number\">40</span> <span class=\"token punctuation\">\\</span>\n    --mode User<span class=\"token punctuation\">\\</span>\n    --kubernetes-version <span class=\"token number\">1.19</span>.0 <span class=\"token punctuation\">\\</span>\n    --node-vm-size Standard_D4as_v4 <span class=\"token punctuation\">\\</span>\n    --zones <span class=\"token number\">1</span> <span class=\"token punctuation\">\\</span>\n    --ppg <span class=\"token variable\">$MY_PPG_RESOURCE_ID</span> <span class=\"token punctuation\">\\</span>\n    --node-osdisk-size <span class=\"token number\">30</span> <span class=\"token punctuation\">\\</span>\n    --node-osdisk-type Ephemeral <span class=\"token punctuation\">\\</span>\n    --aks-custom-headers <span class=\"token assign-left variable\">EnableAzureDiskFileCSIDriver</span><span class=\"token operator\">=</span>true,CustomizedUbuntu<span class=\"token operator\">=</span>aks-ubuntu-1804,ContainerRuntime<span class=\"token operator\">=</span>containerd</code></pre></div>\n<p>預設情況下，建立好的 Spot Node Pool，會加上 spot 的污點，所以如果有應用程式要部署到這個 Spot Node Pool 上，則需要使用底下的寫法 ( 寫法來自官網，也是標準的 K8S tolerations 寫法。 )</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> spot<span class=\"token punctuation\">-</span>example\n  <span class=\"token key atrule\">tolerations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"kubernetes.azure.com/scalesetpriority\"</span>\n    <span class=\"token key atrule\">operator</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Equal\"</span>\n    <span class=\"token key atrule\">value</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"spot\"</span>\n    <span class=\"token key atrule\">effect</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"NoSchedule\"</span></code></pre></div>\n<p>大體上就這樣了，對於要開發測試來說，Spot 還是很好用的 :)</p>\n<h2>後記</h2>\n<p>其實這篇寫了後，擱置了很多天，因為過程中，Spot 變成 GA，而導致 az cli 的指令發生 500 錯誤 = =|||..不過 Azure 的好處也是有 bug，後端收到 Log，也自動地修復 XDD ( 但看起來假日沒排班... )，所以在修復後，也終於可以發了這篇 XDDDD</p>\n<h2>參考資料</h2>\n<ul>\n<li><a href=\"https://docs.microsoft.com/zh-tw/azure/aks/spot-node-pool\">https://docs.microsoft.com/zh-tw/azure/aks/spot-node-pool</a></li>\n<li><a href=\"https://medium.com/@kaletaii/aks-spot-instances-quick-some-demo-61699370efd4\">https://medium.com/@kaletaii/aks-spot-instances-quick-some-demo-61699370efd4</a></li>\n</ul>","excerpt":"前言 至從 Spot 推出後，完全受到小弟的歡迎，因為透過 Spot 的特性與價格 ( 最重要的是價格 )，讓小弟在做很多測試的時候，可以無後顧之憂 ( 比較不會被老闆宰了~ )，所以現在很多的環境，例如模擬地端的 K8S VM，測試開發環境用的 VM，還有 Azure…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Azure - 建立 Azure Kubernetes Service - 2020-10-19 version","tags":["Azure","Container","AKS","Log Analytics","ACR","Kubernetes","Docker","Linux","AKS"]},"fields":{"slug":"/2020/10/19/Azure-Create_Azure_Kubernetes_Service/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/Azure-Create_Azure_Kubernetes_Service_V2/Azure-Create_Azure_Kubernetes_Service.md"},"previous":null}}}