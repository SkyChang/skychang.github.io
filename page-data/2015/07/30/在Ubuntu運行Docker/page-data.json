{"componentChunkName":"component---src-templates-page-js","path":"/2015/07/30/在Ubuntu運行Docker/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"在Ubuntu運行Docker","date":"30 July 2015","author":"Sky Chang","excerpt":null,"tags":["Azure","Docker","Linux","Ubuntu","VM"],"coverImage":null},"id":"b928d504-12d8-5fb9-98b2-c2567f928425","html":"<p>首先，在開始前，小弟一定要推薦一下這個<a href=\"http://philipzheng.gitbooks.io/docker_practice/content/basic_concept/repository.html\">網站</a>和這個<a href=\"http://www.codedata.com.tw/social-coding/docker-layman-abc/\">網站</a>，這個兩個網站寫了很多，而且由淺入深的教學，而這篇文章，一開始會先練習這個<a href=\"http://www.codedata.com.tw/social-coding/docker-layman-abc/\">網站</a>的前篇教學，並且搭配此網站<a href=\"http://philipzheng.gitbooks.io/docker_practice/content/basic_concept/repository.html\">網站</a>的說明，下一篇，則會使用 Microsoft 提供的 ASP.NET 5 Preview Docker Image 來完成 ASP.NET MVC 應用程式。</p>\n<h2>安裝 Docker</h2>\n<p>基本上，Ubuntu 已經有內建了 Docker，或是使用 apt-get 來安裝也是可以的，但是既然神人大大推薦用 curl 的方式取得，那我們這邊就使用 curl 來取得 Docker吧！！</p>\n<p>curl -sSL <a href=\"https://get.docker.com/ubuntu/\">https://get.docker.com/ubuntu/</a> | sudo sh</p>\n<p><img src=\"https://lh3.googleusercontent.com/--3gpt3pEeqA/Vbo6GhzIUrI/AAAAAAAAKjk/f4xn9ctfJxM/s600/01.png\" alt=\"enter image description here\" title=\"01.png\"></p>\n<p>完成之後，我們就可以啟動 Docker了！！</p>\n<p>sudo service docker start</p>\n<p><img src=\"https://lh3.googleusercontent.com/-hIUl4velqQE/Vbo6MZHcDZI/AAAAAAAAKjw/HPx5tWDvgVM/s600/02.png\" alt=\"enter image description here\" title=\"02.png\"></p>\n<h2>Hello Docker</h2>\n<p>接下來，我們先採用另外一位<a>神人大的教學</a>，來簡單的輸出一下 Hello Docker.</p>\n<p>sudo docker run ubuntu:12.04 echo ‘Hello Docker’</p>\n<p><img src=\"https://lh3.googleusercontent.com/-WxtMI_OXbmo/Vbo6SjCPXhI/AAAAAAAAKj8/tRbGD3CpQpU/s600/03.png\" alt=\"enter image description here\" title=\"03.png\"></p>\n<p>是的，就是這樣簡單，我們就可以看到Hello Docker!!，但是大家可能會想，啥？不就是只是輸出一個 Hello Docker 啊…這和虛擬化，容器技術有啥關係。</p>\n<p>沒錯，別懷疑，這個 Hello Docker 其實是從虛擬化出來的 Ubuntu 12.04 版本 echo 出來的！！！</p>\n<p>也就是說，那短短的幾秒鐘時間，Docker 就已經把虛擬的 OS 準備完成，並且執行，且輸出了！！</p>\n<p>所以，上面那行指令的意思，就是說，我們要 Run 一個 ubuntu:12.04 版本，並且 run 完成之後，於 Sehll 執行 echo ‘Hello Docker’ . 而在執行的過程中，他就會自動地把 ubuntu 12.04 的 image 載下來，結果如下圖。</p>\n<p><img src=\"https://lh3.googleusercontent.com/-mgTvwtFH_m0/Vbo6YOBG2HI/AAAAAAAAKkI/rQYYyIIdw2c/s600/04.png\" alt=\"enter image description here\" title=\"04.png\"></p>\n<p>完成後，我們就可以透過以下指令，來看看目前這台機器有多少個 image，從下圖就可以看到 Ubuntu 已經安裝上去了。</p>\n<p>sudo docker images</p>\n<p><img src=\"https://lh3.googleusercontent.com/-dCQv5tYD_nk/Vbo6eiFJ2SI/AAAAAAAAKkU/8hilZX01KwE/s600/05.png\" alt=\"enter image description here\" title=\"05.png\"></p>\n<h2>登入終端機</h2>\n<p>但是，我們不可能每次都把一整串的字串，串到 run 後面吧…我們需要可以登入，登入！！登入啊啊啊！！</p>\n<p>當然，這也可以做到，我們可以下以下的指令，這個指令的意思就是，建立容器的時候，順便建立一個終端機( -t )，並且建立與容器標準輸入的互動進行連結 ( -i )，這樣你就可以在裡面下指令操作了~~</p>\n<p>sudo docker run -t -i ubuntu:12.04</p>\n<p>但是，請注意，雖然我們從終端機離開，並不會關掉容器，但如果我們把容器 Kill 或是 移除，那你裡面做的所有事情都會不見…如果你在裡面做了些事情，而希望把裡面的東西存下來，就必須使用 commit 指令，其中7ce430e7c072是表示目前的容器ID ( 可以透過 docker ps 來查看目前執行的容器 )，而aspmvc/text:ver1 代表的是容器的名稱和Tag名稱。 </p>\n<p>(此指令要在容器外面下喔！)</p>\n<p>sudo docker commit -m=’簽入描述’ -a=’簽入者’ 7ce430e7c072 aspmvc/test:ver1</p>\n<h2>重新登入容器</h2>\n<p>另外，如果你登出了，想要在登入進去那一個容器，我們可以先用</p>\n<p>sudo docker ps -a 來查到所有目前執行的容器。</p>\n<p>然後再用以下指令登入( 後面是id )，下面兩個的差異，一個是直接回到容器裡，另外一個則會開另外一個終端機，目前建議使用第二種方式。</p>\n<p>sudo docker attach 665b4a1e17b6</p>\n<p>sudo docker exec -i -t a66289aeefa6 bash</p>\n<h2>停止與刪除背景執行的容器</h2>\n<p>若有執行中的容器，想要停止，可以透過底下的指令來完成。</p>\n<p>sudo docker ps -a</p>\n<p>sudo docker stop 9162a162f840</p>\n<p>停止後，就可以用 rm 指令來移除容器。 ( 或是直接用 rm -f 來強制停止)</p>\n<p>sudo docker rm 9162a162f840</p>\n<p>如果有太多容器，想要一次全部移除，可以下以下指令</p>\n<p>sudo docker rm $(sudo docker ps -a)</p>\n<p><img src=\"https://lh3.googleusercontent.com/-fV-VMpKnUao/Vbo6oLiOsMI/AAAAAAAAKkg/UhiQm5Ipkio/s600/12.png\" alt=\"enter image description here\" title=\"12.png\"></p>\n<p>基本上，初步就到這篇，下一篇我們會透過 Microsoft 提供的容器，來建立 ASP.NET MVC 應用程式。</p>\n<h2>參考資料</h2>\n<ul>\n<li><a href=\"http://www.codedata.com.tw/social-coding/docker-layman-abc/\">http://www.codedata.com.tw/social-coding/docker-layman-abc/</a></li>\n<li><a href=\"http://philipzheng.gitbooks.io/docker_practice/content/basic_concept/repository.html\">http://philipzheng.gitbooks.io/docker<em>practice/content/basic</em>concept/repository.html</a></li>\n<li><a href=\"http://www.openfoundry.org/tw/tech-column/9319-docker-101\">http://www.openfoundry.org/tw/tech-column/9319-docker-101</a></li>\n</ul>","excerpt":"首先，在開始前，小弟一定要推薦一下這個網站和這個網站，這個兩個網站寫了很多，而且由淺入深的教學，而這篇文章，一開始會先練習這個網站的前篇教學，並且搭配此網站網站的說明，下一篇，則會使用 Microsoft 提供的 ASP.NET 5 Preview Docker Image…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"Azure上的Ubuntu與遠端桌面管理 VNC","tags":["Azure","Linux","Ubuntu","VM"]},"fields":{"slug":"/2015/07/30/Azure上的Ubuntu與遠端桌面管理-VNC/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/Azure上的Ubuntu與遠端桌面管理-VNC.md"},"previous":{"frontmatter":{"path":null,"title":"讓 ASP.NET MVC 執行於 Docker","tags":["ASP.NET MVC","Azure","Docker","Linux","Ubuntu","VM"]},"fields":{"slug":"/2015/07/30/讓-ASP-NET-MVC-執行於-Docker/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/讓-ASP-NET-MVC-執行於-Docker.md"}}}}