{"componentChunkName":"component---src-templates-page-js","path":"/2015/07/30/建立自己的-Docker-image/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"建立自己的 Docker image","date":"30 July 2015","author":"Sky Chang","excerpt":null,"tags":["Azure","Docker","Linux","Ubuntu","VM"],"coverImage":null},"id":"ad3b13c3-f445-5c68-bdff-59545c84ff48","html":"<p>假設一個情境，如果今天我們的應用程式已經開發完成了，以前還要把 Source Code 拿去客戶端部署，還要設定一堆參數等等，或是今天內部開發完成，要進行測試，也要部署到測試機上，如今有 Docker 了，有沒有辦法，只用前面介紹的 run -p 這個指令，就直接完成安裝！？</p>\n<p>基本上，前面那篇，我們直接登入到 Docker 來進行抓取 Source 的動作，並且在裡面執行，最後 Commit ，的確，這是一種方法，也可以建立一個新的image，但是，我們不可能每次要 Run MVC 的時候，都還要登入進去執行吧，那真的很累人…其次，登入容器後，再去下載 Source 感覺也不是很好，準備環境也很麻煩，所以這篇，我們來看看，怎樣來建立自己的 Image。</p>\n<h2>準備本地端的 Source Code</h2>\n<p>首先，我們透過git指令，來取得ASP.NET 的 Source Code</p>\n<p>git clone <a href=\"https://github.com/aspnet/Home.git\">https://github.com/aspnet/Home.git</a> aspnet-home</p>\n<p><img src=\"https://lh3.googleusercontent.com/-E54NR867C4Y/Vbo8YMKAVcI/AAAAAAAAKmo/qdK1jom-jiM/s600/01.png\" alt=\"enter image description here\" title=\"01.png\"></p>\n<p>完成後，我們先進入專案的位置。</p>\n<p>cd aspnet-home/samples/HelloWeb</p>\n<p><img src=\"https://lh3.googleusercontent.com/-6z8C-tctEvE/Vbo8dCeWVeI/AAAAAAAAKm8/iA1FSFY_JuA/s600/02.png\" alt=\"enter image description here\" title=\"02.png\"></p>\n<h2>建立 Dockerfile</h2>\n<p>接下來，我們透過文字編輯器，來新建一個 Dockerfile 的檔案，這個檔案主要是用來設定 Docker 容器的細節。</p>\n<p>vi Dockerfile</p>\n<p><img src=\"https://lh3.googleusercontent.com/-tKY6kUvzERk/Vbo8iDWwi8I/AAAAAAAAKnM/ck0QXa8VLQU/s600/03.png\" alt=\"enter image description here\" title=\"03.png\"></p>\n<p>文字的內容如下，第一行表示要用哪一個Image當作基底，接下來，拷貝目前目錄下的所有東西到 app ，然後進入app目錄，接著就來跑一下 kpm restore 這個指令，完成之後，對外的 port 要開 5004，並且於整個容器準備完成之後執行 k kestrel。除此之外，比較常用到的還有MAINTAINER(維護人)和ADD(同樣將檔案加入到image，但如果是壓縮黨會自動解壓縮)</p>\n<p>FROM microsoft/aspnet</p>\n<p>COPY . /app </p>\n<p>WORKDIR /app </p>\n<p>RUN [“kpm”, “restore”]</p>\n<p>EXPOSE 5004 </p>\n<p>ENTRYPOINT [“k”, “kestrel”]</p>\n<p><img src=\"https://lh3.googleusercontent.com/-Sy6US8WTLbY/Vbo8nW8pIGI/AAAAAAAAKnc/AR5W4rMtHXA/s600/04.png\" alt=\"enter image description here\" title=\"04.png\"></p>\n<h2>Build Image</h2>\n<p>接下來，我們就可以透過 build 的指令來建立新的image，並且取名為 myapp，後面的 . 表示路徑位置，也就是要指向 Dockerfile的位置。 </p>\n<p>sudo docker build -t myapp .</p>\n<p><img src=\"https://lh3.googleusercontent.com/-bx_oB1J8Va0/Vbo8sbAzKnI/AAAAAAAAKno/ECVeytE0Y2E/s600/05.png\" alt=\"enter image description here\" title=\"05.png\"></p>\n<p>很快地就會完成了，完成之後我們可以透過等下指令看一下是否有增加進去。</p>\n<p>sudo docker images</p>\n<p><img src=\"https://lh3.googleusercontent.com/-5K2ieI8fT_8/Vbo8xArWBzI/AAAAAAAAKn0/bPOpxGsvKaM/s600/06.png\" alt=\"enter image description here\" title=\"06.png\"></p>\n<h2>Run</h2>\n<p>完成後，我們就可以拿這個 Image 來進行建置容器的動作，這邊的 -d 代表的是讓容器在背景執行，最後我們再用 docker ps 來查看，就可以發現，他在背景執行了。</p>\n<p>sudo docker run -t -d -p 80:5004 myapp</p>\n<p><img src=\"https://lh3.googleusercontent.com/-83qu-QTFMWw/Vbo82Ams2bI/AAAAAAAAKoE/wkXVEIO0gCY/s600/07.png\" alt=\"enter image description here\" title=\"07.png\"></p>\n<h2>上傳到 Docker Hub</h2>\n<p>最後，我們可以把我們準備好的 Image 提供給別的使用者共享，我們可以把我們的影像檔傳到 Docker Hub 上，所以在進行最後一個步驟之前，要先去申請 Docker Hub 的帳號。</p>\n<p>申請完成之後，我們就可以透過以下指令進行登入。</p>\n<p>sudo docker login</p>\n<p><img src=\"https://lh3.googleusercontent.com/-v9TglGvHg1w/Vbo86lOlsBI/AAAAAAAAKoQ/RQWZ8m3WbYo/s600/08.png\" alt=\"enter image description here\" title=\"08.png\"></p>\n<p>那再上傳之前，有一點需要注意，Docker Hub 的格式為 UserName/Repo，所以這邊我們要先改名一下，不然會傳不上去，我們先用以下指令查看我們目前有哪些 Image。</p>\n<p>sudo docker images</p>\n<p>接下來，我們就可以用以下指令改名，改成 skychang/mapp。</p>\n<p>sudo docker tag myapp2:latest skychang/myapp:latest</p>\n<p><img src=\"https://lh3.googleusercontent.com/-A44QGKeePGo/Vbo8_p1BtvI/AAAAAAAAKoc/qjwCcNb--3A/s600/09.png\" alt=\"enter image description here\" title=\"09.png\"></p>\n<p>最後，我們再用 push ，就可以傳到 Docker Hub 嚕！</p>\n<p>sudo docker push skychang/myapp</p>\n<p><img src=\"https://lh3.googleusercontent.com/-vzz-_w54G5I/Vbo9JSFoFVI/AAAAAAAAKos/0PlM97k_K-c/s600/10.png\" alt=\"enter image description here\" title=\"10.png\"></p>\n<p>完成後，就可以在 Docker Hub 看到嚕！！</p>\n<p><img src=\"https://lh3.googleusercontent.com/-b_Er4GdTHdQ/Vbo9PieVYsI/AAAAAAAAKo4/g0lpPylxah8/s600/11.png\" alt=\"enter image description here\" title=\"11.png\"></p>\n<h2>刪除用不到的 Image</h2>\n<p>如果有用不到的 Image ，可以透過 rmi 的指令移除 image ， rmi 後面的參數是代表 image 的名稱</p>\n<p>sudo docker images 來查看所有的資訊</p>\n<p>sudo docker rmi myapp</p>\n<p><img src=\"https://lh3.googleusercontent.com/-xtQzyczPci4/Vbo9WYIv2LI/AAAAAAAAKpI/aE3kBam4cmI/s600/13.png\" alt=\"enter image description here\" title=\"13.png\"></p>\n<h2>參考資料</h2>\n<ul>\n<li><a href=\"https://github.com/aspnet/aspnet-docker\">https://github.com/aspnet/aspnet-docker</a></li>\n<li><a href=\"http://blogs.msdn.com/b/webdev/archive/2015/01/14/running-asp-net-5-applications-in-linux-containers-with-docker.aspx\">http://blogs.msdn.com/b/webdev/archive/2015/01/14/running-asp-net-5-applications-in-linux-containers-with-docker.aspx</a></li>\n<li><a href=\"http://blog.aminjam.com/hello-asp-net-5-on-docker/\">http://blog.aminjam.com/hello-asp-net-5-on-docker/</a></li>\n<li><a href=\"http://www.codedata.com.tw/social-coding/docker-layman-abc/\">http://www.codedata.com.tw/social-coding/docker-layman-abc/</a></li>\n<li><a href=\"http://philipzheng.gitbooks.io/docker_practice/content/basic_concept/repository.html\">http://philipzheng.gitbooks.io/docker<em>practice/content/basic</em>concept/repository.html</a></li>\n<li><a href=\"http://www.openfoundry.org/tw/tech-column/9319-docker-101\">http://www.openfoundry.org/tw/tech-column/9319-docker-101</a></li>\n</ul>","excerpt":"假設一個情境，如果今天我們的應用程式已經開發完成了，以前還要把 Source Code 拿去客戶端部署，還要設定一堆參數等等，或是今天內部開發完成，要進行測試，也要部署到測試機上，如今有 Docker 了，有沒有辦法，只用前面介紹的 run -p…"}},"pageContext":{"type":"posts","next":{"frontmatter":{"path":null,"title":"讓 ASP.NET MVC 執行於 Docker","tags":["ASP.NET MVC","Azure","Docker","Linux","Ubuntu","VM"]},"fields":{"slug":"/2015/07/30/讓-ASP-NET-MVC-執行於-Docker/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/讓-ASP-NET-MVC-執行於-Docker.md"},"previous":{"frontmatter":{"path":null,"title":"紀錄文 - Windows 10 發佈","tags":["Sky的IT碎碎念","Windows"]},"fields":{"slug":"/2015/07/31/紀錄文-Windows-10-發佈/"},"fileAbsolutePath":"/home/runner/work/blog.sanc.idv.tw/blog.sanc.idv.tw/src/posts/blog.sanc.idv.tw/紀錄文-Windows-10-發佈.md"}}}}